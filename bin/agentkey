#!/usr/bin/env node
// Create an agent key file
//Copyright MyCHIPs.org; See license in root of this package
// -----------------------------------------------------------------------------
// Usage: agentkey
//        agentkey pki/agents
const Fs = require('fs')
const Path = require('path')
const Os = require('os')
const Crypto = require('crypto')
const Hostname = Os.hostname()
const Extension = ".agk"
const sodium = require('sodium-native')

var argv = require('yargs')
  .alias('h','host')       .default('host',       process.env.MYCHIPS_PEERHOST || Hostname)
  .alias('p','port')       .default('port',       process.env.MYCHIPS_PEERPORT || '65430')
  .alias('s','peerServer')
  .argv

var pkidir = argv._.shift()
//console.log("host:", argv.host, "port:", argv.port, "pkidir:", argv.pkidir, "command:", command)

var keyPair = Crypto.generateKeyPairSync('ed25519')
  , { privateKey, publicKey} = keyPair
  , key = privateKey.export({format: 'jwk'})
  , pubB64u = key.x
  , pubBin = Buffer.from(pubB64u,'base64url')
  , saveKey = {
    host: argv.host,
    port: argv.port,
    key
  }
//console.log("KP:", keyPair, 'JK:', key, 'PK:', pubBin, 'len:', pubBin.length)

console.log(pubB64u)
if (pkidir)
  Fs.writeFileSync(Path.join(pkidir, pubB64u + Extension), JSON.stringify(saveKey))
