#!/bin/sh
#Build a private/public key pair and self-signed certificate for this server
#Copyright MyCHIPs.org; See license in root of this package
# -----------------------------------------------------------------------------
length=2048				#RSA Key length
type=spa				#Build application server keys by default
node=serv0				#Common name for the certificate we are building
basedir=$(pwd)				#Assume to be root of mychips package
HASH="sha256"

if [ ! -z "$1" ]; then			#Build keys for spa or data connections
    type="$1"
fi

if [ ! -z "$2" ]; then			#Specific machine the certificate is for
    node="$2"
fi

if ! cd pki; then
  echo "Can't find pki directory; Aborting"
  exit 1
fi

if [ ! -f example.conf ]; then
  echo "Can't find ssl configuration file; Aborting"
  exit 1
fi

if [ ! -d local ]; then
  mkdir local
fi
cd local

#Compare two files, return true if the first is newer than the second, or the second doesn't exist
function fresher() {
  if [ ! -f "$1" ]; then
    echo "Can't find source file: $1"
    exit 1
  fi
  [ ! -f "$2" -o "$1" -nt "$2" ]
}

conf="../local.conf"
if [ ! -f $conf ]; then
  conf="../example.conf"
fi

catype="${type}-ca"
caconf="${catype}-conf"			#Build a certificate authority configuration for this type
if fresher $conf $caconf; then
  cat ../ca1.conf >$caconf
  cat $conf |sed -e "s/%\.//" >>$caconf
  cat ../ca2.conf >>$caconf
  
  if fresher $caconf ${catype}.key; then			#Build private key for CA
    openssl genrsa -out ${catype}.key $length
    chmod og-rwx ${catype}.key
  fi
#  if fresher ${catype}.key ${catype}.pub; then			#Build public key for CA
#    openssl rsa -in ${catype}.key -pubout -out ${catype}.pub
#  fi
  if fresher $caconf ${catype}.crt || fresher ${catype}.key ${catype}.crt; then		#Build CA certificate
    openssl req -new -x509 -key ${catype}.key -out ${catype}.crt -config $caconf
  fi
#  if fresher ${catype}.crt ${catype}.txt; then			#Human readable
#    openssl x509 -in ${catype}.crt -text >${catype}.txt
#  fi
fi

nodetype="${type}-${node}"
nodeconf="${nodetype}-conf"				#Build configuration for this node
if fresher $conf $nodeconf; then
  cat ../node1.conf >$nodeconf
  cat $conf |sed -e "s/%\./${node}\./" >>$nodeconf
  cat ../node2.conf >>$nodeconf
fi

if fresher $nodeconf ${nodetype}.key; then			#Private key for node
  openssl genrsa -out ${nodetype}.key $length
  chmod og-rwx ${nodetype}.key
fi

#if fresher ${nodetype}.key ${nodetype}.pub; then		#Public key from private key
#  openssl rsa -in server_private_key.pem -pubout -out server_public_key.pem
#fi

#if fresher ${nodetype}.key ${nodetype}-crypt.pem; then		#Encrypt the private key
#  openssl rsa -in ${nodetype}.key -des3 -out ${nodetype}-crypt.pem
#fi

if fresher ${nodetype}.key ${nodetype}.crt || fresher $nodeconf ${nodetype}.crt; then		#Make a signed certificate
  openssl req -new -config $nodeconf -key ${nodetype}.key -$HASH -nodes -out ${nodetype}.csr

#More elaborate tracking:
  if [ ! -f index.txt ]; then touch index.txt; fi
  if [ ! -f serial.txt ]; then echo '01' >serial.txt; fi
  openssl ca -config $caconf -policy signing_policy -extensions signing_req \
    -batch -cert ${catype}.crt -keyfile ${catype}.key -outdir . \
    -out ${nodetype}.crt -notext -infiles ${nodetype}.csr

#Simpler? (untested)
#  openssl x509 -req -in ${nodetype}.csr -text -days 365 -CA ${catype}.crt -CAkey ${catype}.key -CAcreateserial -out ${nodetype}.crt

  rm ${nodetype}.csr ??.pem index.txt.attr *.old
fi
