Instructions to demonstrate reference code. (Oct, 2018)

On a Fedora linux machine:
- Install Postgres: 
  dnf install postgresql postgresql-server postgresql-devel postgresql-pltcl

- For wyseman:	(see wyseman/INSTALL for more details)
  dnf install rubygem-pg rubygem-tk gcc-c++	;As root
  gem install json				;As you

- Make a folder for out work:	mkdir devel; cd devel

- checkout: wyseman, wyselib, wylib from github:
  git clone https://github.com/gotchoices/wylib.git
  git clone https://github.com/gotchoices/wyseman.git
  git clone https://github.com/gotchoices/wyselib.git
  
- checkout mychips (currently on bitbucket):
  git clone https://kylebateman@bitbucket.org/kylebateman/mychips.git

  In wyseman, wylib, mychips, run: npm install

- Adjust settings in a file devel/setup to reflect out environment:

Example setup file:
---------------------------------------------------------------------  
  export LESS=eFRX		#For 'git diff' to work with colors
  export WYATTDB="$USER"	#Name of database you will be using
  export TCLLIBPATH=". $HOME/share/devel /usr/lib"
  export PATH="$PATH:$HOME/share/devel/wyseman/bin:$HOME/share/devel/mychips/bin"
  export NODE_PATH="$HOME/share/devel:/usr/lib/node_modules:./node_modules"
  export RUBYOPT="-I $HOME/share/devel/wyseman/lib -I $HOME/share/devel/mychips/lib"
  export RUBYLIB="$HOME/share/devel/js/wyseman/lib"
  
  if [ ! -h mychips/node_modules/wylib ]; then		#Link to development version
    ln -s ~/share/devel/wylib mychips/node_modules/wylib
  fi
---------------------------------------------------------------------  
  You must source this file (source devel/setup) in any session you use.
  
- Follow database setup notes in wyseman/README.pg (new)

- Testing:
  Can set NODE_DEBUG=debug (or silly) and observe logs in /var/tmp/mychips
  cd devel/mychips/test
  Adjust settings in test/settings.js for your environment
  npm run test-peercom
  npm run test-impexp
  npm run test-peer
  dropdb mychipsTestDB			#when finished
  
- Build mychips database:
  cd mychips/schema
  make all

- Sample configuration
  cd test/sample
  ./kickstart		#Generates a sample ticket in test/tmp/ticket.json

- Run development mode HTTP server to serve up the admin and client SPA's:
  npm run dev-hot

  Try connecting a browser at port 3000 of that machine:
  http://linux-box:3000/admin.html

- Run a data server to service SPA requests: (as a separate instance)
  npm run dev-server
  
  Try the connect button now in the admin SPA, connect to port 54320
  You should see the user management GUI
