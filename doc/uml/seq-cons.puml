@startuml
!include common.puml
$title(Chit Chain Consensus Protocol)
actor "Chit Issuer" as issuer
database "Issuer Model" as issModel
database "Subject Model" as subModel
'actor "Foil Holder" as client

alt Want to consense regarding new chit
  issuer	->>	issModel:	Issuer applies validating\nsignature to chit
  issModel	->>	issModel:	Add chit to local chain\ncalculate new endIdx, endHash
  issModel	->>	subModel:	Transmit upd chain message\nalong with new valid chit\nto subject
else Want to check specified checkpoint (which may be 0)
  issModel	->>	subModel:	Transmit upd chain message\ninclude endIdx, endHash
end

alt Command upd contains no chits
  subModel	->>	subModel:	Compare local hash\at specified index
  alt Hash matches
    subModel	->>	issModel:	Send ack with index, hash
  else hash doesn't match
    subModel	->>	issModel:	Send nak with index, local hash
  end

else We hold the foil
  subModel	->>	subModel:	Enter chit(s) at end of local chain
  alt Were chits targeted at end of our chain and hash agrees
    subModel	->>	issModel:	Send ack
  else Or were there other non-confirmed chits we have locally
    subModel	->>	issModel:	Send upd with our\nextra local chits
  else No extra chits but hash doesn't agree
    subModel	->>	issModel:	Send nak
  end
  subModel	->>	subModel:	Are chits targeted for end of our chain?
  
else We hold the stock
  subModel	->>	subModel:	Merge chits at specified\nlocations bumping as needed
  alt Does our new endHash agree
    subModel	->>	issModel:	Send ack
  else
    subModel	->>	issModel:	Send nak
  end
  subModel	->>	issModel:	Send upd with any chits\nthat got bumped in merge
end

alt Ack handling
  subModel	->>	issModel:	Send ack
  alt Does specified hash match our local values
    issModel	->>	issModel:	Set confIdx = endIdx\n(ratchet confirmed)
  end
  issModel	->>	subModel:	Send upd with any\nchits beyond confIdx

else Nak handling
  subModel	->>	issModel:	Send nak
  issModel	->>	issModel:	Re-evaluate my chain\nthrough specified index
  alt Is some portion of my chain corrupt/invalid?
    issModel	->>	issModel:	Set local confIdx back\nto end of valid chits
    issModel	->>	subModel:	Send req for all chits\nhigher than confIdx
  else
    alt Foil holder
      issModel	->>	issModel:	Enter error state\nCan't consense with stock
    else Stock holder
      issModel	->>	issModel:	Set confIdx back by factor
      issModel	->>	subModel:	Send req for all chits\nbeyond new confIdx
    end
  end
  
end

@enduml
