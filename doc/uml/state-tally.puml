@startuml
!include common.puml

$title(Tally State Diagram)
'state "void" as void

'States are determined by a combination of values, as defined here:
userVoid : Status: offer, Req->void
userAccept : Status: offer, Req->open
userDraft : Status: draft, Req->offer
userClose : Status: open, Req->close
state working {
  draft : Status: draft, Req: null
  draft : User: modify, sign, delete
  void : Status: void, Req: null
}
open : Status: open, Req: null
open : Have both signatures
close : Status: close, Req: null
peerProffer : Status: offer, Req: null
peerProffer : Peer signature only
peerProffer : User: accept, refuse, counter
userProffer : Status: offer, Req: null
userProffer : User signature only
closed : Status: closed, Req: null
closed : Balance is zero

'State transition rules:
[*] -[$user]-> draft : $trans($user,User or system\ndrafts new tally)
[*] -[$peer]-> peerProffer : $trans($peer,Receive new proposed tally,valid signature,Notify user)
working -[$user]-> userDraft : $trans($user,User signs tally,valid cert,Request offer)

draft -[$peer]-> draft : $trans($peer,Ticketed\ntally request,Have peer cert, Notify user)
userVoid -[$db]-> void : $trans($db,Req:void detected,'',Transmit Act:peerRefuse)

peerProffer -[$user]-> userVoid : $trans($user,Refuses tally, '', Request void)
peerProffer -[$user]-> userDraft : $trans($user,Modifies tally,valid signature, Request offer)
peerProffer -[$user]-> userAccept : $trans($user,Accepts tally,valid signature, Request open)

userAccept -[$db]-> open : $trans($db,req:open detected,'',Transmit act:peerAccept)

userDraft -[$db]-> userProffer : $trans($db,Req:offer detected,,Transmit Act:peerProffer)

userProffer -[$peer]-> open : $trans($peer, Receive peer acceptance)
userProffer -[$peer]-> void : $trans($peer,"Refused tally",Notify user)
userProffer -[$peer]-> peerProffer : $trans($peer,Receive modified tally,'',Notify user)
void -[$peer]-> peerProffer : $trans($peer,Receive modified tally,'',Notify user)

open -right[$user]-> userClose : $trans($user, Wants to close tally, '', Request close)
open -[$peer]-> close : $trans($peer,Receive peer\nclose request)
userClose -[$db]-> close : $trans($db,Req:close detected,'',Transmit act:peerClose)
close -right[$db]-> closed : $trans(DB,'(No explicit action)',Tally sum is zero)

'closed --> [*]

@enduml
