@startuml
!include common.puml

$title(Tally State Diagram)
state "P.offer.void" as pOfferVoid
state "P.offer.draft" as pOfferDraft
'state "B.offer.agree" as BOfferAgree
state "B.offer.open" as BOfferOpen
state "draft.offer" as draftOffer
state working {
  state "P.draft" as pDraft
  state "draft" as draft
  state "void" as void
}
state tradable {
  state "open" as open
  state "C.open" as cOpen
}
state "P.offer" as pOffer
state "H.offer" as hOffer
'state "H.agree" as hAgree
'state "B.agree" as bAgree
state "close" as close

'State details
P : Entry
H : Entry
pOfferVoid : Status: offer, Req: void
pOfferVoid : Agent: Action needed

pOfferDraft : Status: offer, Req: draft
pOfferDraft : Agent: Action needed

'BOfferAgree : Status: offer, Req: agree
'BOfferAgree : Agent: Action needed
BOfferOpen : Status: offer, Req: open
BOfferOpen : Agent: Action needed

draft : Status: draft, Req: null
draft : User: can modify, delete, invite

pDraft : Status: draft, Req: null
pDraft : Contains partner certificate
pDraft : User: can modify, delete, offer

draftOffer : Status: draft, Req: offer
draftOffer : Has only user signature
draftOffer : Agent: Action needed

void : Status: void, Req: null
void : User: can modify, clone

pOffer : Status: offer, Req: null
pOffer : Peer signature only
pOffer : User: can accept, refuse, revise

hOffer : Status: offer, Req: null
hOffer : User signature only
hOffer : User waits for peer

'hAgree : Status: agree, Req: null
'hAgree : Has user signature

'bAgree : Status: agree, Req: null
'bAgree : Has both signatures
'bAgree : Has also local agent ack

open : Status: open, Req: null
open : Must have both signatures
open : User: can request close

cOpen : Status: open, Req: null
cOpen : Closing chit present
cOpen : Can trade, waiting for zero

close : Status: close, Req: null
close : Non-zero balance

close : Status: close, Req: null
close : Balance is zero

'State transition rules:
H -[$user]-> draft : $trans($user,User (or system)\ndrafts new tally)
P -[$peer]-> pOffer : $trans($peer,Receive proposed tally,valid signature,Act: offer\nNotify user)
'[*] -[$user]-> draft : $trans($user,User (or system)\ndrafts new tally)
'[*] -[$peer]-> pOffer : $trans($peer,Receive proposed tally,valid signature,Act: offer\nNotify user)
draft -[$peer]-> pDraft : $trans($peer,Receive subject ticket,valid cert,Notify user)
pDraft -[$user]-> draftOffer : $trans($user,User signs tally,valid sig/certs,Request offer)

pOffer -[$user]-> pOfferVoid : $trans($user,Refuses tally, '', Request void)
pOfferVoid -[$db]-> void : $trans($db,Req:void detected,'',Transmit Act:void)

'pOffer -[$user]-> draftOffer : $trans($user,Modifies tally,valid signature, Request offer)
pOffer -[$user]-> pOfferDraft : $trans($user,Will revise tally,valid signature, Request draft)
pOfferDraft -[$db]-> pDraft : $trans($db,Req:draft detected,'',Transmit Act:draft)

'pOffer -[$user]-> BOfferAgree : $trans($user,Accepts tally,valid signature, Request agree)
pOffer -[$user]-> BOfferOpen : $trans($user,Accepts tally,valid signature, Request open)

'BOfferAgree -[$db]-> hAgree : $trans($db,Req:agree detected,'',Transmit Act:agree)
'hAgree -[$peer]-> open : $trans($peer, Receive peer ack, '', Act: open)
BOfferOpen -[$db]-> open : $trans($db,Req:agree detected,'',Transmit Act:open)

draftOffer -[$db]-> hOffer : $trans($db,Req:offer detected,,Transmit Act:offer)

hOffer -[$peer]-> open : $trans($peer, Receive peer acceptance, '', Act: open\nAlso transmit ack /Act: open)
'hOffer -[$peer]-> bAgree : $trans($peer, Receive peer acceptance, '', Act: agree\nAlso transmit ack /Act: agree)
'bAgree -[$peer]-> open : $trans($peer, Receive peer acceptance, '', Act: open)

hOffer -[$peer]-> void : $trans($peer,Receive peer refusal, '', Act: void; Notify user)
hOffer -[$peer]-> pOffer : $trans($peer,Receive modified tally, '', Act: offer; Notify user)
void -[$peer]-> pOffer : $trans($peer,Receive modified tally,'', Act: offer; Notify user)

open -right[$user]-> cOpen : $trans($user, Issues close/call chit, '', Set closing flag)
cOpen -right-> close : $trans(Internal,'(No explicit action)',Tally sum hit zero)

@enduml
