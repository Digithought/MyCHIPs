@startuml
!include common.puml

$title(Lift States)
state "draft.init" as draftInit
state "init.exec" as initExec
state "draft.part" as draftPart
state "draft.find" as draftFind
state "find.term" as findTerm
state resolvable {
  state exec
  state part
  state find
}

draftInit: Status: draft, Request: init
initExec: Status: init, Request: exec
'init:  Status: init, Request: null
draftFind:  Status: draft, Request: find
findTerm:  Status: find, Request: term
draftPart:  Status: draft, Request: part
exec:  Status: exec, Request: null
good:  Status: good, Request: null
part:  Status: part, Request: null
find:  Status: find, Request: null
void:  Status: void, Request: null

'State transition rules:
[*] -[$user]-> draftInit: $trans($user,User initiates linear lift\nRequest:init,'')
[*] --> draftInit: $trans(Agent,Automaton initiates circular lift\nRequest:init,'')
'draftInit -[$db]-> init: $trans($db, init request detected, '', Agent prepares/signs Lift\nObject Encodes destination)
draftInit -[$db]-> good: $trans($db, request->init, 'Internal route found', Execute lift locally)
draftInit -[$db]-> initExec: $trans($db, request->init, 'Internal route impossible', Ask agent for external lift\nRequest:exec)
initExec -[$db]-> exec: $trans($db, route detected,'',Task delegated to chipNet)

[*] -[$peer]-> [*]: $trans($peer,Receive Action:promise, Won't commit to lift)
[*] -[$peer]-> draftPart: $trans($peer,Receive Action:promise,Will commit to lift, 'Store lift/chits; Request:part;\nForward Action: promise')
[*] -[$peer]-> draftFind: $trans($peer,Receive Action:promise,Destination found locally, 'Store lift Request: term')

draftFind -[$db]-> findTerm: $trans($db,Detect find,'', Build draft lift\nNotify correct agent\nAction: find)
findTerm -[$db]-> find: $trans($db,Detect term,'', Reply to originator\nBuild chits\nAction: terminus)
draftPart -[$db]-> part: $trans($db,Detect part,'', Forward lift\nAction: promise)

[*] --> good: $trans(Agent, Call to local clearing\nlift function, Lift completes, Commit lift chits; Consense)

resolvable -up[$peer]-> good: $trans($peer,Receive referee signature, Verified Valid, Commit lift chits; Consense)
resolvable -[$peer]-> void: $trans($peer,Receive referee signature, Verified Void, Mark lift as void)

@enduml
