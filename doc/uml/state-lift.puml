@startuml
!include common.puml

$title(Lift States)
[*] --> none
state "No Lift" as none

'States are determined by a combination of values, as defined here:
draft: Stat: void, Req: draft
'init:  Stat: void, Req: init		'First implementation uses this.  Will try to avoid extra state in next version
seek:  Stat: seek, Req: N/A
term:  Stat: term, Req: N/A
call:  Stat: call, Req: N/A
good:  Stat: good, Req: N/A

state signable {
  pend:  Stat: pend, Req: N/A
  checkProp:  Stat: pend, Req: N/A, Time
  checkRef:  Stat: pend, Req: N/A, Time
}
void:  Stat: void, Req: N/A
local:  Stat: void, Req: local
relay:  Stat: void, Req: relay
timeCheck:  Stat: seek, Req: N/A, Time

'State transition rules:
none -[$user]-> draft: $trans($user,User initiates lift Req:draft,'')
'draft -[$db]-> init: $trans($db,draft detected,'',Forward Upstream Act:query)
draft -[$db]-> seek: $trans($db,draft detected,'',Send Upstream Act:query)

seek -[$peer]-> void: $trans($peer,Receive Act:fail,'','Lift failed; Notify referee, user')
seek -[$db]-> timeCheck: $trans($db,Local timeout,'', Lift expired?; Request status from referee)
timeCheck -[$peer]-> void: $trans($peer,Receive referee Act:timeout,'', 'Mark lift as expired')
timeCheck -[$peer]-> seek: $trans($peer,Receive referee Act:intime,'', 'Lift not yet expired')
seek -[$peer]-> term: $trans($peer,'Receive confirm from\ndestination Act:terminus','', 'Circuit good, freshen route')
term -[$db]-> call: $trans($db,Detect loopback,Lift still desirable, Request commit from referee)
term -[$db]-> call: $trans($db,Detect loopback,Change of mind, Notify referee of abort)
call -[$peer]-> good: $trans($peer,'Receive referee\nsignature Act:signed','', Commit lift chits; Consense)
call -[$peer]-> void: $trans($peer,Receive referee Act:timeout,'', 'Too late\nabandon lift\nMay try again with longer timeout')

none -[$peer]-> none: $trans($peer,Receive Act:query,Destination not found, Reply Act: failed)
none -[$peer]-> relay: $trans($peer,Receive Act:query,Route found for destination, 'Store lift Req:relay; Forward Act: query')
relay -[$db]-> pend: $trans($db,Detect relay,'', Forward lift Act: query)

none -[$peer]-> local: $trans($peer,Receive Act:query,Destination found locally, 'Store lift Req: dest')
local -[$db]-> pend: $trans($db,Detect relay,'', Reply to proposer Act: terminus)

signable -[$peer]-> good: $trans($peer,'Receive signature\nvia consensus')
pend -[$db]-> checkProp: $trans($db,Local timeout,'', Query Proposer)
checkProp -[$db]-> checkRef: $trans($db,Local timeout,'', Query Referee)
checkRef -[$db]-> pend: $trans($db,Local timeout,'', Keep trying forever)

signable -[$peer]-> good: $trans($peer,'Receive signature from\nProposer or Referee','', 'Commit lift chits; Consense')
signable -[$peer]-> void: $trans($peer,'Receive cancel from\nProposer or Referee','', 'Void lift record/chits')
signable -[$peer]-> pend: $trans($peer,'Receive intime from\nProposer or Referee','', 'Void lift record/chits')

@enduml
