@startuml
!include common.puml
$title(Payment Lift Discovery and Execution)
actor "User" as user
database "Payor Model" as orgDB
control "Payor Agent" as orgAgent
control "ChipNet" as chipNet
collections "Upstream Sites" as upSites

user		->>	orgDB:		Request payment lift to named peer\nrequest=init
orgDB		->>	orgAgent:	Trig: Notify payor's agent\naction=init

alt Check that user's signature is good
  orgAgent	->>	orgDB:		Agent signs lift record\nstatus=init, recipe=local
else Can't verify user's signature
  orgAgent	->>	orgDB:		Mark payment as void
  orgDB		->>	user:		Notify user  
  note over orgAgent,orgDB: Exit
end

alt Check if payee agent is local to our site\nand a suitable local route is found
  orgDB		->>	orgDB:		Generate/commit local chits\nCommit lift, status = good
  orgDB		->>	user:		Notify user  
  note over orgAgent,orgDB: Exit
else Will try external lift
  orgDB		->>	orgDB:		request = route
  orgDB		->>	orgAgent:	Trig: Get list of outbound segments\nNotify agent; action=route
end

orgAgent	->>	chipNet:	Launch route\ndiscovery session
chipNet		<->	upSites:	ChipNet negotiates pathway

alt ChipNet can't find suitable route
  chipNet	->>	orgAgent:	No route possible
  orgAgent	->>	orgDB:		Update lift record, status=void
  orgDB		->>	user:		Notify user  
  note over orgAgent,orgDB: Exit

else  
  chipNet	->>	orgAgent:	Suitable route(s) found
  orgAgent	->>	orgDB:		Update lift\nstatus=route, recipe=orig
  orgDB		->>	orgDB:		Select optimal plan\nrequest=orig
end

orgDB		->>	orgAgent:	Trig: Notify agent; action=orig
orgAgent	->>	chipNet:	Initiate lift transaction

chipNet		->>	orgAgent:	Time to build draft chits
orgAgent	<->	orgDB:		Build draft chits
orgAgent	->>	chipNet:	Provisional chits created
chipNet		<->	upSites:	ChipNet negotiates lift

alt Lift succeeds
  chipNet	->>	orgAgent:	Lift succeeded
  orgAgent	->>	orgDB:		Record/commit chits, status=open

else  
  chipNet	->>	orgAgent:	Lift failed
  orgAgent	->>	orgDB:		Rollback draft chits, status=void
end

orgDB		->>	user:		Notify user of\nsuccess/failure
  
@enduml
