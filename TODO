TODO:

Immediate:
X- Make simnet allow command line switches
X- Make simnet launch debugging windows
- Change glocal cdi concept to chip address which resembles email/domain
-  kylebateman@mychips.com, mychips.com/kylebateman
- Implement tokens for users/peer connections
- Update agent2 to publish/access connection tokens in public DB
- Some tallies are not getting through state transitions to open
- Some chits are not getting through state transitions to open
- Can I mark a chit as refused, other than the signature?
- Agent2 spends CHIPs with more sensitivity to current net worth
- Change to aborted state after max number of retries/time (peer.js)
- Text descriptions for tallies/chits
- Style definitions for tallies/chits
- 
- 
Lift modeling:
X- System for instantiating multiple databases, multiple servers
X- Central repository where agent users can choose from peers, not in their own DB
X- DB support for peers, which are not local users
X- Make paths_v properly detect paths to/from peers not on the same DB
- Make table to model outside paths
- Create remote query protocol to get foreign pathway stub data (how to model)
- Query adjoining DB's for pathway information
- Create state machine for tracking queries' status
- Populate local DB with stubs/paths for remote peers
- Can join inside paths with outside paths
- Create remote lift protocol
- Design state machine to execute distributed lifts
- 
WyattERP:
- Move makecert to wyclif package (still works in mychips?)
X- Column sort numbers are not showing on preview
- Wyseman won't open dbe for chit view (no wmd?)
X- Get wysegi working (where does it go)?
- Test SSL connection to postgres
- Where to best put:
X-   Wysegi
-   WyattERP Admin console
-   WyattERP User (all available functions in tabs)
-   Reports work in WyattERP
X-   clientinfo ajax (wyclif)
- 
MyCHIPs General:
X- Re-enable wysegi serving (where does wysegi live now?)
X- Column sort in dbp throws error.  Why? (Only on first connect.  Bug seems to go away on reload.)
- Enable user permission editor in admin app user tab
- 
- Strdoc:
- Can I edit/author documents now?
- What if I import a document into strdoc and then try to update?  (Do an insert?)
- Make source field I can enable with a button; Turns off other fields
- Preview mode includes language to refer to the included document (in current language?)
- Implement a few basic contracts using strdoc widget
- Harden contract views so you can only update working contracts (test)
- Implement publish procedure in backend (share code between reports)
- Begin wyseman library of server-side query builder functions (that reports can use)
- 
- How to serve my documents in HTML-viewable form if .html suffix given to web server
- Coded errors in wyseman.js get translated "badTuples" "badUpdate" etc
- 
- Network simulator
X-   Install default postgres configuration (limit access to local processes)
X-   Launch spa/clif server
-   Apply schema changes to the database (wyseman versioning?)
-   Launch any necessary peer servers (can this happen automatically?)
- 

General roadmap:
X- Can create/exchange tallies, chits with a peer
X- Create agent client module to model user, reads/writes/listens direct with DB
- Improve agent model (see below)
- Can spawn N user agents against M server instances
X- Create graphical canvas view of all users balance sheets
X- Implement single-db lift algorithm
- Implement multi-db lift algorithm
- Implement basic contracts (author, display, publish)
X- Review copyright; Should we limit free to people who respect a base contract?
X- Harden SPA connections, implement user ID's, schema permissions
- Implement digital signatures for tallies, chits, contracts, lifts
- Implement encrypted peer communications using noise protocol
- Harden database schema, implementing full permission structure
- Implement schema version control strategy in wyseman
X- Make Admin SPA GUI useable, replace all functions of mc_admin
- Make Wylib User SPA GUI useable
- Rollout
- Create more optimal User SPA GUI for mobile
- Implement async email/text notifications
- Implement native mobile user app
- Implement tally confirmations
- Implement standardized export/import of user accounts via Admin interface
- Implement lock-down mode
- Implement backup/restore among peers
- 

User agent process:
X- Learns about other peers through central repository
X- Some users are in same DB, others in a different one
- Work harder if my accrued receivables get low  
- Raise vendor accumulation limits if my receivables get high
- Create lift incentives if I get stale imbalances
- Extend credit to peers based only on their credit-worthiness
-   Be more random on search for new client tally connection
-   Find a foil tally and pay some credits on it
-   Agent establishes reasonable number of tallies with other users
-   If I already have a tally with you, don't do another one
- Try installing/running with SL and NA
-   Fill in tally limits data for all users
-   Each agent pays his downstreamers periodically
- Fill in buy/sell orders data for all users (Can I derive this from existing tally limits)
- Develop state machine for data queries
-   Can you find a path to user X?
-   Store data about known pathways
- Develop state machine for lift execution
-   Would you participate in a lift destined for user X, for Y CHIPs?
X- Dummy sql to create initial draft tally
- Dummy sql files to simulate other required user actions
- User agent process runs randomized strategy
- 

Compatibility:
- Firefox issues:
- Firefox: Can't connect to wss:/ if certificate is insecure, even if exception granted by user
- Firefox: Drag/drop preview window highlights all text in the dragged window
- 

DB/schema:
X- Change base.ent to make id, unique to ent_type
X- Make consolidated key target field: P100, A100, G100
X- Adjust all subordinate tables to point to the target field
- Test json tally import/export
- Only allow minimum, required access/permissions
- Can run equally well from schema source build, or from compiled schema build
- 

Peer-to-peer:
- Socket connections should time out and close after an idle period
X- Create state diagram for chits
X- Implement chit state map that runs under standard state interpretor
- Cache chit totals for each tally, on the fly
- State diagram for lifts
- Table for buy/sell preferences
- Make command handler for peer server
- Make ssl socket server for peer interface
- Handle user command to issue stock ticket
- User agent reads stock ticket, connects to peer
- Can user stock ticket to establish stock tally with issuing peer
- Can connect to multiple ID's over same peer server port
- Separate SSL certificate for each peer connection
- User initiated commands:
-   Initiate tally with (peer)
-   Send money to (peer)
-   Send invoice to (peer)
-   Set sell target of (issue)
-   Set buy target for (issue)
-   Get balance summary (date)
-   Get income/expense summary (start, end)
- 

Server:
- Show graphical view of all users connected via a set of specified SQL servers
- Server listens for authenticated peer connections
- Peers can connect and validate
- Server initiates trade requests
- 
- Admin SPA:
- Optimize SVG user graph reactivity.  Only update what has changed.
- Server listens on ticket port for specified timeout period
- User can connect/initialize using ticket
- Can export user to JSON
- Can export user to paper, w/ QR code
-  Admin can edit, create documents
-   

Wylib:
- I get errors on reload when dbe and dbs both open on a dbp
- Implement default load column in views, wylib uses it if present
- Implement default order column in views, wylib uses it if present
- Update audit tables to store changes as JSON
- Automatic reconnect retry working right
- Handle state changes correct when connecting to new/different backend
X- Wylib login/validation for SPA client/server connections
- Wylib report
-   Can print from strdoc component
-   Can print out tally contract (with QR code paper backup)?
- Can export dbp view to a spreadsheet
- Report graphics (i.e. ticket) can export to graphic, attach to email, etc.
- Support for spreadsheet reports?
- Should we use a spreadsheet widget with file export?
X- Write wmd files for wyselib parameters
- Write wmd defaults for other wyselib/base files?
- Can launch actions from a dbp with multiple keys
- Should each tab have a menu that launches new previews, and can save/restore state?
- 

- Wyseman:
- Can apply incremental delta scripts to go from one release to another
- 

- User SPA:
-   Can grab ticket
-   Can generate, configure keys
-   Save data in localStorage
-   User can generate tickets for other peers
-   Server listens for peer ticket connections
-   Can register buy/sell parameters
- 

Advanced Features:
- Implement writing a check:
-   User mobile clients can talk to each other in absense of internet or server connection
-   They exchange a check
-   The check is 'cashed' or recorded once the network comes back up
-   

Old TODOs:
- Request for a certificate be signed by others I trust?
- Cert must link public key to a chip ID, and to a distinct person
- 
- Launch processes to:
-   Initiate lift queries
-   Freshen our pathway cache
- 
- User asynchronous functions:
-   Approve/reject invoice
-   Approve/reject new tally
-   Alarm, warning
-   Alarm, lockdown
- 
- Peer commands:
-   Request link to parties that have your issue for sale
-   Request link to parties that have your issue for sale
-   Pass my request through to a referenced peer
-   Request info about a pathway to (peer)
