diff --git a/node_modules/react-native-vision-camera/README.md b/node_modules/react-native-vision-camera/README.md
index 7978600..f9f65bf 100644
--- a/node_modules/react-native-vision-camera/README.md
+++ b/node_modules/react-native-vision-camera/README.md
@@ -9,7 +9,7 @@
   <br />
   <br />
   <blockquote><b>ðŸ“¸ The Camera library that sees the vision.</b></blockquote>
-  <pre align="center">npm i <a href="https://www.npmjs.com/package/react-native-vision-camera">react-native-vision-camera</a><br/>npx pod-install                 </pre>
+  <pre align="center">npm i <a href="https://www.npmjs.com/package/react-native-vision-camera">react-native-vision-camera</a>@2<br/>npx pod-install                   </pre>
   <a align="center" href='https://ko-fi.com/F1F8CLXG' target='_blank'>
     <img height='36' style='border:0px;height:36px;' src='https://az743702.vo.msecnd.net/cdn/kofi2.png?v=0' border='0' alt='Buy Me a Coffee at ko-fi.com' />
   </a>
@@ -30,10 +30,20 @@
   <img align="right" width="35%" src="docs/static/img/example.png">
 </div>
 
+### V2
+
+This is the V2 branch of VisionCamera (`2.x.x` on npm). Since VisionCamera V3 (current main, `3.x.x` on npm) features a full codebase rewrite on Android and a huge refactor on the iOS codebase, I will try to provide limited support for VisionCamera V2 for a while until V3 has been tested enough to be considered fully stable.
+
+> [!NOTE]
+> The documentation hosted on https://react-native-vision-camera.com represents the documentation for V3. For V2, read the [docs/](docs/) folder here.
+
+VisionCamera V2 requires React Native 0.70+, iOS 11+, Android API 21+.
+
+
 ### Documentation
 
-* [Guides](https://mrousavy.github.io/react-native-vision-camera/docs/guides)
-* [API](https://mrousavy.github.io/react-native-vision-camera/docs/api)
+* [Guides](https://react-native-vision-camera.com/docs/guides)
+* [API](https://react-native-vision-camera.com/docs/api)
 * [Example](./example/)
 
 ### Features
@@ -41,7 +51,7 @@
 * Photo, Video and Snapshot capture
 * Customizable devices and multi-cameras (smoothly zoom out to "fish-eye" camera)
 * Customizable FPS
-* [Frame Processors](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors) (JS worklets to run QR-Code scanning, facial recognition, AI object detection, realtime video chats, ...)
+* [Frame Processors](https://react-native-vision-camera.com/docs/guides/frame-processors) (JS worklets to run QR-Code scanning, facial recognition, AI object detection, realtime video chats, ...)
 * Smooth zooming (Reanimated)
 * Fast pause and resume
 * HDR & Night modes
@@ -78,4 +88,4 @@ If you're integrating VisionCamera in a production app, consider [funding this p
 
 <br />
 
-#### ðŸš€ Get started by [setting up permissions](https://mrousavy.github.io/react-native-vision-camera/docs/guides/)!
+#### ðŸš€ Get started by [setting up permissions](https://react-native-vision-camera.com/docs/guides/)!
diff --git a/node_modules/react-native-vision-camera/android/CMakeLists.txt b/node_modules/react-native-vision-camera/android/CMakeLists.txt
index 46056d0..db25ea7 100644
--- a/node_modules/react-native-vision-camera/android/CMakeLists.txt
+++ b/node_modules/react-native-vision-camera/android/CMakeLists.txt
@@ -1,13 +1,26 @@
+project(VisionCamera)
 cmake_minimum_required(VERSION 3.4.1)
 
 set (CMAKE_VERBOSE_MAKEFILE ON)
-set (CMAKE_CXX_STANDARD 14)
-set (CMAKE_CXX_FLAGS "-DFOLLY_NO_CONFIG=1 -DFOLLY_HAVE_CLOCK_GETTIME=1 -DFOLLY_HAVE_MEMRCHR=1 -DFOLLY_USE_LIBCPP=1 -DFOLLY_MOBILE=1 -DON_ANDROID -DONANDROID -DFOR_HERMES=${FOR_HERMES}")
+set (CMAKE_CXX_STANDARD 17)
+
+if(${REACT_NATIVE_VERSION} GREATER_EQUAL 71)
+        include("${NODE_MODULES_DIR}/react-native/ReactAndroid/cmake-utils/folly-flags.cmake")
+        add_compile_options(${folly_FLAGS})
+else()
+        set (CMAKE_CXX_FLAGS "-DFOLLY_NO_CONFIG=1 -DFOLLY_HAVE_CLOCK_GETTIME=1 -DFOLLY_HAVE_MEMRCHR=1 -DFOLLY_USE_LIBCPP=1 -DFOLLY_MOBILE=1 -DON_ANDROID -DONANDROID -DFOR_HERMES=${FOR_HERMES}")
+endif()
+
 
 set (PACKAGE_NAME "VisionCamera")
 set (BUILD_DIR ${CMAKE_SOURCE_DIR}/build)
-set (RN_SO_DIR ${NODE_MODULES_DIR}/react-native/ReactAndroid/src/main/jni/first-party/react/jni)
-
+if(${REACT_NATIVE_VERSION} GREATER_EQUAL 71)
+        # Consume shared libraries and headers from prefabs
+        find_package(fbjni REQUIRED CONFIG)
+        find_package(ReactAndroid REQUIRED CONFIG)
+else()
+        set (RN_SO_DIR ${NODE_MODULES_DIR}/react-native/ReactAndroid/src/main/jni/first-party/react/jni)
+endif()
 # VisionCamera shared
 
 if(${REACT_NATIVE_VERSION} LESS 66)
@@ -36,103 +49,114 @@ add_library(
 )
 
 # includes
+if(${REACT_NATIVE_VERSION} GREATER_EQUAL 71)
+        target_include_directories(
+                ${PACKAGE_NAME}
+                PRIVATE
+                "${NODE_MODULES_DIR}/react-native/ReactAndroid/src/main/jni/react/turbomodule"
+                "${NODE_MODULES_DIR}/react-native/ReactCommon"
+                "${NODE_MODULES_DIR}/react-native/ReactCommon/callinvoker"
+                "${NODE_MODULES_DIR}/react-native/ReactCommon/jsi"
+                "${NODE_MODULES_DIR}/react-native/ReactCommon/react/renderer/graphics/platform/cxx"
+                "${NODE_MODULES_DIR}/react-native/ReactCommon/runtimeexecutor"
+                "${NODE_MODULES_DIR}/react-native/ReactCommon/yoga"
+                "src/main/cpp"
+        )
+else()
+        file (GLOB LIBFBJNI_INCLUDE_DIR "${BUILD_DIR}/fbjni-*-headers.jar/")
+
+        target_include_directories(
+                ${PACKAGE_NAME}
+                PRIVATE
+                # --- fbjni ---
+                "${LIBFBJNI_INCLUDE_DIR}"
+                # --- Third Party (required by RN) ---
+                "${BUILD_DIR}/third-party-ndk/boost"
+                "${BUILD_DIR}/third-party-ndk/double-conversion"
+                "${BUILD_DIR}/third-party-ndk/folly"
+                "${BUILD_DIR}/third-party-ndk/glog"
+                # --- React Native ---
+                "${NODE_MODULES_DIR}/react-native/React"
+                "${NODE_MODULES_DIR}/react-native/React/Base"
+                "${NODE_MODULES_DIR}/react-native/ReactAndroid/src/main/jni"
+                "${NODE_MODULES_DIR}/react-native/ReactAndroid/src/main/java/com/facebook/react/turbomodule/core/jni"
+                "${NODE_MODULES_DIR}/react-native/ReactCommon"
+                "${NODE_MODULES_DIR}/react-native/ReactCommon/callinvoker"
+                "${NODE_MODULES_DIR}/react-native/ReactCommon/jsi"
+                "${NODE_MODULES_DIR}/hermes-engine/android/include/"
+                ${INCLUDE_JSI_CPP} # only on older RN versions
+                ${INCLUDE_JSIDYNAMIC_CPP} # only on older RN versions
+                "src/main/cpp"
+        )
+endif()
 
-file (GLOB LIBFBJNI_INCLUDE_DIR "${BUILD_DIR}/fbjni-*-headers.jar/")
 
-target_include_directories(
-        ${PACKAGE_NAME}
-        PRIVATE
-        # --- fbjni ---
-        "${LIBFBJNI_INCLUDE_DIR}"
-        # --- Third Party (required by RN) ---
-        "${BUILD_DIR}/third-party-ndk/boost"
-        "${BUILD_DIR}/third-party-ndk/double-conversion"
-        "${BUILD_DIR}/third-party-ndk/folly"
-        "${BUILD_DIR}/third-party-ndk/glog"
-        # --- React Native ---
-        "${NODE_MODULES_DIR}/react-native/React"
-        "${NODE_MODULES_DIR}/react-native/React/Base"
-        "${NODE_MODULES_DIR}/react-native/ReactAndroid/src/main/jni"
-        "${NODE_MODULES_DIR}/react-native/ReactAndroid/src/main/java/com/facebook/react/turbomodule/core/jni"
-        "${NODE_MODULES_DIR}/react-native/ReactCommon"
-        "${NODE_MODULES_DIR}/react-native/ReactCommon/callinvoker"
-        "${NODE_MODULES_DIR}/react-native/ReactCommon/jsi"
-        "${NODE_MODULES_DIR}/hermes-engine/android/include/"
-        ${INCLUDE_JSI_CPP} # only on older RN versions
-        ${INCLUDE_JSIDYNAMIC_CPP} # only on older RN versions
-        # --- Reanimated ---
-        # Old
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/headers/AnimatedSensor"
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/headers/Tools"
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/headers/SpecTools"
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/headers/SharedItems"
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/headers/Registries"
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/headers/LayoutAnimations"
-        # New
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/AnimatedSensor"
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/Tools"
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/SpecTools"
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/SharedItems"
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/Registries"
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/LayoutAnimations"
-        "${NODE_MODULES_DIR}/react-native-reanimated/Common/cpp/hidden_headers"
-        "src/main/cpp"
-)
 
 # find libraries
 
 file (GLOB LIBRN_DIR "${BUILD_DIR}/react-native-0*/jni/${ANDROID_ABI}")
 
 if(${FOR_HERMES})
-        string(APPEND CMAKE_CXX_FLAGS " -DJS_RUNTIME_HERMES=1")
+        string(APPEND CMAKE_CXX_FLAGS " -DFOR_HERMES=1")
 
-        if(${REACT_NATIVE_VERSION} LESS 69)
-                # From `hermes-engine` npm package
+        if(${REACT_NATIVE_VERSION} GREATER_EQUAL 71)
+                find_package(hermes-engine REQUIRED CONFIG)
+        elseif(${REACT_NATIVE_VERSION} GREATER_EQUAL 69)
+                # Bundled Hermes from module `com.facebook.react:hermes-engine` or project `:ReactAndroid:hermes-engine`
                 target_include_directories(
                         ${PACKAGE_NAME}
                         PRIVATE
-                        "${JS_RUNTIME_DIR}/android/include"
+                        "${JS_RUNTIME_DIR}/API"
+                        "${JS_RUNTIME_DIR}/public"
                 )
         else()
-                # Bundled Hermes from module `com.facebook.react:hermes-engine` or project `:ReactAndroid:hermes-engine`
+                # From `hermes-engine` npm package
                 target_include_directories(
                         ${PACKAGE_NAME}
                         PRIVATE
-                        "${JS_RUNTIME_DIR}/API"
-                        "${JS_RUNTIME_DIR}/public"
+                        "${JS_RUNTIME_DIR}/android/include"
                 )
         endif()
 
-        target_link_libraries(
-                ${PACKAGE_NAME}
-                "${BUILD_DIR}/third-party-ndk/hermes/jni/${ANDROID_ABI}/libhermes.so"
-        )
-        file (GLOB LIBREANIMATED_DIR "${BUILD_DIR}/react-native-reanimated-*-hermes.aar/jni/${ANDROID_ABI}")
+        if(${REACT_NATIVE_VERSION} GREATER_EQUAL 71)
+                target_link_libraries(
+                        ${PACKAGE_NAME}
+                        "hermes-engine::libhermes"
+                )
+        else()
+                target_link_libraries(
+                        ${PACKAGE_NAME}
+                        "${BUILD_DIR}/third-party-ndk/hermes/jni/${ANDROID_ABI}/libhermes.so"
+                )
+        endif()
 else()
         file (GLOB LIBJSC_DIR "${BUILD_DIR}/android-jsc*.aar/jni/${ANDROID_ABI}")
 
-        # Use JSC
-        find_library(
-                JS_ENGINE_LIB
-                jscexecutor
-                PATHS ${LIBRN_DIR}
-                NO_CMAKE_FIND_ROOT_PATH
-        )
+        if(${REACT_NATIVE_VERSION} GREATER_EQUAL 71)
+                set(JS_ENGINE_LIB ReactAndroid::jscexecutor)
+        else()
+                # Use JSC
+                find_library(
+                        JS_ENGINE_LIB
+                        jscexecutor
+                        PATHS ${LIBRN_DIR}
+                        NO_CMAKE_FIND_ROOT_PATH
+                )
+        endif()
         target_link_libraries(
                 ${PACKAGE_NAME}
                 ${JS_ENGINE_LIB}
         )
-
-        # Use Reanimated JSC
-        file (GLOB LIBREANIMATED_DIR "${BUILD_DIR}/react-native-reanimated-*-jsc.aar/jni/${ANDROID_ABI}")
 endif()
 
-find_library(
-        FBJNI_LIB
-        fbjni
-        PATHS ${LIBRN_DIR}
-        NO_CMAKE_FIND_ROOT_PATH
-)
+if(${REACT_NATIVE_VERSION} LESS 71)
+        find_library(
+                FBJNI_LIB
+                fbjni
+                PATHS ${LIBRN_DIR}
+                NO_CMAKE_FIND_ROOT_PATH
+        )
+endif()
 
 if(${REACT_NATIVE_VERSION} LESS 69)
         find_library(
@@ -141,7 +165,7 @@ if(${REACT_NATIVE_VERSION} LESS 69)
                 PATHS ${LIBRN_DIR}
                 NO_CMAKE_FIND_ROOT_PATH
         )
-else()
+elseif(${REACT_NATIVE_VERSION} LESS 71)
         find_library(
                 FOLLY_LIB
                 folly_runtime
@@ -150,14 +174,25 @@ else()
         )
 endif()
 
-find_library(
-        REACT_NATIVE_JNI_LIB
-        reactnativejni
-        PATHS ${LIBRN_DIR}
-        NO_CMAKE_FIND_ROOT_PATH
-)
+if(${REACT_NATIVE_VERSION} LESS 71)
+        find_library(
+                REACT_NATIVE_JNI_LIB
+                reactnativejni
+                PATHS ${LIBRN_DIR}
+                NO_CMAKE_FIND_ROOT_PATH
+        )
+endif()
 
-if(${REACT_NATIVE_VERSION} LESS 66)
+if(${REACT_NATIVE_VERSION} GREATER_EQUAL 71)
+        target_link_libraries(
+                ${PACKAGE_NAME}
+                ReactAndroid::folly_runtime
+                ReactAndroid::glog
+                ReactAndroid::jsi
+                ReactAndroid::reactnativejni
+                fbjni::fbjni
+        )
+elseif(${REACT_NATIVE_VERSION} LESS 66)
         # JSI lib didn't exist on RN 0.65 and before. Simply omit it.
         set (JSI_LIB "")
 else()
@@ -170,12 +205,7 @@ else()
         )
 endif()
 
-find_library(
-        REANIMATED_LIB
-        reanimated
-        PATHS ${LIBREANIMATED_DIR}
-        NO_CMAKE_FIND_ROOT_PATH
-)
+find_package(react-native-reanimated REQUIRED CONFIG)
 
 find_library(
         LOG_LIB
@@ -188,7 +218,7 @@ target_link_libraries(
         ${PACKAGE_NAME}
         ${LOG_LIB}
         ${JSI_LIB}
-        ${REANIMATED_LIB}
+        react-native-reanimated::reanimated
         ${REACT_NATIVE_JNI_LIB}
         ${FBJNI_LIB}
         ${FOLLY_LIB}
diff --git a/node_modules/react-native-vision-camera/android/build.gradle b/node_modules/react-native-vision-camera/android/build.gradle
index 0b623d5..d308e15 100644
--- a/node_modules/react-native-vision-camera/android/build.gradle
+++ b/node_modules/react-native-vision-camera/android/build.gradle
@@ -50,7 +50,7 @@ def REACT_NATIVE_VERSION = reactProperties.getProperty("VERSION_NAME").split("\\
 def FOR_HERMES = System.getenv("FOR_HERMES") == "True"
 rootProject.getSubprojects().forEach({project ->
   if (project.plugins.hasPlugin("com.android.application")) {
-    FOR_HERMES = project.ext.react.enableHermes
+    FOR_HERMES = REACT_NATIVE_VERSION >= 71 && project.hermesEnabled || project.ext.react.enableHermes
   }
 })
 def jsRuntimeDir = {
@@ -83,14 +83,12 @@ buildscript {
     classpath 'de.undercouch:gradle-download-task:4.1.2'
     // noinspection DifferentKotlinGradleVersion
     classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
-    classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
   }
 }
 
 apply plugin: 'com.android.library'
 apply plugin: 'de.undercouch.download'
 apply plugin: 'kotlin-android'
-apply plugin: 'kotlin-android-extensions'
 
 def getExtOrDefault(name) {
   return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties['VisionCamera_' + name]
@@ -110,18 +108,18 @@ def resolveBuildType() {
     return buildType
 }
 
-// plugin.js file only exists since REA v2.
-def hasReanimated2 = file("${nodeModules}/react-native-reanimated/plugin.js").exists()
+// WorkletRuntime.h file only exists since Reanimated 3.5.0.
+def hasReanimated3 = file("${nodeModules}/react-native-reanimated/Common/cpp/ReanimatedRuntime/WorkletRuntime.h").exists()
 def disableFrameProcessors = rootProject.ext.has("disableFrameProcessors") ? rootProject.ext.get("disableFrameProcessors").asBoolean() : false
-def ENABLE_FRAME_PROCESSORS = hasReanimated2 && !disableFrameProcessors
+def ENABLE_FRAME_PROCESSORS = hasReanimated3 && !disableFrameProcessors
 
 if (ENABLE_FRAME_PROCESSORS) {
   logger.warn("VisionCamera: Frame Processors are enabled! Building C++ part...")
 } else {
   if (disableFrameProcessors) {
     logger.warn("VisionCamera: Frame Processors are disabled because the user explicitly disabled it ('disableFrameProcessors=${disableFrameProcessors}'). C++ part will not be built.")
-  } else if (!hasReanimated2) {
-    logger.warn("VisionCamera: Frame Processors are disabled because REA v2 does not exist. C++ part will not be built.")
+  } else if (!hasReanimated3) {
+    logger.warn("VisionCamera: Frame Processors are disabled because Reanimated 3.5.0+ is not installed. C++ part will not be built.")
   }
 }
 
@@ -130,6 +128,12 @@ android {
   buildToolsVersion getExtOrDefault('buildToolsVersion')
   ndkVersion getExtOrDefault('ndkVersion')
 
+  if (REACT_NATIVE_VERSION >= 71) {
+    buildFeatures {
+      prefab true
+    }
+  }
+
   defaultConfig {
     minSdkVersion 21
     targetSdkVersion getExtOrIntegerDefault('targetSdkVersion')
@@ -163,7 +167,17 @@ android {
 
   packagingOptions {
     // Exclude all Libraries that are already present in the user's app (through React Native or by him installing REA)
-    excludes = ["**/libc++_shared.so", "**/libfbjni.so", "**/libjsi.so", "**/libreactnativejni.so", "**/libfolly_json.so", "**/libreanimated.so", "**/libjscexecutor.so", "**/libhermes.so", "**/libfolly_runtime.so"]
+    excludes = ["**/libc++_shared.so",
+                "**/libfbjni.so",
+                "**/libjsi.so",
+                "**/libreactnativejni.so",
+                "**/libfolly_json.so",
+                "**/libreanimated.so",
+                "**/libjscexecutor.so",
+                "**/libhermes.so",
+                "**/libfolly_runtime.so",
+                "**/libglog.so",
+    ]
     // META-INF is duplicate by CameraX.
     exclude "META-INF/**"
   }
@@ -261,39 +275,45 @@ repositories {
 def kotlin_version = getExtOrDefault('kotlinVersion')
 
 dependencies {
-  // noinspection GradleDynamicVersion
-  implementation 'com.facebook.react:react-native:+'
+  if (REACT_NATIVE_VERSION >= 71) {
+      implementation "com.facebook.react:react-android:"
+      implementation "com.facebook.react:hermes-android:"
+  } else {
+      // noinspection GradleDynamicVersion
+      implementation 'com.facebook.react:react-native:+'
+  }
 
   if (ENABLE_FRAME_PROCESSORS) {
     implementation project(':react-native-reanimated')
 
-    //noinspection GradleDynamicVersion
-    extractHeaders("com.facebook.fbjni:fbjni:+:headers")
-    //noinspection GradleDynamicVersion
-    extractJNI("com.facebook.fbjni:fbjni:+")
+    if (REACT_NATIVE_VERSION < 71) {
+      //noinspection GradleDynamicVersion
+      extractHeaders("com.facebook.fbjni:fbjni:0.4.0:headers")
+      //noinspection GradleDynamicVersion
+      extractJNI("com.facebook.fbjni:fbjni:0.4.0")
 
-    def rnAarMatcher = "**/react-native/**/*${resolveBuildType()}.aar"
-    if (REACT_NATIVE_VERSION < 69) {
-      rnAarMatcher = "**/**/*.aar"
+      def rnAarMatcher = "**/react-native/**/*${resolveBuildType()}.aar"
+      if (REACT_NATIVE_VERSION < 69) {
+        rnAarMatcher = "**/**/*.aar"
+      }
+
+      def rnAAR = fileTree("$reactNative/android").matching({ it.include rnAarMatcher }).singleFile
+      def jscAAR = fileTree("${nodeModules}/jsc-android/dist/org/webkit/android-jsc").matching({ it.include "**/**/*.aar" }).singleFile
+      extractJNI(files(rnAAR, jscAAR))
     }
-    def rnAAR = fileTree("$reactNative/android").matching({ it.include rnAarMatcher }).singleFile
-    def jscAAR = fileTree("${nodeModules}/jsc-android/dist/org/webkit/android-jsc").matching({ it.include "**/**/*.aar" }).singleFile
-    def jsEngine = FOR_HERMES ? "hermes" : "jsc"
-    def reaAAR = "${nodeModules}/react-native-reanimated/android/react-native-reanimated-${REACT_NATIVE_VERSION}-${jsEngine}.aar"
-    extractJNI(files(rnAAR, jscAAR, reaAAR))
   }
 
   implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
   implementation "org.jetbrains.kotlinx:kotlinx-coroutines-guava:1.5.2"
   implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"
 
-  implementation "androidx.camera:camera-core:1.1.0-beta02"
-  implementation "androidx.camera:camera-camera2:1.1.0-beta02"
-  implementation "androidx.camera:camera-lifecycle:1.1.0-beta02"
-  implementation "androidx.camera:camera-video:1.1.0-beta02"
+  implementation "androidx.camera:camera-core:1.1.0"
+  implementation "androidx.camera:camera-camera2:1.1.0"
+  implementation "androidx.camera:camera-lifecycle:1.1.0"
+  implementation "androidx.camera:camera-video:1.1.0"
 
-  implementation "androidx.camera:camera-view:1.1.0-beta02"
-  implementation "androidx.camera:camera-extensions:1.1.0-beta02"
+  implementation "androidx.camera:camera-view:1.1.0"
+  implementation "androidx.camera:camera-extensions:1.1.0"
 
   implementation "androidx.exifinterface:exifinterface:1.3.3"
 }
@@ -600,11 +620,13 @@ if (ENABLE_FRAME_PROCESSORS) {
 
   tasks.whenTaskAdded { task ->
     if (!task.name.contains('Clean') && (task.name.contains('externalNative') || task.name.contains('CMake'))) {
-      task.dependsOn(extractAARHeaders)
       task.dependsOn(extractJNIFiles)
-      task.dependsOn(prepareJSC)
-      task.dependsOn(prepareHermes)
-      task.dependsOn(prepareThirdPartyNdkHeaders)
+      if (REACT_NATIVE_VERSION < 71) {
+        task.dependsOn(extractAARHeaders)
+        task.dependsOn(prepareThirdPartyNdkHeaders)
+        task.dependsOn(prepareJSC)
+        task.dependsOn(prepareHermes)
+      }
     }
   }
 }
diff --git a/node_modules/react-native-vision-camera/android/gradle.properties b/node_modules/react-native-vision-camera/android/gradle.properties
index d171611..9b4f1f7 100644
--- a/node_modules/react-native-vision-camera/android/gradle.properties
+++ b/node_modules/react-native-vision-camera/android/gradle.properties
@@ -13,7 +13,7 @@
 #Fri Feb 19 20:46:14 CET 2021
 VisionCamera_buildToolsVersion=30.0.0
 VisionCamera_compileSdkVersion=31
-VisionCamera_kotlinVersion=1.5.30
+VisionCamera_kotlinVersion=1.6.20
 VisionCamera_targetSdkVersion=31
 VisionCamera_ndkVersion=21.4.7075529
 android.enableJetifier=true
diff --git a/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.cpp b/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.cpp
index ebbf3ef..89ddf95 100644
--- a/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.cpp
+++ b/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.cpp
@@ -8,12 +8,6 @@
 #include <utility>
 #include <string>
 
-#include "RuntimeDecorator.h"
-#include "RuntimeManager.h"
-#include "reanimated-headers/AndroidScheduler.h"
-#include "reanimated-headers/AndroidErrorHandler.h"
-
-#include "MakeJSIRuntime.h"
 #include "CameraView.h"
 #include "FrameHostObject.h"
 #include "JSIJNIConversion.h"
@@ -55,7 +49,6 @@ TSelf vision::FrameProcessorRuntimeManager::initHybrid(
   auto runtime = reinterpret_cast<jsi::Runtime*>(jsRuntimePointer);
   auto jsCallInvoker = jsCallInvokerHolder->cthis()->getCallInvoker();
   auto scheduler = std::shared_ptr<VisionCameraScheduler>(androidScheduler->cthis());
-  scheduler->setJSCallInvoker(jsCallInvoker);
 
   return makeCxxInstance(jThis, runtime, jsCallInvoker, scheduler);
 }
@@ -65,16 +58,8 @@ void vision::FrameProcessorRuntimeManager::initializeRuntime() {
                       "Initializing Vision JS-Runtime...");
 
   // create JSI runtime and decorate it
-  auto runtime = makeJSIRuntime();
-  reanimated::RuntimeDecorator::decorateRuntime(*runtime, "FRAME_PROCESSOR");
-  runtime->global().setProperty(*runtime, "_FRAME_PROCESSOR",
-                                jsi::Value(true));
 
   // create REA runtime manager
-  auto errorHandler = std::make_shared<reanimated::AndroidErrorHandler>(scheduler_);
-  _runtimeManager = std::make_unique<reanimated::RuntimeManager>(std::move(runtime),
-                                                                 errorHandler,
-                                                                 scheduler_);
 
   __android_log_write(ANDROID_LOG_INFO, TAG,
                       "Initialized Vision JS-Runtime!");
@@ -86,6 +71,11 @@ global_ref<CameraView::javaobject> FrameProcessorRuntimeManager::findCameraViewB
   return make_global(weakCameraView);
 }
 
+void FrameProcessorRuntimeManager::registerPlugins() {
+  static const auto registerPluginsMethod = javaPart_->getClass()->getMethod<void()>("registerPlugins");
+  registerPluginsMethod(javaPart_.get());
+}
+
 void FrameProcessorRuntimeManager::logErrorToJS(const std::string& message) {
   if (!this->jsCallInvoker_) {
     return;
@@ -105,16 +95,18 @@ void FrameProcessorRuntimeManager::logErrorToJS(const std::string& message) {
   });
 }
 
-void FrameProcessorRuntimeManager::setFrameProcessor(jsi::Runtime& runtime,
+void FrameProcessorRuntimeManager::setFrameProcessor(jsi::Runtime& rnRuntime,
                                                      int viewTag,
-                                                     const jsi::Value& frameProcessor) {
+                                                     const jsi::Value& frameProcessor,
+                                                     const jsi::Value& workletRuntimeValue) {
   __android_log_write(ANDROID_LOG_INFO, TAG,
                       "Setting new Frame Processor...");
 
-  if (!_runtimeManager || !_runtimeManager->runtime) {
-    throw jsi::JSError(runtime,
-                       "setFrameProcessor(..): VisionCamera's RuntimeManager is not yet initialized!");
-  }
+  workletRuntime_ = reanimated::extractWorkletRuntime(rnRuntime, workletRuntimeValue);
+  jsi::Runtime &visionRuntime = workletRuntime_->getJSIRuntime();
+  visionRuntime.global().setProperty(visionRuntime, "_FRAME_PROCESSOR", jsi::Value(true));
+
+  registerPlugins();
 
   // find camera view
   auto cameraView = findCameraViewById(viewTag);
@@ -123,27 +115,18 @@ void FrameProcessorRuntimeManager::setFrameProcessor(jsi::Runtime& runtime,
   // convert jsi::Function to a ShareableValue (can be shared across runtimes)
   __android_log_write(ANDROID_LOG_INFO, TAG,
                       "Adapting Shareable value from function (conversion to worklet)...");
-  auto worklet = reanimated::ShareableValue::adapt(runtime,
-                                                   frameProcessor,
-                                                   _runtimeManager.get());
+  auto shareableWorklet = reanimated::extractShareableOrThrow<reanimated::ShareableWorklet>(rnRuntime, frameProcessor);
   __android_log_write(ANDROID_LOG_INFO, TAG, "Successfully created worklet!");
 
   scheduler_->scheduleOnUI([=]() {
       // cast worklet to a jsi::Function for the new runtime
-      auto& rt = *_runtimeManager->runtime;
-      auto function = std::make_shared<jsi::Function>(worklet->getValue(rt).asObject(rt).asFunction(rt));
-
       // assign lambda to frame processor
-      cameraView->cthis()->setFrameProcessor([this, &rt, function](jni::alias_ref<JImageProxy::javaobject> frame) {
-          try {
-            // create HostObject which holds the Frame (JImageProxy)
-            auto hostObject = std::make_shared<FrameHostObject>(frame);
-            function->callWithThis(rt, *function, jsi::Object::createFromHostObject(rt, hostObject));
-          } catch (jsi::JSError& jsError) {
-            auto message = "Frame Processor threw an error: " + jsError.getMessage();
-            __android_log_write(ANDROID_LOG_ERROR, TAG, message.c_str());
-            this->logErrorToJS(message);
-          }
+      cameraView->cthis()->setFrameProcessor([=](jni::alias_ref<JImageProxy::javaobject> frame) {
+          // create HostObject which holds the Frame (JImageProxy)
+          auto frameHostObject = std::make_shared<FrameHostObject>(frame);
+          jsi::Runtime &runtime = workletRuntime_->getJSIRuntime();
+          auto hostObject = jsi::Object::createFromHostObject(runtime, frameHostObject);
+          workletRuntime_->runGuarded(shareableWorklet, hostObject);
       });
 
       __android_log_write(ANDROID_LOG_INFO, TAG, "Frame Processor set!");
@@ -189,10 +172,15 @@ void FrameProcessorRuntimeManager::installJSIBindings() {
       throw jsi::JSError(runtime,
                          "Camera::setFrameProcessor: Second argument ('frameProcessor') must be a function!");
     }
+    if (!arguments[2].isObject()) {
+      throw jsi::JSError(runtime,
+                         "Camera::setFrameProcessor: Third argument ('workletRuntime') must be an object!");
+    }
 
     double viewTag = arguments[0].asNumber();
     const jsi::Value& frameProcessor = arguments[1];
-    this->setFrameProcessor(runtime, static_cast<int>(viewTag), frameProcessor);
+    const jsi::Value& workletRuntimeValue = arguments[2];
+    this->setFrameProcessor(runtime, static_cast<int>(viewTag), frameProcessor, workletRuntimeValue);
 
     return jsi::Value::undefined();
   };
@@ -235,11 +223,11 @@ void FrameProcessorRuntimeManager::installJSIBindings() {
 
 void FrameProcessorRuntimeManager::registerPlugin(alias_ref<JFrameProcessorPlugin::javaobject> plugin) {
   // _runtimeManager might never be null, but we can never be too sure.
-  if (!_runtimeManager || !_runtimeManager->runtime) {
+  if (!workletRuntime_) {
     throw std::runtime_error("Tried to register plugin before initializing JS runtime! Call `initializeRuntime()` first.");
   }
 
-  auto& runtime = *_runtimeManager->runtime;
+  auto& runtime = workletRuntime_->getJSIRuntime();
 
   // we need a strong reference on the plugin, make_global does that.
   auto pluginGlobal = make_global(plugin);
diff --git a/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.h b/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.h
index 14d3701..cd66f76 100644
--- a/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.h
+++ b/node_modules/react-native-vision-camera/android/src/main/cpp/FrameProcessorRuntimeManager.h
@@ -10,8 +10,7 @@
 #include <memory>
 #include <string>
 
-#include "RuntimeManager.h"
-#include "reanimated-headers/AndroidScheduler.h"
+#include "WorkletRuntime.h"
 
 #include "CameraView.h"
 #include "VisionCameraScheduler.h"
@@ -46,10 +45,11 @@ class FrameProcessorRuntimeManager : public jni::HybridClass<FrameProcessorRunti
   jni::global_ref<FrameProcessorRuntimeManager::javaobject> javaPart_;
   jsi::Runtime* runtime_;
   std::shared_ptr<facebook::react::CallInvoker> jsCallInvoker_;
-  std::shared_ptr<reanimated::RuntimeManager> _runtimeManager;
+  std::shared_ptr<reanimated::WorkletRuntime> workletRuntime_;
   std::shared_ptr<vision::VisionCameraScheduler> scheduler_;
 
   jni::global_ref<CameraView::javaobject> findCameraViewById(int viewId);
+  void registerPlugins();
   void initializeRuntime();
   void installJSIBindings();
   void registerPlugin(alias_ref<JFrameProcessorPlugin::javaobject> plugin);
@@ -57,7 +57,8 @@ class FrameProcessorRuntimeManager : public jni::HybridClass<FrameProcessorRunti
 
   void setFrameProcessor(jsi::Runtime& runtime,                 // NOLINT(runtime/references)
                          int viewTag,
-                         const jsi::Value& frameProcessor);
+                         const jsi::Value& frameProcessor,
+                         const jsi::Value& workletRuntimeValue);
   void unsetFrameProcessor(int viewTag);
 };
 
diff --git a/node_modules/react-native-vision-camera/android/src/main/cpp/MakeJSIRuntime.h b/node_modules/react-native-vision-camera/android/src/main/cpp/MakeJSIRuntime.h
deleted file mode 100644
index 39045bd..0000000
--- a/node_modules/react-native-vision-camera/android/src/main/cpp/MakeJSIRuntime.h
+++ /dev/null
@@ -1,30 +0,0 @@
-//
-// Created by Marc Rousavy on 06.07.21.
-//
-
-#pragma once
-
-#include <jsi/jsi.h>
-#include <memory>
-
-#if FOR_HERMES
-  // Hermes
-  #include <hermes/hermes.h>
-#else
-  // JSC
-  #include <jsi/JSCRuntime.h>
-#endif
-
-namespace vision {
-
-using namespace facebook;
-
-static std::unique_ptr<jsi::Runtime> makeJSIRuntime() {
-  #if FOR_HERMES
-  return facebook::hermes::makeHermesRuntime();
-  #else
-  return facebook::jsc::makeJSCRuntime();
-  #endif
-}
-
-} // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/src/main/cpp/VisionCameraScheduler.cpp b/node_modules/react-native-vision-camera/android/src/main/cpp/VisionCameraScheduler.cpp
index 3f065a5..0032b39 100644
--- a/node_modules/react-native-vision-camera/android/src/main/cpp/VisionCameraScheduler.cpp
+++ b/node_modules/react-native-vision-camera/android/src/main/cpp/VisionCameraScheduler.cpp
@@ -4,10 +4,13 @@
 
 #include "VisionCameraScheduler.h"
 #include <fbjni/fbjni.h>
+#include <fbjni/NativeRunnable.h>
+#include <utility>
 
 namespace vision {
 
 using namespace facebook;
+
 using TSelf = jni::local_ref<VisionCameraScheduler::jhybriddata>;
 
 TSelf VisionCameraScheduler::initHybrid(jni::alias_ref<jhybridobject> jThis) {
@@ -15,27 +18,14 @@ TSelf VisionCameraScheduler::initHybrid(jni::alias_ref<jhybridobject> jThis) {
 }
 
 void VisionCameraScheduler::scheduleOnUI(std::function<void()> job) {
-  // 1. add job to queue
-  uiJobs.push(job);
-  scheduleTrigger();
-}
-
-void VisionCameraScheduler::scheduleTrigger() {
-  // 2. schedule `triggerUI` to be called on the java thread
-  static auto method = javaPart_->getClass()->getMethod<void()>("scheduleTrigger");
-  method(javaPart_.get());
-}
-
-void VisionCameraScheduler::triggerUI() {
-  // 3. call job we enqueued in step 1.
-  auto job = uiJobs.pop();
-  job();
+  static const auto method = javaPart_->getClass()->getMethod<void(jni::JRunnable::javaobject)>("scheduleOnUI");
+  auto jrunnable = jni::JNativeRunnable::newObjectCxxArgs(std::move(job));
+  method(javaPart_.get(), jrunnable.get());
 }
 
 void VisionCameraScheduler::registerNatives() {
   registerHybrid({
     makeNativeMethod("initHybrid", VisionCameraScheduler::initHybrid),
-    makeNativeMethod("triggerUI", VisionCameraScheduler::triggerUI),
   });
 }
 
diff --git a/node_modules/react-native-vision-camera/android/src/main/cpp/VisionCameraScheduler.h b/node_modules/react-native-vision-camera/android/src/main/cpp/VisionCameraScheduler.h
index a05c3c9..5a65a2d 100644
--- a/node_modules/react-native-vision-camera/android/src/main/cpp/VisionCameraScheduler.h
+++ b/node_modules/react-native-vision-camera/android/src/main/cpp/VisionCameraScheduler.h
@@ -4,8 +4,6 @@
 
 #pragma once
 
-#include "Scheduler.h"
-#include <ReactCommon/CallInvokerHolder.h>
 #include <jni.h>
 #include <fbjni/fbjni.h>
 
@@ -13,26 +11,21 @@ namespace vision {
 
 using namespace facebook;
 
-class VisionCameraScheduler : public reanimated::Scheduler, public jni::HybridClass<VisionCameraScheduler> {
-public:
+class VisionCameraScheduler : public jni::HybridClass<VisionCameraScheduler> {
+ public:
   static auto constexpr kJavaDescriptor = "Lcom/mrousavy/camera/frameprocessor/VisionCameraScheduler;";
   static jni::local_ref<jhybriddata> initHybrid(jni::alias_ref<jhybridobject> jThis);
   static void registerNatives();
 
   // schedules the given job to be run on the VisionCamera FP Thread at some future point in time
-  void scheduleOnUI(std::function<void()> job) override;
+  void scheduleOnUI(std::function<void()> job);
 
-private:
+ private:
   friend HybridBase;
   jni::global_ref<VisionCameraScheduler::javaobject> javaPart_;
 
   explicit VisionCameraScheduler(jni::alias_ref<VisionCameraScheduler::jhybridobject> jThis):
     javaPart_(jni::make_global(jThis)) {}
-
-  // Schedules a call to `triggerUI` on the VisionCamera FP Thread
-  void scheduleTrigger();
-  // Calls the latest job in the job queue
-  void triggerUI() override;
 };
 
 } // namespace vision
diff --git a/node_modules/react-native-vision-camera/android/src/main/cpp/reanimated-headers/AndroidErrorHandler.h b/node_modules/react-native-vision-camera/android/src/main/cpp/reanimated-headers/AndroidErrorHandler.h
deleted file mode 100644
index fd45154..0000000
--- a/node_modules/react-native-vision-camera/android/src/main/cpp/reanimated-headers/AndroidErrorHandler.h
+++ /dev/null
@@ -1,30 +0,0 @@
-// copied from https://github.com/software-mansion/react-native-reanimated/blob/master/android/src/main/cpp/headers/AndroidErrorHandler.h
-
-#pragma once
-
-#include "ErrorHandler.h"
-#include "AndroidScheduler.h"
-#include "Scheduler.h"
-#include <jni.h>
-#include <memory>
-#include <fbjni/fbjni.h>
-#include "Logger.h"
-
-namespace reanimated
-{
-
-  class AndroidErrorHandler : public JavaClass<AndroidErrorHandler>, public ErrorHandler {
-    std::shared_ptr<ErrorWrapper> error;
-    std::shared_ptr<Scheduler> scheduler;
-    void raiseSpec() override;
-  public:
-    static auto constexpr kJavaDescriptor = "Lcom/swmansion/reanimated/AndroidErrorHandler;";
-    AndroidErrorHandler(
-        std::shared_ptr<Scheduler> scheduler);
-    std::shared_ptr<Scheduler> getScheduler() override;
-    std::shared_ptr<ErrorWrapper> getError() override;
-    void setError(std::string message) override;
-    virtual ~AndroidErrorHandler() {}
-  };
-
-}
diff --git a/node_modules/react-native-vision-camera/android/src/main/cpp/reanimated-headers/AndroidScheduler.h b/node_modules/react-native-vision-camera/android/src/main/cpp/reanimated-headers/AndroidScheduler.h
deleted file mode 100644
index e96887c..0000000
--- a/node_modules/react-native-vision-camera/android/src/main/cpp/reanimated-headers/AndroidScheduler.h
+++ /dev/null
@@ -1,37 +0,0 @@
-// copied from https://github.com/software-mansion/react-native-reanimated/blob/master/android/src/main/cpp/headers/AndroidScheduler.h
-
-#pragma once
-
-#include <jni.h>
-#include <fbjni/fbjni.h>
-#include <jsi/jsi.h>
-#include <react/jni/CxxModuleWrapper.h>
-#include <react/jni/JMessageQueueThread.h>
-#include "Scheduler.h"
-
-namespace reanimated {
-
-  using namespace facebook;
-
-  class AndroidScheduler : public jni::HybridClass<AndroidScheduler> {
-  public:
-    static auto constexpr kJavaDescriptor = "Lcom/swmansion/reanimated/Scheduler;";
-    static jni::local_ref<jhybriddata> initHybrid(jni::alias_ref<jhybridobject> jThis);
-    static void registerNatives();
-
-    std::shared_ptr<Scheduler> getScheduler() { return scheduler_; }
-
-    void scheduleOnUI();
-
-  private:
-    friend HybridBase;
-
-    void triggerUI();
-
-    jni::global_ref<AndroidScheduler::javaobject> javaPart_;
-    std::shared_ptr<Scheduler> scheduler_;
-
-    explicit AndroidScheduler(jni::alias_ref<AndroidScheduler::jhybridobject> jThis);
-  };
-
-}
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraViewModule.kt b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraViewModule.kt
index 7672b15..fb85308 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraViewModule.kt
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/CameraViewModule.kt
@@ -181,7 +181,7 @@ class CameraViewModule(reactContext: ReactApplicationContext) : ReactContextBase
 
         val cameraDevices: WritableArray = Arguments.createArray()
 
-        manager.cameraIdList.forEach loop@{ id ->
+        manager.cameraIdList.filter{ id -> id.toIntOrNull() != null }.forEach loop@{ id ->
           val cameraSelector = CameraSelector.Builder().byID(id).build()
 
           val characteristics = manager.getCameraCharacteristics(id)
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/Errors.kt b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/Errors.kt
index b81fe17..06aefa3 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/Errors.kt
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/Errors.kt
@@ -40,7 +40,7 @@ class NoCameraDeviceError : CameraError("device", "no-device", "No device was se
 class InvalidCameraDeviceError(cause: Throwable) : CameraError("device", "invalid-device", "The given Camera device could not be found for use-case binding!", cause)
 class ParallelVideoProcessingNotSupportedError(cause: Throwable) : CameraError("device", "parallel-video-processing-not-supported", "The given LEGACY Camera device does not support parallel " +
   "video processing (`video={true}` + `frameProcessor={...}`). Disable either `video` or `frameProcessor`. To find out if a device supports parallel video processing, check the `supportsParallelVideoProcessing` property on the CameraDevice. " +
-  "See https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop for more information.", cause)
+  "See https://react-native-vision-camera.com/docs/guides/devices#the-supportsparallelvideoprocessing-prop for more information.", cause)
 
 class FpsNotContainedInFormatError(fps: Int) : CameraError("format", "invalid-fps", "The given FPS were not valid for the currently selected format. Make sure you select a format which `frameRateRanges` includes $fps FPS!")
 class HdrNotContainedInFormatError() : CameraError(
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/FrameProcessorPlugin.java b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/FrameProcessorPlugin.java
index 54e445d..8b73345 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/FrameProcessorPlugin.java
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/FrameProcessorPlugin.java
@@ -18,7 +18,7 @@ public abstract class FrameProcessorPlugin {
      * The actual Frame Processor plugin callback. Called for every frame the ImageAnalyzer receives.
      * @param image The CameraX ImageProxy. Don't call .close() on this, as VisionCamera handles that.
      * @return You can return any primitive, map or array you want. See the
-     * <a href="https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors-plugins-overview#types">Types</a>
+     * <a href="https://react-native-vision-camera.com/docs/guides/frame-processors-plugins-overview#types">Types</a>
      * table for a list of supported types.
      */
     @DoNotStrip
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/FrameProcessorRuntimeManager.kt b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/FrameProcessorRuntimeManager.kt
index ebad5f6..c0a8b23 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/FrameProcessorRuntimeManager.kt
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/FrameProcessorRuntimeManager.kt
@@ -43,12 +43,6 @@ class FrameProcessorRuntimeManager(context: ReactApplicationContext, frameProces
       mHybridData = initHybrid(context.javaScriptContextHolder.get(), holder, mScheduler!!)
       initializeRuntime()
 
-      Log.i(TAG, "Installing Frame Processor Plugins...")
-      Plugins.forEach { plugin ->
-        registerPlugin(plugin)
-      }
-      Log.i(TAG, "Successfully installed ${Plugins.count()} Frame Processor Plugins!")
-
       Log.i(TAG, "Installing JSI Bindings on JS Thread...")
       context.runOnJSQueueThread {
         installJSIBindings()
@@ -67,6 +61,17 @@ class FrameProcessorRuntimeManager(context: ReactApplicationContext, frameProces
     return view ?: throw ViewNotFoundError(viewId)
   }
 
+  @Suppress("unused")
+  @DoNotStrip
+  @Keep
+  fun registerPlugins() {
+    Log.i(TAG, "Installing Frame Processor Plugins...")
+    Plugins.forEach { plugin ->
+      registerPlugin(plugin)
+    }
+    Log.i(TAG, "Successfully installed ${Plugins.count()} Frame Processor Plugins!")
+  }
+
   // private C++ funcs
   private external fun initHybrid(
     jsContext: Long,
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/VisionCameraScheduler.java b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/VisionCameraScheduler.java
index 4a96564..b25d8be 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/VisionCameraScheduler.java
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/frameprocessor/VisionCameraScheduler.java
@@ -17,11 +17,10 @@ public class VisionCameraScheduler {
     }
 
     private native HybridData initHybrid();
-    private native void triggerUI();
 
     @SuppressWarnings("unused")
     @DoNotStrip
-    private void scheduleTrigger() {
-        frameProcessorThread.submit(this::triggerUI);
+    private void scheduleOnUI(Runnable runnable) {
+        frameProcessorThread.submit(runnable);
     }
 }
diff --git a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/utils/CameraCharacteristicsUtils.kt b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/utils/CameraCharacteristicsUtils.kt
index f9a39f5..545505b 100644
--- a/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/utils/CameraCharacteristicsUtils.kt
+++ b/node_modules/react-native-vision-camera/android/src/main/java/com/mrousavy/camera/utils/CameraCharacteristicsUtils.kt
@@ -26,7 +26,6 @@ val Size35mm = Size(36, 24)
  * * [Ultra-Wide-Angle Lens (wikipedia)](https://en.wikipedia.org/wiki/Ultra_wide_angle_lens)
  */
 fun CameraCharacteristics.getDeviceTypes(): ReadableArray {
-  // TODO: Check if getDeviceType() works correctly, even for logical multi-cameras
   val focalLengths = this.get(CameraCharacteristics.LENS_INFO_AVAILABLE_FOCAL_LENGTHS)!!
   val sensorSize = this.get(CameraCharacteristics.SENSOR_INFO_PHYSICAL_SIZE)!!
 
@@ -35,17 +34,19 @@ fun CameraCharacteristics.getDeviceTypes(): ReadableArray {
 
   val deviceTypes = Arguments.createArray()
 
-  val containsTelephoto = focalLengths.any { l -> (l * cropFactor) > 35 } // TODO: Telephoto lenses are > 85mm, but we don't have anything between that range..
-  // val containsNormalLens = focalLengths.any { l -> (l * cropFactor) > 35 && (l * cropFactor) <= 55 }
-  val containsWideAngle = focalLengths.any { l -> (l * cropFactor) >= 24 && (l * cropFactor) <= 35 }
-  val containsUltraWideAngle = focalLengths.any { l -> (l * cropFactor) < 24 }
-
-  if (containsTelephoto)
-    deviceTypes.pushString("telephoto-camera")
-  if (containsWideAngle)
-    deviceTypes.pushString("wide-angle-camera")
-  if (containsUltraWideAngle)
-    deviceTypes.pushString("ultra-wide-angle-camera")
+  focalLengths.forEach { focalLength ->
+    // scale to the 35mm film standard
+    val l = focalLength * cropFactor
+    when {
+      // https://en.wikipedia.org/wiki/Ultra_wide_angle_lens
+      l < 24f -> deviceTypes.pushString("ultra-wide-angle-camera")
+      // https://en.wikipedia.org/wiki/Wide-angle_lens
+      l in 24f..43f -> deviceTypes.pushString("wide-angle-camera")
+      // https://en.wikipedia.org/wiki/Telephoto_lens
+      l > 43f -> deviceTypes.pushString("telephoto-camera")
+      else -> throw Error("Invalid focal length! (${focalLength}mm)")
+    }
+  }
 
   return deviceTypes
 }
diff --git a/node_modules/react-native-vision-camera/ios/CameraView+Orientation.swift b/node_modules/react-native-vision-camera/ios/CameraView+Orientation.swift
index 5c6db1f..e647b8e 100644
--- a/node_modules/react-native-vision-camera/ios/CameraView+Orientation.swift
+++ b/node_modules/react-native-vision-camera/ios/CameraView+Orientation.swift
@@ -10,18 +10,9 @@ import Foundation
 import UIKit
 
 extension CameraView {
-  /// Returns the current _interface_ orientation of the main window
-  private var windowInterfaceOrientation: UIInterfaceOrientation {
-    if #available(iOS 13.0, *) {
-      return UIApplication.shared.windows.first?.windowScene?.interfaceOrientation ?? .unknown
-    } else {
-      return UIApplication.shared.statusBarOrientation
-    }
-  }
-
   /// Orientation of the input connection (preview)
   private var inputOrientation: UIInterfaceOrientation {
-    return windowInterfaceOrientation
+    return .portrait
   }
 
   // Orientation of the output connections (photo, video, frame processor)
@@ -37,25 +28,17 @@ extension CameraView {
   }
 
   internal func updateOrientation() {
-    // Updates the Orientation for all rotable connections (outputs) as well as for the preview layer
-    DispatchQueue.main.async {
-      // `windowInterfaceOrientation` and `videoPreviewLayer` should only be accessed from UI thread
-      let isMirrored = self.videoDeviceInput?.device.position == .front
-
-      self.videoPreviewLayer.connection?.setInterfaceOrientation(self.inputOrientation)
+    // Updates the Orientation for all rotable
+    let isMirrored = self.videoDeviceInput?.device.position == .front
 
-      let connectionOrientation = self.outputOrientation
-      self.cameraQueue.async {
-        // Run those updates on cameraQueue since they can be blocking.
-        self.captureSession.outputs.forEach { output in
-          output.connections.forEach { connection in
-            if connection.isVideoMirroringSupported {
-              connection.automaticallyAdjustsVideoMirroring = false
-              connection.isVideoMirrored = isMirrored
-            }
-            connection.setInterfaceOrientation(connectionOrientation)
-          }
+    let connectionOrientation = self.outputOrientation
+    self.captureSession.outputs.forEach { output in
+      output.connections.forEach { connection in
+        if connection.isVideoMirroringSupported {
+          connection.automaticallyAdjustsVideoMirroring = false
+          connection.isVideoMirrored = isMirrored
         }
+        connection.setInterfaceOrientation(connectionOrientation)
       }
     }
   }
diff --git a/node_modules/react-native-vision-camera/ios/CameraView+RecordVideo.swift b/node_modules/react-native-vision-camera/ios/CameraView+RecordVideo.swift
index 7fdf962..0c5807c 100644
--- a/node_modules/react-native-vision-camera/ios/CameraView+RecordVideo.swift
+++ b/node_modules/react-native-vision-camera/ios/CameraView+RecordVideo.swift
@@ -202,8 +202,8 @@ extension CameraView: AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureAud
         recordingSession.appendBuffer(sampleBuffer, type: .video, timestamp: CMSampleBufferGetPresentationTimeStamp(sampleBuffer))
       case is AVCaptureAudioDataOutput:
         let timestamp = CMSyncConvertTime(CMSampleBufferGetPresentationTimeStamp(sampleBuffer),
-                                          from: audioCaptureSession.masterClock!,
-                                          to: captureSession.masterClock!)
+                                          from: audioCaptureSession.masterClock ?? CMClockGetHostTimeClock(),
+                                          to: captureSession.masterClock ?? CMClockGetHostTimeClock())
         recordingSession.appendBuffer(sampleBuffer, type: .audio, timestamp: timestamp)
       default:
         break
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPlugin.h b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPlugin.h
index 9408774..9966f98 100644
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPlugin.h	
+++ b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorPlugin.h	
@@ -53,7 +53,7 @@ objc_name : NSObject<FrameProcessorPluginBase>
 @end                                                                                \
 @implementation objc_name (FrameProcessorPlugin)                                    \
                                                                                     \
-+(void)load                                                                          \
+__attribute__((constructor)) static void VISION_CONCAT(initialize_, objc_name)()                                                                    \
 {                                                                                   \
   [FrameProcessorPluginRegistry addFrameProcessorPlugin:@"__" @ #name callback:^id(Frame* frame, NSArray<id>* args) {    \
     return [objc_name callback:frame withArgs:args];                               \
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorRuntimeManager.mm b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorRuntimeManager.mm
index 3841b20..726b715 100644
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorRuntimeManager.mm	
+++ b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorRuntimeManager.mm	
@@ -21,23 +21,19 @@
 
 #ifndef VISION_CAMERA_DISABLE_FRAME_PROCESSORS
   #if __has_include(<RNReanimated/NativeReanimatedModule.h>)
-    #if __has_include(<RNReanimated/RuntimeManager.h>)
-      #import <RNReanimated/RuntimeManager.h>
-      #import <RNReanimated/RuntimeDecorator.h>
-      #import <RNReanimated/REAIOSErrorHandler.h>
+    #if __has_include(<RNReanimated/WorkletRuntime.h>)
+      #import <RNReanimated/WorkletRuntime.h>
       #import "VisionCameraScheduler.h"
       #define ENABLE_FRAME_PROCESSORS
     #else
-      #warning Your react-native-reanimated version is not compatible with VisionCamera, Frame Processors are disabled. Make sure you're using reanimated 2.2.0 or above!
+      #warning Your react-native-reanimated version is not compatible with VisionCamera, Frame Processors are disabled. Make sure you're using react-native-reanimated 3.5.0 or above!
     #endif
   #else
-    #warning The NativeReanimatedModule.h header could not be found, Frame Processors are disabled. If you want to use Frame Processors, make sure you install react-native-reanimated!
+    #warning NativeReanimatedModule.h header could not be found, Frame Processors are disabled. If you want to use Frame Processors, make sure you install react-native-reanimated 3.5.0 or above!
   #endif
 #endif
 
-#import "FrameProcessorUtils.h"
 #import "FrameProcessorCallback.h"
-#import "../React Utils/MakeJSIRuntime.h"
 #import "../React Utils/JSIUtils.h"
 
 // Forward declarations for the Swift classes
@@ -52,7 +48,7 @@ @interface CameraView : UIView
 
 @implementation FrameProcessorRuntimeManager {
 #ifdef ENABLE_FRAME_PROCESSORS
-  std::unique_ptr<reanimated::RuntimeManager> runtimeManager;
+  std::shared_ptr<reanimated::WorkletRuntime> workletRuntime;
 #endif
   __weak RCTBridge* weakBridge;
 }
@@ -63,21 +59,40 @@ - (instancetype) initWithBridge:(RCTBridge*)bridge {
 #ifdef ENABLE_FRAME_PROCESSORS
     NSLog(@"FrameProcessorBindings: Creating Runtime Manager...");
     weakBridge = bridge;
+    NSLog(@"FrameProcessorBindings: Frame Processor plugins installed!");
+#else
+    NSLog(@"Reanimated not found, Frame Processors are disabled.");
+#endif
+  }
+  return self;
+}
 
-    auto runtime = vision::makeJSIRuntime();
-    reanimated::RuntimeDecorator::decorateRuntime(*runtime, "FRAME_PROCESSOR");
-    runtime->global().setProperty(*runtime, "_FRAME_PROCESSOR", jsi::Value(true));
+- (void) installFrameProcessorBindings {
+#ifdef ENABLE_FRAME_PROCESSORS
+  if (!weakBridge) {
+    NSLog(@"FrameProcessorBindings: Failed to install Frame Processor Bindings - bridge was null!");
+    return;
+  }
 
-    auto callInvoker = bridge.jsCallInvoker;
-    auto scheduler = std::make_shared<vision::VisionCameraScheduler>(callInvoker);
-    runtimeManager = std::make_unique<reanimated::RuntimeManager>(std::move(runtime),
-                                                                  std::make_shared<reanimated::REAIOSErrorHandler>(scheduler),
-                                                                  scheduler);
-    NSLog(@"FrameProcessorBindings: Runtime Manager created!");
+  NSLog(@"FrameProcessorBindings: Installing Frame Processor Bindings for Bridge...");
+  RCTCxxBridge *cxxBridge = (RCTCxxBridge *)weakBridge;
+  if (!cxxBridge.runtime) {
+    return;
+  }
+
+  jsi::Runtime& jsiRuntime = *(jsi::Runtime*)cxxBridge.runtime;
+  NSLog(@"FrameProcessorBindings: Installing global functions...");
+
+  // setFrameProcessor(viewTag: number, frameProcessor: (frame: Frame) => void)
+  auto setFrameProcessor = [self](jsi::Runtime& rnRuntime,
+                                  const jsi::Value& thisValue,
+                                  const jsi::Value* arguments,
+                                  size_t count) -> jsi::Value {
+    self->workletRuntime = reanimated::extractWorkletRuntime(rnRuntime, arguments[2].asObject(rnRuntime));
+    jsi::Runtime &visionRuntime = self->workletRuntime->getJSIRuntime();
 
-    NSLog(@"FrameProcessorBindings: Installing Frame Processor plugins...");
-    auto& visionRuntime = *runtimeManager->runtime;
-    auto visionGlobal = visionRuntime.global();
+    // TODO: call reanimated::RuntimeDecorator::decorateRuntime(*runtime, "FRAME_PROCESSOR");
+    visionRuntime.global().setProperty(visionRuntime, "_FRAME_PROCESSOR", jsi::Value(true));
 
     for (NSString* pluginKey in [FrameProcessorPluginRegistry frameProcessorPlugins]) {
       auto pluginName = [pluginKey UTF8String];
@@ -85,7 +100,7 @@ - (instancetype) initWithBridge:(RCTBridge*)bridge {
       NSLog(@"FrameProcessorBindings: Installing Frame Processor plugin \"%s\"...", pluginName);
       FrameProcessorPlugin callback = [[FrameProcessorPluginRegistry frameProcessorPlugins] valueForKey:pluginKey];
 
-      auto function = [callback, callInvoker](jsi::Runtime& runtime,
+      auto function = [callback](jsi::Runtime& runtime,
                                               const jsi::Value& thisValue,
                                               const jsi::Value* arguments,
                                               size_t count) -> jsi::Value {
@@ -95,55 +110,26 @@ - (instancetype) initWithBridge:(RCTBridge*)bridge {
         auto args = convertJSICStyleArrayToNSArray(runtime,
                                                    arguments + 1, // start at index 1 since first arg = Frame
                                                    count - 1, // use smaller count
-                                                   callInvoker);
+                                                   nullptr);
         id result = callback(frame->frame, args);
 
         return convertObjCObjectToJSIValue(runtime, result);
       };
 
-      visionGlobal.setProperty(visionRuntime, pluginName, jsi::Function::createFromHostFunction(visionRuntime,
+      visionRuntime.global().setProperty(visionRuntime, pluginName, jsi::Function::createFromHostFunction(visionRuntime,
                                                                                                 jsi::PropNameID::forAscii(visionRuntime, pluginName),
                                                                                                 1, // frame
                                                                                                 function));
     }
 
-    NSLog(@"FrameProcessorBindings: Frame Processor plugins installed!");
-#else
-    NSLog(@"Reanimated not found, Frame Processors are disabled.");
-#endif
-  }
-  return self;
-}
-
-- (void) installFrameProcessorBindings {
-#ifdef ENABLE_FRAME_PROCESSORS
-  if (!weakBridge) {
-    NSLog(@"FrameProcessorBindings: Failed to install Frame Processor Bindings - bridge was null!");
-    return;
-  }
-
-  NSLog(@"FrameProcessorBindings: Installing Frame Processor Bindings for Bridge...");
-  RCTCxxBridge *cxxBridge = (RCTCxxBridge *)weakBridge;
-  if (!cxxBridge.runtime) {
-    return;
-  }
-
-  jsi::Runtime& jsiRuntime = *(jsi::Runtime*)cxxBridge.runtime;
-  NSLog(@"FrameProcessorBindings: Installing global functions...");
-
-  // setFrameProcessor(viewTag: number, frameProcessor: (frame: Frame) => void)
-  auto setFrameProcessor = [self](jsi::Runtime& runtime,
-                                  const jsi::Value& thisValue,
-                                  const jsi::Value* arguments,
-                                  size_t count) -> jsi::Value {
     NSLog(@"FrameProcessorBindings: Setting new frame processor...");
-    if (!arguments[0].isNumber()) throw jsi::JSError(runtime, "Camera::setFrameProcessor: First argument ('viewTag') must be a number!");
-    if (!arguments[1].isObject()) throw jsi::JSError(runtime, "Camera::setFrameProcessor: Second argument ('frameProcessor') must be a function!");
-    if (!runtimeManager || !runtimeManager->runtime) throw jsi::JSError(runtime, "Camera::setFrameProcessor: The RuntimeManager is not yet initialized!");
+    if (!arguments[0].isNumber()) throw jsi::JSError(rnRuntime, "Camera::setFrameProcessor: First argument ('viewTag') must be a number!");
+    if (!arguments[1].isObject()) throw jsi::JSError(rnRuntime, "Camera::setFrameProcessor: Second argument ('frameProcessor') must be a function!");
 
     auto viewTag = arguments[0].asNumber();
     NSLog(@"FrameProcessorBindings: Adapting Shareable value from function (conversion to worklet)...");
-    auto worklet = reanimated::ShareableValue::adapt(runtime, arguments[1], runtimeManager.get());
+
+    auto worklet = reanimated::extractShareableOrThrow<reanimated::ShareableWorklet>(rnRuntime, arguments[1].asObject(rnRuntime));
     NSLog(@"FrameProcessorBindings: Successfully created worklet!");
 
     RCTExecuteOnMainQueue([=]() {
@@ -154,10 +140,28 @@ - (void) installFrameProcessorBindings {
       dispatch_async(CameraQueues.frameProcessorQueue, [=]() {
         NSLog(@"FrameProcessorBindings: Converting worklet to Objective-C callback...");
 
-        auto& rt = *runtimeManager->runtime;
-        auto function = worklet->getValue(rt).asObject(rt).asFunction(rt);
+        std::weak_ptr<reanimated::WorkletRuntime> weakWorkletRuntime = workletRuntime;
+        std::weak_ptr<reanimated::ShareableWorklet> weakShareableWorklet = worklet;
+
+        view.frameProcessorCallback = ^(Frame* frame) {
+          auto workletRuntime = weakWorkletRuntime.lock();
+          auto shareableWorklet = weakShareableWorklet.lock();
+          if (workletRuntime == nullptr || shareableWorklet == nullptr) {
+            return;
+          }
+
+          auto frameHostObject = std::make_shared<FrameHostObject>(frame);
+          jsi::Runtime &runtime = workletRuntime->getJSIRuntime();
+          auto hostObject = jsi::Object::createFromHostObject(runtime, frameHostObject);
+          workletRuntime->runGuarded(shareableWorklet, hostObject);
+
+          // Manually free the buffer because:
+          //  1. we are sure we don't need it anymore, the frame processor worklet has finished executing.
+          //  2. we don't know when the JS runtime garbage collects this object, it might be holding it for a few more frames
+          //     which then blocks the camera queue from pushing new frames (memory limit)
+          frameHostObject->close();
+        };
 
-        view.frameProcessorCallback = convertJSIFunctionToFrameProcessorCallback(rt, function);
         NSLog(@"FrameProcessorBindings: Frame processor set!");
       });
     });
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorUtils.h b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorUtils.h
deleted file mode 100644
index 0da0390..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorUtils.h	
+++ /dev/null
@@ -1,23 +0,0 @@
-//
-//  FrameProcessorUtils.h
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 15.03.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#pragma once
-
-#import <Foundation/Foundation.h>
-#import <React/RCTBridgeModule.h>
-#import "FrameProcessorCallback.h"
-
-#ifndef __cplusplus
-#error FrameProcessorUtils.h has to be compiled with C++!
-#endif
-
-#import <jsi/jsi.h>
-
-using namespace facebook;
-
-FrameProcessorCallback convertJSIFunctionToFrameProcessorCallback(jsi::Runtime &runtime, const jsi::Function &value);
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorUtils.mm b/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorUtils.mm
deleted file mode 100644
index 25daa3e..0000000
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/FrameProcessorUtils.mm	
+++ /dev/null
@@ -1,51 +0,0 @@
-//
-//  FrameProcessorUtils.m
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 15.03.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#import "FrameProcessorUtils.h"
-#import <chrono>
-#import <memory>
-#import <regex>
-
-#import "FrameHostObject.h"
-#import "Frame.h"
-
-#import <React/RCTBridge.h>
-#import <React/RCTBridge+Private.h>
-#import "JSConsoleHelper.h"
-#import <ReactCommon/RCTTurboModule.h>
-
-FrameProcessorCallback convertJSIFunctionToFrameProcessorCallback(jsi::Runtime& runtime, const jsi::Function& value) {
-  __block auto cb = value.getFunction(runtime);
-
-  return ^(Frame* frame) {
-
-    auto frameHostObject = std::make_shared<FrameHostObject>(frame);
-    try {
-      cb.callWithThis(runtime, cb, jsi::Object::createFromHostObject(runtime, frameHostObject));
-    } catch (jsi::JSError& jsError) {
-      auto stack = std::regex_replace(jsError.getStack(), std::regex("\n"), "\n    ");
-      auto message = [NSString stringWithFormat:@"Frame Processor threw an error: %s\nIn: %s", jsError.getMessage().c_str(), stack.c_str()];
-      
-      RCTBridge* bridge = [RCTBridge currentBridge];
-      if (bridge != nil) {
-        bridge.jsCallInvoker->invokeAsync([bridge, message]() {
-          auto logFn = [JSConsoleHelper getLogFunctionForBridge:bridge];
-          logFn(RCTLogLevelError, message);
-        });
-      } else {
-        NSLog(@"%@", message);
-      }
-    }
-
-    // Manually free the buffer because:
-    //  1. we are sure we don't need it anymore, the frame processor worklet has finished executing.
-    //  2. we don't know when the JS runtime garbage collects this object, it might be holding it for a few more frames
-    //     which then blocks the camera queue from pushing new frames (memory limit)
-    frameHostObject->close();
-  };
-}
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.h b/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.h
index 07dfb70..d92a342 100644
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.h	
+++ b/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.h	
@@ -9,30 +9,12 @@
 #pragma once
 
 #include <functional>
-#import <React-callinvoker/ReactCommon/CallInvoker.h>
-
-#if __has_include(<RNReanimated/RuntimeManager.h>)
-  #import <RNReanimated/Scheduler.h>
-#else
-  // dummy placeholder
-  namespace reanimated {
-    class Scheduler {
-    public:
-      virtual void scheduleOnUI(std::function<void()> job);
-    protected:
-      std::shared_ptr<facebook::react::CallInvoker> jsCallInvoker_;
-    };
-  }
-#endif
 
 namespace vision {
 
-class VisionCameraScheduler : public reanimated::Scheduler {
-public:
-  VisionCameraScheduler(std::shared_ptr<facebook::react::CallInvoker> jsInvoker);
-  virtual ~VisionCameraScheduler();
-
-  void scheduleOnUI(std::function<void()> job) override;
+class VisionCameraScheduler {
+ public:
+  void scheduleOnUI(std::function<void()> job);
 };
 
 } // namespace vision
diff --git a/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.mm b/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.mm
index 5067d64..b4ba23e 100644
--- a/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.mm	
+++ b/node_modules/react-native-vision-camera/ios/Frame Processor/VisionCameraScheduler.mm	
@@ -9,8 +9,6 @@
 #import <Foundation/Foundation.h>
 #import "VisionCameraScheduler.h"
 
-#import <React-callinvoker/ReactCommon/CallInvoker.h>
-
 // Forward declarations for the Swift classes
 __attribute__((objc_runtime_name("_TtC12VisionCamera12CameraQueues")))
 @interface CameraQueues : NSObject
@@ -19,12 +17,6 @@ @interface CameraQueues : NSObject
 
 namespace vision {
 
-using namespace facebook;
-
-VisionCameraScheduler::VisionCameraScheduler(std::shared_ptr<react::CallInvoker> jsInvoker) {
-  this->jsCallInvoker_ = jsInvoker;
-}
-
 // does not schedule on UI thread but rather on Frame Processor Thread
 void VisionCameraScheduler::scheduleOnUI(std::function<void()> job) {
   dispatch_async(CameraQueues.frameProcessorQueue, ^{
@@ -32,8 +24,4 @@ @interface CameraQueues : NSObject
   });
 }
 
-VisionCameraScheduler::~VisionCameraScheduler(){
-}
-
-
 } // namespace vision
diff --git a/node_modules/react-native-vision-camera/ios/Parsers/AVCaptureColorSpace+descriptor.swift b/node_modules/react-native-vision-camera/ios/Parsers/AVCaptureColorSpace+descriptor.swift
index 13a403b..a351b3f 100644
--- a/node_modules/react-native-vision-camera/ios/Parsers/AVCaptureColorSpace+descriptor.swift
+++ b/node_modules/react-native-vision-camera/ios/Parsers/AVCaptureColorSpace+descriptor.swift
@@ -18,6 +18,13 @@ extension AVCaptureColorSpace {
         throw EnumParserError.unsupportedOS(supportedOnOS: "14.1")
       }
       return
+    case "appleLog":
+        if #available(iOS 17, *) {
+          self = .appleLog
+        } else {
+          throw EnumParserError.unsupportedOS(supportedOnOS: "17")
+        }
+        return
     case "p3-d65":
       self = .P3_D65
       return
@@ -33,6 +40,8 @@ extension AVCaptureColorSpace {
     switch self {
     case .HLG_BT2020:
       return "hlg-bt2020"
+    case .appleLog:
+       return "appleLog"
     case .P3_D65:
       return "p3-d65"
     case .sRGB:
diff --git a/node_modules/react-native-vision-camera/ios/React Utils/MakeJSIRuntime.h b/node_modules/react-native-vision-camera/ios/React Utils/MakeJSIRuntime.h
deleted file mode 100644
index a428c01..0000000
--- a/node_modules/react-native-vision-camera/ios/React Utils/MakeJSIRuntime.h	
+++ /dev/null
@@ -1,42 +0,0 @@
-//
-//  MakeJSIRuntime.h
-//  VisionCamera
-//
-//  Created by Marc Rousavy on 06.07.21.
-//  Copyright Â© 2021 mrousavy. All rights reserved.
-//
-
-#pragma once
-
-#include <jsi/jsi.h>
-#include <memory>
-
-#if __has_include(<reacthermes/HermesExecutorFactory.h>)
-  // Hermes (https://hermesengine.dev) (RN 0.65+)
-  #include <reacthermes/HermesExecutorFactory.h>
-#elif __has_include(<hermes/hermes.h>)
-  // Hermes (https://hermesengine.dev)
-  #include <hermes/hermes.h>
-#elif __has_include(<v8runtime/V8RuntimeFactory.h>)
-  // V8 (https://github.com/Kudo/react-native-v8)
-  #include <v8runtime/V8RuntimeFactory.h>
-#else
-  // JSC
-  #include <jsi/JSCRuntime.h>
-#endif
-
-using namespace facebook;
-
-namespace vision {
-
-static std::unique_ptr<jsi::Runtime> makeJSIRuntime() {
-#if __has_include(<hermes/hermes.h>) || __has_include(<reacthermes/HermesExecutorFactory.h>)
-  return facebook::hermes::makeHermesRuntime();
-#elif __has_include(<v8runtime/V8RuntimeFactory.h>)
-  return facebook::createV8Runtime("");
-#else
-  return facebook::jsc::makeJSCRuntime();
-#endif
-}
-
-} // namespace vision
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/Camera.js b/node_modules/react-native-vision-camera/lib/commonjs/Camera.js
index 2b72495..ed0bdcb 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/Camera.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/Camera.js
@@ -4,29 +4,26 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.Camera = void 0;
-
 var _react = _interopRequireDefault(require("react"));
-
 var _reactNative = require("react-native");
-
 var _CameraError = require("./CameraError");
-
+var _FrameProcessorContext = require("./FrameProcessorContext");
 function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
-
-function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
-
-function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
+function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
+//#region Types
 
 //#endregion
+
 // NativeModules automatically resolves 'CameraView' to 'CameraViewModule'
 // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
 const CameraModule = _reactNative.NativeModules.CameraView;
-if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was null! Did you run pod install?"); //#region Camera Component
+if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was null! Did you run pod install?");
 
+//#region Camera Component
 /**
  * ### A powerful `<Camera>` component.
  *
- * Read the [VisionCamera documentation](https://mrousavy.github.io/react-native-vision-camera/) for more information.
+ * Read the [VisionCamera documentation](https://react-native-vision-camera.com/) for more information.
  *
  * The `<Camera>` component's most important (and therefore _required_) properties are:
  *
@@ -52,24 +49,15 @@ if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was
  *
  * @component
  */
-
 class Camera extends _react.default.PureComponent {
   /** @internal */
-
+  static displayName = 'Camera';
   /** @internal */
-
+  displayName = Camera.displayName;
+  isNativeViewMounted = false;
   /** @internal */
   constructor(props) {
     super(props);
-
-    _defineProperty(this, "displayName", Camera.displayName);
-
-    _defineProperty(this, "lastFrameProcessor", void 0);
-
-    _defineProperty(this, "isNativeViewMounted", false);
-
-    _defineProperty(this, "ref", void 0);
-
     this.onViewReady = this.onViewReady.bind(this);
     this.onInitialized = this.onInitialized.bind(this);
     this.onError = this.onError.bind(this);
@@ -77,17 +65,15 @@ class Camera extends _react.default.PureComponent {
     this.ref = /*#__PURE__*/_react.default.createRef();
     this.lastFrameProcessor = undefined;
   }
-
   get handle() {
     const nodeHandle = (0, _reactNative.findNodeHandle)(this.ref.current);
-
     if (nodeHandle == null || nodeHandle === -1) {
       throw new _CameraError.CameraRuntimeError('system/view-not-found', "Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?");
     }
-
     return nodeHandle;
-  } //#region View-specific functions (UIViewManager)
+  }
 
+  //#region View-specific functions (UIViewManager)
   /**
    * Take a single photo and write it's content to a temporary file.
    *
@@ -101,15 +87,14 @@ class Camera extends _react.default.PureComponent {
    * })
    * ```
    */
-
-
   async takePhoto(options) {
     try {
-      return await CameraModule.takePhoto(this.handle, options !== null && options !== void 0 ? options : {});
+      return await CameraModule.takePhoto(this.handle, options ?? {});
     } catch (e) {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
   }
+
   /**
    * Take a snapshot of the current preview view.
    *
@@ -126,17 +111,15 @@ class Camera extends _react.default.PureComponent {
    * })
    * ```
    */
-
-
   async takeSnapshot(options) {
     if (_reactNative.Platform.OS !== 'android') throw new _CameraError.CameraCaptureError('capture/capture-type-not-supported', `'takeSnapshot()' is not available on ${_reactNative.Platform.OS}!`);
-
     try {
-      return await CameraModule.takeSnapshot(this.handle, options !== null && options !== void 0 ? options : {});
+      return await CameraModule.takeSnapshot(this.handle, options ?? {});
     } catch (e) {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
   }
+
   /**
    * Start a new video recording.
    *
@@ -159,8 +142,6 @@ class Camera extends _react.default.PureComponent {
    * }, 5000)
    * ```
    */
-
-
   startRecording(options) {
     const {
       onRecordingError,
@@ -168,19 +149,18 @@ class Camera extends _react.default.PureComponent {
       ...passThroughOptions
     } = options;
     if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function') throw new _CameraError.CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');
-
     const onRecordCallback = (video, error) => {
       if (error != null) return onRecordingError(error);
       if (video != null) return onRecordingFinished(video);
-    }; // TODO: Use TurboModules to either make this a sync invokation, or make it async.
-
-
+    };
+    // TODO: Use TurboModules to either make this a sync invokation, or make it async.
     try {
       CameraModule.startRecording(this.handle, passThroughOptions, onRecordCallback);
     } catch (e) {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
   }
+
   /**
    * Pauses the current video recording.
    *
@@ -201,8 +181,6 @@ class Camera extends _react.default.PureComponent {
    * const video = await camera.current.stopRecording()
    * ```
    */
-
-
   async pauseRecording() {
     try {
       return await CameraModule.pauseRecording(this.handle);
@@ -210,6 +188,7 @@ class Camera extends _react.default.PureComponent {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
   }
+
   /**
    * Resumes a currently paused video recording.
    *
@@ -230,8 +209,6 @@ class Camera extends _react.default.PureComponent {
    * const video = await camera.current.stopRecording()
    * ```
    */
-
-
   async resumeRecording() {
     try {
       return await CameraModule.resumeRecording(this.handle);
@@ -239,6 +216,7 @@ class Camera extends _react.default.PureComponent {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
   }
+
   /**
    * Stop the current video recording.
    *
@@ -252,8 +230,6 @@ class Camera extends _react.default.PureComponent {
    * }, 5000)
    * ```
    */
-
-
   async stopRecording() {
     try {
       return await CameraModule.stopRecording(this.handle);
@@ -261,6 +237,7 @@ class Camera extends _react.default.PureComponent {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
   }
+
   /**
    * Focus the camera to a specific point in the coordinate system.
    * @param {Point} point The point to focus to. This should be relative to the Camera view's coordinate system,
@@ -279,15 +256,14 @@ class Camera extends _react.default.PureComponent {
    * })
    * ```
    */
-
-
   async focus(point) {
     try {
       return await CameraModule.focus(this.handle, point);
     } catch (e) {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
-  } //#endregion
+  }
+  //#endregion
 
   /**
    * Get a list of video codecs the current camera supports for a given file type.  Returned values are ordered by efficiency (descending).
@@ -298,8 +274,6 @@ class Camera extends _react.default.PureComponent {
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting available video codecs. Use the {@linkcode ParameterError.code | code} property to get the actual error
    * @platform iOS
    */
-
-
   async getAvailableVideoCodecs(fileType) {
     if (_reactNative.Platform.OS !== 'ios') return []; // no video codecs supported on other platforms.
 
@@ -308,8 +282,9 @@ class Camera extends _react.default.PureComponent {
     } catch (e) {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
-  } //#region Static Functions (NativeModule)
+  }
 
+  //#region Static Functions (NativeModule)
   /**
    * Get a list of all available camera devices on the current phone.
    *
@@ -325,8 +300,6 @@ class Camera extends _react.default.PureComponent {
    * }
    * ```
    */
-
-
   static async getAvailableCameraDevices() {
     try {
       return await CameraModule.getAvailableCameraDevices();
@@ -342,8 +315,6 @@ class Camera extends _react.default.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
-
-
   static async getCameraPermissionStatus() {
     try {
       return await CameraModule.getCameraPermissionStatus();
@@ -359,8 +330,6 @@ class Camera extends _react.default.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
-
-
   static async getMicrophonePermissionStatus() {
     try {
       return await CameraModule.getMicrophonePermissionStatus();
@@ -376,8 +345,6 @@ class Camera extends _react.default.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
-
-
   static async requestCameraPermission() {
     try {
       return await CameraModule.requestCameraPermission();
@@ -393,86 +360,74 @@ class Camera extends _react.default.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
-
-
   static async requestMicrophonePermission() {
     try {
       return await CameraModule.requestMicrophonePermission();
     } catch (e) {
       throw (0, _CameraError.tryParseNativeCameraError)(e);
     }
-  } //#endregion
-  //#region Events (Wrapped to maintain reference equality)
-
+  }
+  //#endregion
 
+  //#region Events (Wrapped to maintain reference equality)
   onError(event) {
     if (this.props.onError != null) {
       const error = event.nativeEvent;
       const cause = (0, _CameraError.isErrorWithCause)(error.cause) ? error.cause : undefined;
-      this.props.onError( // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
+      this.props.onError(
+      // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
       new _CameraError.CameraRuntimeError(error.code, error.message, cause));
     }
   }
-
   onInitialized() {
     var _this$props$onInitial, _this$props;
-
     (_this$props$onInitial = (_this$props = this.props).onInitialized) === null || _this$props$onInitial === void 0 ? void 0 : _this$props$onInitial.call(_this$props);
   }
-
   onFrameProcessorPerformanceSuggestionAvailable(event) {
     if (this.props.onFrameProcessorPerformanceSuggestionAvailable != null) this.props.onFrameProcessorPerformanceSuggestionAvailable(event.nativeEvent);
-  } //#endregion
-  //#region Lifecycle
+  }
+  //#endregion
 
+  //#region Lifecycle
   /** @internal */
-
-
   assertFrameProcessorsEnabled() {
     // @ts-expect-error JSI functions aren't typed
     if (global.setFrameProcessor == null || global.unsetFrameProcessor == null) {
-      throw new _CameraError.CameraRuntimeError('frame-processor/unavailable', 'Frame Processors are not enabled. See https://mrousavy.github.io/react-native-vision-camera/docs/guides/troubleshooting');
+      throw new _CameraError.CameraRuntimeError('frame-processor/unavailable', 'Frame Processors are not enabled. See https://react-native-vision-camera.com/docs/guides/troubleshooting');
     }
   }
-
   setFrameProcessor(frameProcessor) {
-    this.assertFrameProcessorsEnabled(); // @ts-expect-error JSI functions aren't typed
-
-    global.setFrameProcessor(this.handle, frameProcessor);
+    this.assertFrameProcessorsEnabled();
+    // @ts-expect-error JSI functions aren't typed
+    global.setFrameProcessor(this.handle, _FrameProcessorContext.FrameProcessorContext.createWorklet(frameProcessor), _FrameProcessorContext.FrameProcessorContext.workletRuntime);
   }
-
   unsetFrameProcessor() {
-    this.assertFrameProcessorsEnabled(); // @ts-expect-error JSI functions aren't typed
-
+    this.assertFrameProcessorsEnabled();
+    // @ts-expect-error JSI functions aren't typed
     global.unsetFrameProcessor(this.handle);
   }
-
   onViewReady() {
     this.isNativeViewMounted = true;
-
     if (this.props.frameProcessor != null) {
       // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.
       this.setFrameProcessor(this.props.frameProcessor);
       this.lastFrameProcessor = this.props.frameProcessor;
     }
   }
-  /** @internal */
-
 
+  /** @internal */
   componentDidUpdate() {
     if (!this.isNativeViewMounted) return;
     const frameProcessor = this.props.frameProcessor;
-
     if (frameProcessor !== this.lastFrameProcessor) {
       // frameProcessor argument identity changed. Update native to reflect the change.
       if (frameProcessor != null) this.setFrameProcessor(frameProcessor);else this.unsetFrameProcessor();
       this.lastFrameProcessor = frameProcessor;
     }
-  } //#endregion
+  }
+  //#endregion
 
   /** @internal */
-
-
   render() {
     // We remove the big `device` object from the props because we only need to pass `cameraId` to native.
     const {
@@ -492,15 +447,12 @@ class Camera extends _react.default.PureComponent {
       enableFrameProcessor: frameProcessor != null
     }));
   }
+}
+//#endregion
 
-} //#endregion
 // requireNativeComponent automatically resolves 'CameraView' to 'CameraViewManager'
-
-
 exports.Camera = Camera;
-
-_defineProperty(Camera, "displayName", 'Camera');
-
-const NativeCameraView = (0, _reactNative.requireNativeComponent)('CameraView', // @ts-expect-error because the type declarations are kinda wrong, no?
+const NativeCameraView = (0, _reactNative.requireNativeComponent)('CameraView',
+// @ts-expect-error because the type declarations are kinda wrong, no?
 Camera);
 //# sourceMappingURL=Camera.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/Camera.js.map b/node_modules/react-native-vision-camera/lib/commonjs/Camera.js.map
index 141286c..49b2996 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/Camera.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/Camera.js.map
@@ -1 +1 @@
-{"version":3,"sources":["Camera.tsx"],"names":["CameraModule","NativeModules","CameraView","console","error","Camera","React","PureComponent","constructor","props","displayName","onViewReady","bind","onInitialized","onError","onFrameProcessorPerformanceSuggestionAvailable","ref","createRef","lastFrameProcessor","undefined","handle","nodeHandle","current","CameraRuntimeError","takePhoto","options","e","takeSnapshot","Platform","OS","CameraCaptureError","startRecording","onRecordingError","onRecordingFinished","passThroughOptions","onRecordCallback","video","pauseRecording","resumeRecording","stopRecording","focus","point","getAvailableVideoCodecs","fileType","getAvailableCameraDevices","getCameraPermissionStatus","getMicrophonePermissionStatus","requestCameraPermission","requestMicrophonePermission","event","nativeEvent","cause","code","message","assertFrameProcessorsEnabled","global","setFrameProcessor","unsetFrameProcessor","frameProcessor","isNativeViewMounted","componentDidUpdate","render","device","frameProcessorFps","id","NativeCameraView"],"mappings":"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AAU;AACV,YAAM,4CAA0BA,CAA1B,CAAN;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAC6B,QAAdW,cAAc,GAAkB;AAC3C,QAAI;AACF,aAAO,MAAMrC,YAAY,CAACqC,cAAb,CAA4B,KAAKjB,MAAjC,CAAb;AACD,KAFD,CAEE,OAAOM,CAAP,EAAU;AACV,YAAM,4CAA0BA,CAA1B,CAAN;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAC8B,QAAfY,eAAe,GAAkB;AAC5C,QAAI;AACF,aAAO,MAAMtC,YAAY,CAACsC,eAAb,CAA6B,KAAKlB,MAAlC,CAAb;AACD,KAFD,CAEE,OAAOM,CAAP,EAAU;AACV,YAAM,4CAA0BA,CAA1B,CAAN;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAC4B,QAAba,aAAa,GAAkB;AAC1C,QAAI;AACF,aAAO,MAAMvC,YAAY,CAACuC,aAAb,CAA2B,KAAKnB,MAAhC,CAAb;AACD,KAFD,CAEE,OAAOM,CAAP,EAAU;AACV,YAAM,4CAA0BA,CAA1B,CAAN;AACD;AACF;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACoB,QAALc,KAAK,CAACC,KAAD,EAA8B;AAC9C,QAAI;AACF,aAAO,MAAMzC,YAAY,CAACwC,KAAb,CAAmB,KAAKpB,MAAxB,EAAgCqB,KAAhC,CAAb;AACD,KAFD,CAEE,OAAOf,CAAP,EAAU;AACV,YAAM,4CAA0BA,CAA1B,CAAN;AACD;AACF,GA9N0D,CA+N3D;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACsC,QAAvBgB,uBAAuB,CAACC,QAAD,EAAwD;AAC1F,QAAIf,sBAASC,EA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","sourcesContent":["import React from 'react';\nimport { requireNativeComponent, NativeModules, NativeSyntheticEvent, findNodeHandle, NativeMethods, Platform } from 'react-native';\nimport type { FrameProcessorPerformanceSuggestion, VideoFileType } from '.';\nimport type { CameraDevice } from './CameraDevice';\nimport type { ErrorWithCause } from './CameraError';\nimport { CameraCaptureError, CameraRuntimeError, tryParseNativeCameraError, isErrorWithCause } from './CameraError';\nimport type { CameraProps } from './CameraProps';\nimport type { Frame } from './Frame';\nimport type { PhotoFile, TakePhotoOptions } from './PhotoFile';\nimport type { Point } from './Point';\nimport type { TakeSnapshotOptions } from './Snapshot';\nimport type { CameraVideoCodec, RecordVideoOptions, VideoFile } from './VideoFile';\n\n//#region Types\nexport type CameraPermissionStatus = 'authorized' | 'not-determined' | 'denied' | 'restricted';\nexport type CameraPermissionRequestResult = 'authorized' | 'denied';\n\ninterface OnErrorEvent {\n  code: string;\n  message: string;\n  cause?: ErrorWithCause;\n}\ntype NativeCameraViewProps = Omit<\n  CameraProps,\n  'device' | 'onInitialized' | 'onError' | 'onFrameProcessorPerformanceSuggestionAvailable' | 'frameProcessor' | 'frameProcessorFps'\n> & {\n  cameraId: string;\n  frameProcessorFps?: number; // native cannot use number | string, so we use '-1' for 'auto'\n  enableFrameProcessor: boolean;\n  onInitialized?: (event: NativeSyntheticEvent<void>) => void;\n  onError?: (event: NativeSyntheticEvent<OnErrorEvent>) => void;\n  onFrameProcessorPerformanceSuggestionAvailable?: (event: NativeSyntheticEvent<FrameProcessorPerformanceSuggestion>) => void;\n  onViewReady: () => void;\n};\ntype RefType = React.Component<NativeCameraViewProps> & Readonly<NativeMethods>;\n//#endregion\n\n// NativeModules automatically resolves 'CameraView' to 'CameraViewModule'\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nconst CameraModule = NativeModules.CameraView;\nif (CameraModule == null) console.error(\"Camera: Native Module 'CameraView' was null! Did you run pod install?\");\n\n//#region Camera Component\n/**\n * ### A powerful `<Camera>` component.\n *\n * Read the [VisionCamera documentation](https://mrousavy.github.io/react-native-vision-camera/) for more information.\n *\n * The `<Camera>` component's most important (and therefore _required_) properties are:\n *\n * * {@linkcode CameraProps.device | device}: Specifies the {@linkcode CameraDevice} to use. Get a {@linkcode CameraDevice} by using the {@linkcode useCameraDevices | useCameraDevices()} hook, or manually by using the {@linkcode Camera.getAvailableCameraDevices Camera.getAvailableCameraDevices()} function.\n * * {@linkcode CameraProps.isActive | isActive}: A boolean value that specifies whether the Camera should actively stream video frames or not. This can be compared to a Video component, where `isActive` specifies whether the video is paused or not. If you fully unmount the `<Camera>` component instead of using `isActive={false}`, the Camera will take a bit longer to start again.\n *\n * @example\n * ```tsx\n * function App() {\n *   const devices = useCameraDevices('wide-angle-camera')\n *   const device = devices.back\n *\n *   if (device == null) return <LoadingView />\n *   return (\n *     <Camera\n *       style={StyleSheet.absoluteFill}\n *       device={device}\n *       isActive={true}\n *     />\n *   )\n * }\n * ```\n *\n * @component\n */\nexport class Camera extends React.PureComponent<CameraProps> {\n  /** @internal */\n  static displayName = 'Camera';\n  /** @internal */\n  displayName = Camera.displayName;\n  private lastFrameProcessor: ((frame: Frame) => void) | undefined;\n  private isNativeViewMounted = false;\n\n  private readonly ref: React.RefObject<RefType>;\n\n  /** @internal */\n  constructor(props: CameraProps) {\n    super(props);\n    this.onViewReady = this.onViewReady.bind(this);\n    this.onInitialized = this.onInitialized.bind(this);\n    this.onError = this.onError.bind(this);\n    this.onFrameProcessorPerformanceSuggestionAvailable = this.onFrameProcessorPerformanceSuggestionAvailable.bind(this);\n    this.ref = React.createRef<RefType>();\n    this.lastFrameProcessor = undefined;\n  }\n\n  private get handle(): number | null {\n    const nodeHandle = findNodeHandle(this.ref.current);\n    if (nodeHandle == null || nodeHandle === -1) {\n      throw new CameraRuntimeError(\n        'system/view-not-found',\n        \"Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?\",\n      );\n    }\n\n    return nodeHandle;\n  }\n\n  //#region View-specific functions (UIViewManager)\n  /**\n   * Take a single photo and write it's content to a temporary file.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * const photo = await camera.current.takePhoto({\n   *   qualityPrioritization: 'quality',\n   *   flash: 'on',\n   *   enableAutoRedEyeReduction: true\n   * })\n   * ```\n   */\n  public async takePhoto(options?: TakePhotoOptions): Promise<PhotoFile> {\n    try {\n      return await CameraModule.takePhoto(this.handle, options ?? {});\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Take a snapshot of the current preview view.\n   *\n   * This can be used as an alternative to {@linkcode Camera.takePhoto | takePhoto()} if speed is more important than quality\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while taking a snapshot. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @platform Android\n   * @example\n   * ```ts\n   * const photo = await camera.current.takeSnapshot({\n   *   quality: 85,\n   *   skipMetadata: true\n   * })\n   * ```\n   */\n  public async takeSnapshot(options?: TakeSnapshotOptions): Promise<PhotoFile> {\n    if (Platform.OS !== 'android')\n      throw new CameraCaptureError('capture/capture-type-not-supported', `'takeSnapshot()' is not available on ${Platform.OS}!`);\n\n    try {\n      return await CameraModule.takeSnapshot(this.handle, options ?? {});\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Start a new video recording.\n   *\n   * Records in the following formats:\n   * * **iOS**: QuickTime (`.mov`)\n   * * **Android**: MPEG4 (`.mp4`)\n   *\n   * @blocking This function is synchronized/blocking.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * camera.current.startRecording({\n   *   onRecordingFinished: (video) => console.log(video),\n   *   onRecordingError: (error) => console.error(error),\n   * })\n   * setTimeout(() => {\n   *   camera.current.stopRecording()\n   * }, 5000)\n   * ```\n   */\n  public startRecording(options: RecordVideoOptions): void {\n    const { onRecordingError, onRecordingFinished, ...passThroughOptions } = options;\n    if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function')\n      throw new CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');\n\n    const onRecordCallback = (video?: VideoFile, error?: CameraCaptureError): void => {\n      if (error != null) return onRecordingError(error);\n      if (video != null) return onRecordingFinished(video);\n    };\n    // TODO: Use TurboModules to either make this a sync invokation, or make it async.\n    try {\n      CameraModule.startRecording(this.handle, passThroughOptions, onRecordCallback);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Pauses the current video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * // Start\n   * await camera.current.startRecording()\n   * await timeout(1000)\n   * // Pause\n   * await camera.current.pauseRecording()\n   * await timeout(500)\n   * // Resume\n   * await camera.current.resumeRecording()\n   * await timeout(2000)\n   * // Stop\n   * const video = await camera.current.stopRecording()\n   * ```\n   */\n  public async pauseRecording(): Promise<void> {\n    try {\n      return await CameraModule.pauseRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Resumes a currently paused video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * // Start\n   * await camera.current.startRecording()\n   * await timeout(1000)\n   * // Pause\n   * await camera.current.pauseRecording()\n   * await timeout(500)\n   * // Resume\n   * await camera.current.resumeRecording()\n   * await timeout(2000)\n   * // Stop\n   * const video = await camera.current.stopRecording()\n   * ```\n   */\n  public async resumeRecording(): Promise<void> {\n    try {\n      return await CameraModule.resumeRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Stop the current video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * await camera.current.startRecording()\n   * setTimeout(async () => {\n   *  const video = await camera.current.stopRecording()\n   * }, 5000)\n   * ```\n   */\n  public async stopRecording(): Promise<void> {\n    try {\n      return await CameraModule.stopRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Focus the camera to a specific point in the coordinate system.\n   * @param {Point} point The point to focus to. This should be relative to the Camera view's coordinate system,\n   * and expressed in Pixel on iOS and Points on Android.\n   *  * `(0, 0)` means **top left**.\n   *  * `(CameraView.width, CameraView.height)` means **bottom right**.\n   *\n   * Make sure the value doesn't exceed the CameraView's dimensions.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * await camera.current.focus({\n   *   x: tapEvent.x,\n   *   y: tapEvent.y\n   * })\n   * ```\n   */\n  public async focus(point: Point): Promise<void> {\n    try {\n      return await CameraModule.focus(this.handle, point);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  //#endregion\n\n  /**\n   * Get a list of video codecs the current camera supports for a given file type.  Returned values are ordered by efficiency (descending).\n   * @example\n   * ```ts\n   * const codecs = await camera.current.getAvailableVideoCodecs(\"mp4\")\n   * ```\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting available video codecs. Use the {@linkcode ParameterError.code | code} property to get the actual error\n   * @platform iOS\n   */\n  public async getAvailableVideoCodecs(fileType?: VideoFileType): Promise<CameraVideoCodec[]> {\n    if (Platform.OS !== 'ios') return []; // no video codecs supported on other platforms.\n\n    try {\n      return await CameraModule.getAvailableVideoCodecs(this.handle, fileType);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  //#region Static Functions (NativeModule)\n  /**\n   * Get a list of all available camera devices on the current phone.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting all available camera devices. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * const devices = await Camera.getAvailableCameraDevices()\n   * const filtered = devices.filter((d) => matchesMyExpectations(d))\n   * const sorted = devices.sort(sortDevicesByAmountOfCameras)\n   * return {\n   *   back: sorted.find((d) => d.position === \"back\"),\n   *   front: sorted.find((d) => d.position === \"front\")\n   * }\n   * ```\n   */\n  public static async getAvailableCameraDevices(): Promise<CameraDevice[]> {\n    try {\n      return await CameraModule.getAvailableCameraDevices();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure\n   * the user has permitted the app to use the camera.\n   *\n   * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async getCameraPermissionStatus(): Promise<CameraPermissionStatus> {\n    try {\n      return await CameraModule.getCameraPermissionStatus();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Gets the current Microphone-Recording Permission Status. Check this before mounting the Camera to ensure\n   * the user has permitted the app to use the microphone.\n   *\n   * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async getMicrophonePermissionStatus(): Promise<CameraPermissionStatus> {\n    try {\n      return await CameraModule.getMicrophonePermissionStatus();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Shows a \"request permission\" alert to the user, and resolves with the new camera permission status.\n   *\n   * If the user has previously blocked the app from using the camera, the alert will not be shown\n   * and `\"denied\"` will be returned.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async requestCameraPermission(): Promise<CameraPermissionRequestResult> {\n    try {\n      return await CameraModule.requestCameraPermission();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Shows a \"request permission\" alert to the user, and resolves with the new microphone permission status.\n   *\n   * If the user has previously blocked the app from using the microphone, the alert will not be shown\n   * and `\"denied\"` will be returned.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async requestMicrophonePermission(): Promise<CameraPermissionRequestResult> {\n    try {\n      return await CameraModule.requestMicrophonePermission();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  //#endregion\n\n  //#region Events (Wrapped to maintain reference equality)\n  private onError(event: NativeSyntheticEvent<OnErrorEvent>): void {\n    if (this.props.onError != null) {\n      const error = event.nativeEvent;\n      const cause = isErrorWithCause(error.cause) ? error.cause : undefined;\n      this.props.onError(\n        // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work\n        new CameraRuntimeError(error.code, error.message, cause),\n      );\n    }\n  }\n\n  private onInitialized(): void {\n    this.props.onInitialized?.();\n  }\n\n  private onFrameProcessorPerformanceSuggestionAvailable(event: NativeSyntheticEvent<FrameProcessorPerformanceSuggestion>): void {\n    if (this.props.onFrameProcessorPerformanceSuggestionAvailable != null)\n      this.props.onFrameProcessorPerformanceSuggestionAvailable(event.nativeEvent);\n  }\n  //#endregion\n\n  //#region Lifecycle\n  /** @internal */\n  private assertFrameProcessorsEnabled(): void {\n    // @ts-expect-error JSI functions aren't typed\n    if (global.setFrameProcessor == null || global.unsetFrameProcessor == null) {\n      throw new CameraRuntimeError(\n        'frame-processor/unavailable',\n        'Frame Processors are not enabled. See https://mrousavy.github.io/react-native-vision-camera/docs/guides/troubleshooting',\n      );\n    }\n  }\n\n  private setFrameProcessor(frameProcessor: (frame: Frame) => void): void {\n    this.assertFrameProcessorsEnabled();\n    // @ts-expect-error JSI functions aren't typed\n    global.setFrameProcessor(this.handle, frameProcessor);\n  }\n\n  private unsetFrameProcessor(): void {\n    this.assertFrameProcessorsEnabled();\n    // @ts-expect-error JSI functions aren't typed\n    global.unsetFrameProcessor(this.handle);\n  }\n\n  private onViewReady(): void {\n    this.isNativeViewMounted = true;\n    if (this.props.frameProcessor != null) {\n      // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.\n      this.setFrameProcessor(this.props.frameProcessor);\n      this.lastFrameProcessor = this.props.frameProcessor;\n    }\n  }\n\n  /** @internal */\n  componentDidUpdate(): void {\n    if (!this.isNativeViewMounted) return;\n    const frameProcessor = this.props.frameProcessor;\n    if (frameProcessor !== this.lastFrameProcessor) {\n      // frameProcessor argument identity changed. Update native to reflect the change.\n      if (frameProcessor != null) this.setFrameProcessor(frameProcessor);\n      else this.unsetFrameProcessor();\n\n      this.lastFrameProcessor = frameProcessor;\n    }\n  }\n  //#endregion\n\n  /** @internal */\n  public render(): React.ReactNode {\n    // We remove the big `device` object from the props because we only need to pass `cameraId` to native.\n    const { device, frameProcessor, frameProcessorFps, ...props } = this.props;\n    return (\n      <NativeCameraView\n        {...props}\n        frameProcessorFps={frameProcessorFps === 'auto' ? -1 : frameProcessorFps}\n        cameraId={device.id}\n        ref={this.ref}\n        onViewReady={this.onViewReady}\n        onInitialized={this.onInitialized}\n        onError={this.onError}\n        onFrameProcessorPerformanceSuggestionAvailable={this.onFrameProcessorPerformanceSuggestionAvailable}\n        enableFrameProcessor={frameProcessor != null}\n      />\n    );\n  }\n}\n//#endregion\n\n// requireNativeComponent automatically resolves 'CameraView' to 'CameraViewManager'\nconst NativeCameraView = requireNativeComponent<NativeCameraViewProps>(\n  'CameraView',\n  // @ts-expect-error because the type declarations are kinda wrong, no?\n  Camera,\n);\n"]}
\ No newline at end of file
+{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_CameraError","_FrameProcessorContext","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","CameraModule","NativeModules","CameraView","console","error","Camera","React","PureComponent","displayName","isNativeViewMounted","constructor","props","onViewReady","onInitialized","onError","onFrameProcessorPerformanceSuggestionAvailable","ref","createRef","lastFrameProcessor","undefined","handle","nodeHandle","findNodeHandle","current","CameraRuntimeError","takePhoto","options","e","tryParseNativeCameraError","takeSnapshot","Platform","OS","CameraCaptureError","startRecording","onRecordingError","onRecordingFinished","passThroughOptions","onRecordCallback","video","pauseRecording","resumeRecording","stopRecording","focus","point","getAvailableVideoCodecs","fileType","getAvailableCameraDevices","getCameraPermissionStatus","getMicrophonePermissionStatus","requestCameraPermission","requestMicrophonePermission","event","nativeEvent","cause","isErrorWithCause","code","message","_this$props$onInitial","_this$props","assertFrameProcessorsEnabled","global","setFrameProcessor","unsetFrameProcessor","frameProcessor","FrameProcessorContext","createWorklet","workletRuntime","componentDidUpdate","render","device","frameProcessorFps","createElement","NativeCameraView","cameraId","id","enableFrameProcessor","exports","requireNativeComponent"],"sourceRoot":"../../src","sources":["Camera.tsx"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js b/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js
index 8ce9420..c505e8c 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js
@@ -4,7 +4,6 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.parsePhysicalDeviceTypes = void 0;
-
 /**
  * Indentifiers for a physical camera (one that actually exists on the back/front of the device)
  *
@@ -30,7 +29,6 @@ const parsePhysicalDeviceTypes = physicalDeviceTypes => {
     // @ts-expect-error for very obvious reasons
     return physicalDeviceTypes[0];
   }
-
   const hasWide = physicalDeviceTypes.includes('wide-angle-camera');
   const hasUltra = physicalDeviceTypes.includes('ultra-wide-angle-camera');
   const hasTele = physicalDeviceTypes.includes('telephoto-camera');
@@ -39,6 +37,7 @@ const parsePhysicalDeviceTypes = physicalDeviceTypes => {
   if (hasWide && hasTele) return 'dual-camera';
   throw new Error(`Invalid physical device type combination! ${physicalDeviceTypes.join(' + ')}`);
 };
+
 /**
  * Indicates a format's color space.
  *
@@ -62,6 +61,30 @@ const parsePhysicalDeviceTypes = physicalDeviceTypes => {
  * > See ["Android Color Formats"](https://jbit.net/Android_Colors/) for more information.
  */
 
+/**
+ * Indicates a format's autofocus system.
+ *
+ * * `"none"`: Indicates that autofocus is not available
+ * * `"contrast-detection"`: Indicates that autofocus is achieved by contrast detection. Contrast detection performs a focus scan to find the optimal position
+ * * `"phase-detection"`: Indicates that autofocus is achieved by phase detection. Phase detection has the ability to achieve focus in many cases without a focus scan. Phase detection autofocus is typically less visually intrusive than contrast detection autofocus
+ */
 
+/**
+ * Indicates a format's supported video stabilization mode
+ *
+ * * `"off"`: Indicates that video should not be stabilized
+ * * `"standard"`: Indicates that video should be stabilized using the standard video stabilization algorithm introduced with iOS 5.0. Standard video stabilization has a reduced field of view. Enabling video stabilization may introduce additional latency into the video capture pipeline
+ * * `"cinematic"`: Indicates that video should be stabilized using the cinematic stabilization algorithm for more dramatic results. Cinematic video stabilization has a reduced field of view compared to standard video stabilization. Enabling cinematic video stabilization introduces much more latency into the video capture pipeline than standard video stabilization and consumes significantly more system memory. Use narrow or identical min and max frame durations in conjunction with this mode
+ * * `"cinematic-extended"`: Indicates that the video should be stabilized using the extended cinematic stabilization algorithm. Enabling extended cinematic stabilization introduces longer latency into the video capture pipeline compared to the AVCaptureVideoStabilizationModeCinematic and consumes more memory, but yields improved stability. It is recommended to use identical or similar min and max frame durations in conjunction with this mode (iOS 13.0+)
+ * * `"auto"`: Indicates that the most appropriate video stabilization mode for the device and format should be chosen automatically
+ */
+
+/**
+ * A Camera Device's video format. Do not create instances of this type yourself, only use {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()}.
+ */
+
+/**
+ * Represents a camera device discovered by the {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()} function
+ */
 exports.parsePhysicalDeviceTypes = parsePhysicalDeviceTypes;
 //# sourceMappingURL=CameraDevice.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js.map b/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js.map
index 4fdc944..adb18fb 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraDevice.js.map
@@ -1 +1 @@
-{"version":3,"sources":["CameraDevice.ts"],"names":["parsePhysicalDeviceTypes","physicalDeviceTypes","length","hasWide","includes","hasUltra","hasTele","Error","join"],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACO,MAAMA,wBAAwB,GACnCC,mBADsC,IAEiB;AACvD,MAAIA,mBAAmB,CAACC,MAApB,KAA+B,CAAnC,EAAsC;AACpC;AACA,WAAOD,mBAAmB,CAAC,CAAD,CAA1B;AACD;;AAED,QAAME,OAAO,GAAGF,mBAAmB,CAACG,QAApB,CAA6B,mBAA7B,CAAhB;AACA,QAAMC,QAAQ,GAAGJ,mBAAmB,CAACG,QAApB,CAA6B,yBAA7B,CAAjB;AACA,QAAME,OAAO,GAAGL,mBAAmB,CAACG,QAApB,CAA6B,kBAA7B,CAAhB;AAEA,MAAIE,OAAO,IAAIH,OAAX,IAAsBE,QAA1B,EAAoC,OAAO,eAAP;AACpC,MAAIF,OAAO,IAAIE,QAAf,EAAyB,OAAO,kBAAP;AACzB,MAAIF,OAAO,IAAIG,OAAf,EAAwB,OAAO,aAAP;AAExB,QAAM,IAAIC,KAAJ,CAAW,6CAA4CN,mBAAmB,CAACO,IAApB,CAAyB,KAAzB,CAAgC,EAAvF,CAAN;AACD,CAjBM;AAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import type { CameraPosition } from './CameraPosition';\nimport type { PixelFormat } from './PixelFormat';\n\n/**\n * Indentifiers for a physical camera (one that actually exists on the back/front of the device)\n *\n * * `\"ultra-wide-angle-camera\"`: A built-in camera with a shorter focal length than that of a wide-angle camera. (focal length between below 24mm)\n * * `\"wide-angle-camera\"`: A built-in wide-angle camera. (focal length between 24mm and 35mm)\n * * `\"telephoto-camera\"`: A built-in camera device with a longer focal length than a wide-angle camera. (focal length between above 85mm)\n */\nexport type PhysicalCameraDeviceType = 'ultra-wide-angle-camera' | 'wide-angle-camera' | 'telephoto-camera';\n\n/**\n * Indentifiers for a logical camera (Combinations of multiple physical cameras to create a single logical camera).\n *\n * * `\"dual-camera\"`: A combination of wide-angle and telephoto cameras that creates a capture device.\n * * `\"dual-wide-camera\"`: A device that consists of two cameras of fixed focal length, one ultrawide angle and one wide angle.\n * * `\"triple-camera\"`: A device that consists of three cameras of fixed focal length, one ultrawide angle, one wide angle, and one telephoto.\n */\nexport type LogicalCameraDeviceType = 'dual-camera' | 'dual-wide-camera' | 'triple-camera';\n\n/**\n * Parses an array of physical device types into a single {@linkcode PhysicalCameraDeviceType} or {@linkcode LogicalCameraDeviceType}, depending what matches.\n * @method\n */\nexport const parsePhysicalDeviceTypes = (\n  physicalDeviceTypes: PhysicalCameraDeviceType[],\n): PhysicalCameraDeviceType | LogicalCameraDeviceType => {\n  if (physicalDeviceTypes.length === 1) {\n    // @ts-expect-error for very obvious reasons\n    return physicalDeviceTypes[0];\n  }\n\n  const hasWide = physicalDeviceTypes.includes('wide-angle-camera');\n  const hasUltra = physicalDeviceTypes.includes('ultra-wide-angle-camera');\n  const hasTele = physicalDeviceTypes.includes('telephoto-camera');\n\n  if (hasTele && hasWide && hasUltra) return 'triple-camera';\n  if (hasWide && hasUltra) return 'dual-wide-camera';\n  if (hasWide && hasTele) return 'dual-camera';\n\n  throw new Error(`Invalid physical device type combination! ${physicalDeviceTypes.join(' + ')}`);\n};\n\n/**\n * Indicates a format's color space.\n *\n * #### The following colorspaces are available on iOS:\n * * `\"srgb\"`: The sGRB color space.\n * * `\"p3-d65\"`: The P3 D65 wide color space which uses Illuminant D65 as the white point\n * * `\"hlg-bt2020\"`: The BT2020 wide color space which uses Illuminant D65 as the white point and Hybrid Log-Gamma as the transfer function\n *\n * > See [\"AVCaptureColorSpace\"](https://developer.apple.com/documentation/avfoundation/avcapturecolorspace) for more information.\n *\n * #### The following colorspaces are available on Android:\n * * `\"yuv\"`: The Multi-plane Android YCbCr color space. (YUV 420_888, 422_888 or 444_888)\n * * `\"jpeg\"`: The compressed JPEG color space.\n * * `\"jpeg-depth\"`: The compressed JPEG color space including depth data.\n * * `\"raw\"`: The Camera's RAW sensor color space. (Single-channel Bayer-mosaic image, usually 16 bit)\n * * `\"heic\"`: The compressed HEIC color space.\n * * `\"private\"`: The Android private opaque image format. (The choices of the actual format and pixel data layout are entirely up to the device-specific and framework internal implementations, and may vary depending on use cases even for the same device. These buffers are not directly accessible to the application)\n * * `\"depth-16\"`: The Android dense depth image format (16 bit)\n * * `\"unknown\"`: Placeholder for an unknown image/pixel format. [Edit this file](https://github.com/mrousavy/react-native-vision-camera/edit/main/android/src/main/java/com/mrousavy/camera/parsers/ImageFormat+String.kt) to add a name for the unknown format.\n *\n * > See [\"Android Color Formats\"](https://jbit.net/Android_Colors/) for more information.\n */\nexport type ColorSpace =\n  // ios\n  | 'hlg-bt2020'\n  | 'p3-d65'\n  | 'srgb'\n  // android\n  | 'yuv'\n  | 'jpeg'\n  | 'jpeg-depth'\n  | 'raw'\n  | 'heic'\n  | 'private'\n  | 'depth-16'\n  | 'unknown';\n\n/**\n * Indicates a format's autofocus system.\n *\n * * `\"none\"`: Indicates that autofocus is not available\n * * `\"contrast-detection\"`: Indicates that autofocus is achieved by contrast detection. Contrast detection performs a focus scan to find the optimal position\n * * `\"phase-detection\"`: Indicates that autofocus is achieved by phase detection. Phase detection has the ability to achieve focus in many cases without a focus scan. Phase detection autofocus is typically less visually intrusive than contrast detection autofocus\n */\nexport type AutoFocusSystem = 'contrast-detection' | 'phase-detection' | 'none';\n\n/**\n * Indicates a format's supported video stabilization mode\n *\n * * `\"off\"`: Indicates that video should not be stabilized\n * * `\"standard\"`: Indicates that video should be stabilized using the standard video stabilization algorithm introduced with iOS 5.0. Standard video stabilization has a reduced field of view. Enabling video stabilization may introduce additional latency into the video capture pipeline\n * * `\"cinematic\"`: Indicates that video should be stabilized using the cinematic stabilization algorithm for more dramatic results. Cinematic video stabilization has a reduced field of view compared to standard video stabilization. Enabling cinematic video stabilization introduces much more latency into the video capture pipeline than standard video stabilization and consumes significantly more system memory. Use narrow or identical min and max frame durations in conjunction with this mode\n * * `\"cinematic-extended\"`: Indicates that the video should be stabilized using the extended cinematic stabilization algorithm. Enabling extended cinematic stabilization introduces longer latency into the video capture pipeline compared to the AVCaptureVideoStabilizationModeCinematic and consumes more memory, but yields improved stability. It is recommended to use identical or similar min and max frame durations in conjunction with this mode (iOS 13.0+)\n * * `\"auto\"`: Indicates that the most appropriate video stabilization mode for the device and format should be chosen automatically\n */\nexport type VideoStabilizationMode = 'off' | 'standard' | 'cinematic' | 'cinematic-extended' | 'auto';\n\nexport interface FrameRateRange {\n  minFrameRate: number;\n  maxFrameRate: number;\n}\n\n/**\n * A Camera Device's video format. Do not create instances of this type yourself, only use {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()}.\n */\nexport interface CameraDeviceFormat {\n  /**\n   * The height of the highest resolution a still image (photo) can be produced in\n   */\n  photoHeight: number;\n  /**\n   * The width of the highest resolution a still image (photo) can be produced in\n   */\n  photoWidth: number;\n  /**\n   * The video resolutions's height\n   */\n  videoHeight: number;\n  /**\n   * The video resolution's width\n   */\n  videoWidth: number;\n  /**\n   * A boolean value specifying whether this format supports the highest possible photo quality that can be delivered on the current platform.\n   *\n   * @platform iOS 13.0+\n   */\n  isHighestPhotoQualitySupported?: boolean;\n  /**\n   * Maximum supported ISO value\n   */\n  maxISO: number;\n  /**\n   * Minimum supported ISO value\n   */\n  minISO: number;\n  /**\n   * The video field of view in degrees\n   */\n  fieldOfView: number;\n  /**\n   * The maximum zoom factor (e.g. `128`)\n   */\n  maxZoom: number;\n  /**\n   * The available color spaces.\n   *\n   * Note: On Android, this will always be only `[\"yuv\"]`\n   */\n  colorSpaces: ColorSpace[];\n  /**\n   * Specifies whether this format supports HDR mode for video capture\n   */\n  supportsVideoHDR: boolean;\n  /**\n   * Specifies whether this format supports HDR mode for photo capture\n   */\n  supportsPhotoHDR: boolean;\n  /**\n   * All available frame rate ranges. You can query this to find the highest frame rate available\n   */\n  frameRateRanges: FrameRateRange[];\n  /**\n   * Specifies this format's auto focus system.\n   */\n  autoFocusSystem: AutoFocusSystem;\n  /**\n   * All supported video stabilization modes\n   */\n  videoStabilizationModes: VideoStabilizationMode[];\n  /**\n   * Specifies this format's pixel format. The pixel format specifies how the individual pixels are interpreted as a visual image.\n   *\n   * The most common format is `420v`. Some formats (like `x420`) are not compatible with some frame processor plugins (e.g. MLKit)\n   */\n  pixelFormat: PixelFormat;\n}\n\n/**\n * Represents a camera device discovered by the {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()} function\n */\nexport interface CameraDevice {\n  /**\n   * The native ID of the camera device instance.\n   */\n  id: string;\n  /**\n   * The physical devices this `CameraDevice` contains.\n   *\n   * * If this camera device is a **logical camera** (combination of multiple physical cameras), there are multiple cameras in this array.\n   * * If this camera device is a **physical camera**, there is only a single element in this array.\n   *\n   * You can check if the camera is a logical multi-camera by using the `isMultiCam` property.\n   */\n  devices: PhysicalCameraDeviceType[];\n  /**\n   * Specifies the physical position of this camera. (back or front)\n   */\n  position: CameraPosition;\n  /**\n   * A friendly localized name describing the camera.\n   */\n  name: string;\n  /**\n   * Specifies whether this camera supports enabling flash for photo capture.\n   */\n  hasFlash: boolean;\n  /**\n   * Specifies whether this camera supports continuously enabling the flash to act like a torch (flash with video capture)\n   */\n  hasTorch: boolean;\n  /**\n   * A property indicating whether the device is a virtual multi-camera consisting of multiple combined physical cameras.\n   *\n   * Examples:\n   * * The Dual Camera, which supports seamlessly switching between a wide and telephoto camera while zooming and generating depth data from the disparities between the different points of view of the physical cameras.\n   * * The TrueDepth Camera, which generates depth data from disparities between a YUV camera and an Infrared camera pointed in the same direction.\n   */\n  isMultiCam: boolean;\n  /**\n   * Minimum available zoom factor (e.g. `1`)\n   */\n  minZoom: number;\n  /**\n   * Maximum available zoom factor (e.g. `128`)\n   */\n  maxZoom: number;\n  /**\n   * The zoom factor where the camera is \"neutral\".\n   *\n   * * For single-physical cameras this property is always `1.0`.\n   * * For multi cameras this property is a value between `minZoom` and `maxZoom`, where the camera is in _wide-angle_ mode and hasn't switched to the _ultra-wide-angle_ (\"fish-eye\") or telephoto camera yet.\n   *\n   * Use this value as an initial value for the zoom property if you implement custom zoom. (e.g. reanimated shared value should be initially set to this value)\n   * @example\n   * const device = ...\n   *\n   * const zoom = useSharedValue(device.neutralZoom) // <-- initial value so it doesn't start at ultra-wide\n   * const cameraProps = useAnimatedProps(() => ({\n   *   zoom: zoom.value\n   * }))\n   */\n  neutralZoom: number;\n  /**\n   * All available formats for this camera device. Use this to find the best format for your use case and set it to the Camera's {@linkcode CameraProps.format | Camera's .format} property.\n   *\n   * See [the Camera Formats documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/formats) for more information about Camera Formats.\n   */\n  formats: CameraDeviceFormat[];\n  /**\n   * Whether this camera device supports using Video Recordings (`video={true}`) and Frame Processors (`frameProcessor={...}`) at the same time. See [\"The `supportsParallelVideoProcessing` prop\"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) for more information.\n   *\n   * If this property is `false`, you can only enable `video` or add a `frameProcessor`, but not both.\n   *\n   * * On iOS this value is always `true`.\n   * * On newer Android devices this value is always `true`.\n   * * On older Android devices this value is `false` if the Camera's hardware level is `LEGACY` or `LIMITED`, `true` otherwise. (See [`INFO_SUPPORTED_HARDWARE_LEVEL`](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL) or [the tables at \"Regular capture\"](https://developer.android.com/reference/android/hardware/camera2/CameraDevice#regular-capture))\n   */\n  supportsParallelVideoProcessing: boolean;\n  /**\n   * Whether this camera device supports low light boost.\n   */\n  supportsLowLightBoost: boolean;\n  /**\n   * Whether this camera supports taking photos with depth data.\n   *\n   * **! Work in Progress !**\n   */\n  supportsDepthCapture: boolean;\n  /**\n   * Whether this camera supports taking photos in RAW format\n   *\n   * **! Work in Progress !**\n   */\n  supportsRawCapture: boolean;\n  /**\n   * Specifies whether this device supports focusing ({@linkcode Camera.focus | Camera.focus(...)})\n   */\n  supportsFocus: boolean;\n}\n"]}
\ No newline at end of file
+{"version":3,"names":["parsePhysicalDeviceTypes","physicalDeviceTypes","length","hasWide","includes","hasUltra","hasTele","Error","join","exports"],"sourceRoot":"../../src","sources":["CameraDevice.ts"],"mappings":";;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACO,MAAMA,wBAAwB,GACnCC,mBAA+C,IACQ;EACvD,IAAIA,mBAAmB,CAACC,MAAM,KAAK,CAAC,EAAE;IACpC;IACA,OAAOD,mBAAmB,CAAC,CAAC,CAAC;EAC/B;EAEA,MAAME,OAAO,GAAGF,mBAAmB,CAACG,QAAQ,CAAC,mBAAmB,CAAC;EACjE,MAAMC,QAAQ,GAAGJ,mBAAmB,CAACG,QAAQ,CAAC,yBAAyB,CAAC;EACxE,MAAME,OAAO,GAAGL,mBAAmB,CAACG,QAAQ,CAAC,kBAAkB,CAAC;EAEhE,IAAIE,OAAO,IAAIH,OAAO,IAAIE,QAAQ,EAAE,OAAO,eAAe;EAC1D,IAAIF,OAAO,IAAIE,QAAQ,EAAE,OAAO,kBAAkB;EAClD,IAAIF,OAAO,IAAIG,OAAO,EAAE,OAAO,aAAa;EAE5C,MAAM,IAAIC,KAAK,CAAE,6CAA4CN,mBAAmB,CAACO,IAAI,CAAC,KAAK,CAAE,EAAC,CAAC;AACjG,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;;AA0EA;AACA;AACA;AAFAC,OAAA,CAAAT,wBAAA,GAAAA,wBAAA"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js b/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js
index 34691b7..4720c88 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js
@@ -4,9 +4,6 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.tryParseNativeCameraError = exports.isErrorWithCause = exports.CameraRuntimeError = exports.CameraCaptureError = void 0;
-
-function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
-
 /**
  * Represents a JSON-style error cause. This contains native `NSError`/`Throwable` information, and can have recursive {@linkcode ErrorWithCause.cause | .cause} properties until the ultimate cause has been found.
  */
@@ -18,100 +15,86 @@ class CameraError extends Error {
   get code() {
     return this._code;
   }
-
   get message() {
     return this._message;
   }
-
   get cause() {
     const c = this._cause;
     if (c == null) return undefined;
     return new Error(`[${c.code}]: ${c.message}`);
   }
+
   /**
    * @internal
    */
-
-
   constructor(code, message, cause) {
     super(`[${code}]: ${message}${cause != null ? ` (Cause: ${cause.message})` : ''}`);
-
-    _defineProperty(this, "_code", void 0);
-
-    _defineProperty(this, "_message", void 0);
-
-    _defineProperty(this, "_cause", void 0);
-
     super.name = code;
     super.message = message;
     this._code = code;
     this._message = message;
     this._cause = cause;
   }
-
   toString() {
     return `[${this.code}]: ${this.message}`;
   }
-
 }
+
 /**
  * Represents any kind of error that occured while trying to capture a video or photo.
  *
- * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
  */
-
-
 class CameraCaptureError extends CameraError {}
+
 /**
  * Represents any kind of error that occured in the Camera View Module.
  *
- * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
  */
-
-
 exports.CameraCaptureError = CameraCaptureError;
-
 class CameraRuntimeError extends CameraError {}
+
 /**
  * Checks if the given `error` is of type {@linkcode ErrorWithCause}
  * @param {unknown} error Any unknown object to validate
  * @returns `true` if the given `error` is of type {@linkcode ErrorWithCause}
  */
-
-
 exports.CameraRuntimeError = CameraRuntimeError;
-
-const isErrorWithCause = error => typeof error === 'object' && error != null && // @ts-expect-error error is still unknown
-typeof error.message === 'string' && ( // @ts-expect-error error is still unknown
-typeof error.stacktrace === 'string' || error.stacktrace == null) && ( // @ts-expect-error error is still unknown
+const isErrorWithCause = error => typeof error === 'object' && error != null &&
+// @ts-expect-error error is still unknown
+typeof error.message === 'string' && (
+// @ts-expect-error error is still unknown
+typeof error.stacktrace === 'string' || error.stacktrace == null) && (
+// @ts-expect-error error is still unknown
 isErrorWithCause(error.cause) || error.cause == null);
-
 exports.isErrorWithCause = isErrorWithCause;
-
-const isCameraErrorJson = error => typeof error === 'object' && error != null && // @ts-expect-error error is still unknown
-typeof error.code === 'string' && // @ts-expect-error error is still unknown
-typeof error.message === 'string' && ( // @ts-expect-error error is still unknown
+const isCameraErrorJson = error => typeof error === 'object' && error != null &&
+// @ts-expect-error error is still unknown
+typeof error.code === 'string' &&
+// @ts-expect-error error is still unknown
+typeof error.message === 'string' && (
+// @ts-expect-error error is still unknown
 typeof error.cause === 'object' || error.cause == null);
+
 /**
  * Tries to parse an error coming from native to a typed JS camera error.
  * @param {CameraError} nativeError The native error instance. This is a JSON in the legacy native module architecture.
  * @returns A {@linkcode CameraRuntimeError} or {@linkcode CameraCaptureError}, or the `nativeError` itself if it's not parsable
  * @method
  */
-
-
 const tryParseNativeCameraError = nativeError => {
   if (isCameraErrorJson(nativeError)) {
     if (nativeError.code.startsWith('capture')) {
       return new CameraCaptureError(nativeError.code, nativeError.message, nativeError.cause);
     } else {
-      return new CameraRuntimeError( // @ts-expect-error the code is string, we narrow it down to TS union.
+      return new CameraRuntimeError(
+      // @ts-expect-error the code is string, we narrow it down to TS union.
       nativeError.code, nativeError.message, nativeError.cause);
     }
   } else {
     return nativeError;
   }
 };
-
 exports.tryParseNativeCameraError = tryParseNativeCameraError;
 //# sourceMappingURL=CameraError.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js.map b/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js.map
index c350653..bb67471 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraError.js.map
@@ -1 +1 @@
-{"version":3,"sources":["CameraError.ts"],"names":["CameraError","Error","code","_code","message","_message","cause","c","_cause","undefined","constructor","name","toString","CameraCaptureError","CameraRuntimeError","isErrorWithCause","error","stacktrace","isCameraErrorJson","tryParseNativeCameraError","nativeError","startsWith"],"mappings":";;;;;;;;;AAuDA;AACA;AACA;;AAyDA;AACA;AACA;AACA,MAAMA,WAAN,SAAyDC,KAAzD,CAA+D;AAK9C,MAAJC,IAAI,GAAU;AACvB,WAAO,KAAKC,KAAZ;AACD;;AACiB,MAAPC,OAAO,GAAW;AAC3B,WAAO,KAAKC,QAAZ;AACD;;AACe,MAALC,KAAK,GAAsB;AACpC,UAAMC,CAAC,GAAG,KAAKC,MAAf;AACA,QAAID,CAAC,IAAI,IAAT,EAAe,OAAOE,SAAP;AACf,WAAO,IAAIR,KAAJ,CAAW,IAAGM,CAAC,CAACL,IAAK,MAAKK,CAAC,CAACH,OAAQ,EAApC,CAAP;AACD;AAED;AACF;AACA;;;AACEM,EAAAA,WAAW,CAACR,IAAD,EAAcE,OAAd,EAA+BE,KAA/B,EAAuD;AAChE,UAAO,IAAGJ,IAAK,MAAKE,OAAQ,GAAEE,KAAK,IAAI,IAAT,GAAiB,YAAWA,KAAK,CAACF,OAAQ,GAA1C,GAA+C,EAAG,EAAhF;;AADgE;;AAAA;;AAAA;;AAEhE,UAAMO,IAAN,GAAaT,IAAb;AACA,UAAME,OAAN,GAAgBA,OAAhB;AACA,SAAKD,KAAL,GAAaD,IAAb;AACA,SAAKG,QAAL,GAAgBD,OAAhB;AACA,SAAKI,MAAL,GAAcF,KAAd;AACD;;AAEMM,EAAAA,QAAQ,GAAW;AACxB,WAAQ,IAAG,KAAKV,IAAK,MAAK,KAAKE,OAAQ,EAAvC;AACD;;AA/B4D;AAkC/D;AACA;AACA;AACA;AACA;;;AACO,MAAMS,kBAAN,SAAiCb,WAAjC,CAA2D;AAElE;AACA;AACA;AACA;AACA;;;;;AACO,MAAMc,kBAAN,SAAiCd,WAAjC,CAEL;AAEF;AACA;AACA;AACA;AACA;;;;;AACO,MAAMe,gBAAgB,GAAIC,KAAD,IAC9B,OAAOA,KAAP,KAAiB,QAAjB,IACAA,KAAK,IAAI,IADT,IAEA;AACA,OAAOA,KAAK,CAACZ,OAAb,KAAyB,QAHzB,MAIA;AACC,OAAOY,KAAK,CAACC,UAAb,KAA4B,QAA5B,IAAwCD,KAAK,CAACC,UAAN,IAAoB,IAL7D,OAMA;AACCF,gBAAgB,CAACC,KAAK,CAACV,KAAP,CAAhB,IAAiCU,KAAK,CAACV,KAAN,IAAe,IAPjD,CADK;;;;AAUP,MAAMY,iBAAiB,GAAIF,KAAD,IACxB,OAAOA,KAAP,KAAiB,QAAjB,IACAA,KAAK,IAAI,IADT,IAEA;AACA,OAAOA,KAAK,CAACd,IAAb,KAAsB,QAHtB,IAIA;AACA,OAAOc,KAAK,CAACZ,OAAb,KAAyB,QALzB,MAMA;AACC,OAAOY,KAAK,CAACV,KAAb,KAAuB,QAAvB,IAAmCU,KAAK,CAACV,KAAN,IAAe,IAPnD,CADF;AAUA;AACA;AACA;AACA;AACA;AACA;;;AACO,MAAMa,yBAAyB,GAAOC,WAAJ,IAAsE;AAC7G,MAAIF,iBAAiB,CAACE,WAAD,CAArB,EAAoC;AAClC,QAAIA,WAAW,CAAClB,IAAZ,CAAiBmB,UAAjB,CAA4B,SAA5B,CAAJ,EAA4C;AAC1C,aAAO,IAAIR,kBAAJ,CAAuBO,WAAW,CAAClB,IAAnC,EAAyDkB,WAAW,CAAChB,OAArE,EAA8EgB,WAAW,CAACd,KAA1F,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAIQ,kBAAJ,EACL;AACAM,MAAAA,WAAW,CAAClB,IAFP,EAGLkB,WAAW,CAAChB,OAHP,EAILgB,WAAW,CAACd,KAJP,CAAP;AAMD;AACF,GAXD,MAWO;AACL,WAAOc,WAAP;AACD;AACF,CAfM","sourcesContent":["export type PermissionError = 'permission/microphone-permission-denied' | 'permission/camera-permission-denied';\nexport type ParameterError =\n  | 'parameter/invalid-parameter'\n  | 'parameter/unsupported-os'\n  | 'parameter/unsupported-output'\n  | 'parameter/unsupported-input'\n  | 'parameter/invalid-combination';\nexport type DeviceError =\n  | 'device/configuration-error'\n  | 'device/no-device'\n  | 'device/invalid-device'\n  | 'device/parallel-video-processing-not-supported'\n  | 'device/torch-unavailable'\n  | 'device/microphone-unavailable'\n  | 'device/low-light-boost-not-supported'\n  | 'device/focus-not-supported'\n  | 'device/camera-not-available-on-simulator';\nexport type FrameProcessorError = 'frame-processor/unavailable';\nexport type FormatError =\n  | 'format/invalid-fps'\n  | 'format/invalid-hdr'\n  | 'format/invalid-low-light-boost'\n  | 'format/invalid-format'\n  | 'format/invalid-color-space'\n  | 'format/invalid-preset';\nexport type SessionError =\n  | 'session/camera-not-ready'\n  | 'session/audio-session-setup-failed'\n  | 'session/audio-in-use-by-other-app'\n  | 'session/audio-session-failed-to-activate';\nexport type CaptureError =\n  | 'capture/invalid-photo-format'\n  | 'capture/encoder-error'\n  | 'capture/muxer-error'\n  | 'capture/recording-in-progress'\n  | 'capture/no-recording-in-progress'\n  | 'capture/file-io-error'\n  | 'capture/create-temp-file-error'\n  | 'capture/invalid-video-options'\n  | 'capture/create-recorder-error'\n  | 'capture/recorder-error'\n  | 'capture/no-valid-data'\n  | 'capture/inactive-source'\n  | 'capture/insufficient-storage'\n  | 'capture/file-size-limit-reached'\n  | 'capture/invalid-photo-codec'\n  | 'capture/not-bound-error'\n  | 'capture/capture-type-not-supported'\n  | 'capture/video-not-enabled'\n  | 'capture/photo-not-enabled'\n  | 'capture/aborted'\n  | 'capture/unknown';\nexport type SystemError = 'system/no-camera-manager' | 'system/view-not-found';\nexport type UnknownError = 'unknown/unknown';\n\n/**\n * Represents a JSON-style error cause. This contains native `NSError`/`Throwable` information, and can have recursive {@linkcode ErrorWithCause.cause | .cause} properties until the ultimate cause has been found.\n */\nexport interface ErrorWithCause {\n  /**\n   * The native error's code.\n   *\n   * * iOS: `NSError.code`\n   * * Android: N/A\n   */\n  code?: number;\n  /**\n   * The native error's domain.\n   *\n   * * iOS: `NSError.domain`\n   * * Android: N/A\n   */\n  domain?: string;\n  /**\n   * The native error description\n   *\n   * * iOS: `NSError.message`\n   * * Android: `Throwable.message`\n   */\n  message: string;\n  /**\n   * Optional additional details\n   *\n   * * iOS: `NSError.userInfo`\n   * * Android: N/A\n   */\n  details?: Record<string, unknown>;\n  /**\n   * Optional Java stacktrace\n   *\n   * * iOS: N/A\n   * * Android: `Throwable.stacktrace.toString()`\n   */\n  stacktrace?: string;\n  /**\n   * Optional additional cause for nested errors\n   *\n   * * iOS: N/A\n   * * Android: `Throwable.cause`\n   */\n  cause?: ErrorWithCause;\n}\n\ntype CameraErrorCode =\n  | PermissionError\n  | ParameterError\n  | DeviceError\n  | FrameProcessorError\n  | FormatError\n  | SessionError\n  | CaptureError\n  | SystemError\n  | UnknownError;\n\n/**\n * Represents any kind of error that occured in the {@linkcode Camera} View Module.\n */\nclass CameraError<TCode extends CameraErrorCode> extends Error {\n  private readonly _code: TCode;\n  private readonly _message: string;\n  private readonly _cause?: ErrorWithCause;\n\n  public get code(): TCode {\n    return this._code;\n  }\n  public get message(): string {\n    return this._message;\n  }\n  public get cause(): Error | undefined {\n    const c = this._cause;\n    if (c == null) return undefined;\n    return new Error(`[${c.code}]: ${c.message}`);\n  }\n\n  /**\n   * @internal\n   */\n  constructor(code: TCode, message: string, cause?: ErrorWithCause) {\n    super(`[${code}]: ${message}${cause != null ? ` (Cause: ${cause.message})` : ''}`);\n    super.name = code;\n    super.message = message;\n    this._code = code;\n    this._message = message;\n    this._cause = cause;\n  }\n\n  public toString(): string {\n    return `[${this.code}]: ${this.message}`;\n  }\n}\n\n/**\n * Represents any kind of error that occured while trying to capture a video or photo.\n *\n * See the [\"Camera Errors\" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.\n */\nexport class CameraCaptureError extends CameraError<CaptureError> {}\n\n/**\n * Represents any kind of error that occured in the Camera View Module.\n *\n * See the [\"Camera Errors\" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.\n */\nexport class CameraRuntimeError extends CameraError<\n  PermissionError | ParameterError | DeviceError | FormatError | FrameProcessorError | SessionError | SystemError | UnknownError\n> {}\n\n/**\n * Checks if the given `error` is of type {@linkcode ErrorWithCause}\n * @param {unknown} error Any unknown object to validate\n * @returns `true` if the given `error` is of type {@linkcode ErrorWithCause}\n */\nexport const isErrorWithCause = (error: unknown): error is ErrorWithCause =>\n  typeof error === 'object' &&\n  error != null &&\n  // @ts-expect-error error is still unknown\n  typeof error.message === 'string' &&\n  // @ts-expect-error error is still unknown\n  (typeof error.stacktrace === 'string' || error.stacktrace == null) &&\n  // @ts-expect-error error is still unknown\n  (isErrorWithCause(error.cause) || error.cause == null);\n\nconst isCameraErrorJson = (error: unknown): error is { code: string; message: string; cause?: ErrorWithCause } =>\n  typeof error === 'object' &&\n  error != null &&\n  // @ts-expect-error error is still unknown\n  typeof error.code === 'string' &&\n  // @ts-expect-error error is still unknown\n  typeof error.message === 'string' &&\n  // @ts-expect-error error is still unknown\n  (typeof error.cause === 'object' || error.cause == null);\n\n/**\n * Tries to parse an error coming from native to a typed JS camera error.\n * @param {CameraError} nativeError The native error instance. This is a JSON in the legacy native module architecture.\n * @returns A {@linkcode CameraRuntimeError} or {@linkcode CameraCaptureError}, or the `nativeError` itself if it's not parsable\n * @method\n */\nexport const tryParseNativeCameraError = <T>(nativeError: T): (CameraRuntimeError | CameraCaptureError) | T => {\n  if (isCameraErrorJson(nativeError)) {\n    if (nativeError.code.startsWith('capture')) {\n      return new CameraCaptureError(nativeError.code as CaptureError, nativeError.message, nativeError.cause);\n    } else {\n      return new CameraRuntimeError(\n        // @ts-expect-error the code is string, we narrow it down to TS union.\n        nativeError.code,\n        nativeError.message,\n        nativeError.cause,\n      );\n    }\n  } else {\n    return nativeError;\n  }\n};\n"]}
\ No newline at end of file
+{"version":3,"names":["CameraError","Error","code","_code","message","_message","cause","c","_cause","undefined","constructor","name","toString","CameraCaptureError","exports","CameraRuntimeError","isErrorWithCause","error","stacktrace","isCameraErrorJson","tryParseNativeCameraError","nativeError","startsWith"],"sourceRoot":"../../src","sources":["CameraError.ts"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraPosition.js.map b/node_modules/react-native-vision-camera/lib/commonjs/CameraPosition.js.map
index 9ffd4b2..f4e0458 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraPosition.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraPosition.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["CameraPosition.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraPreset.js.map b/node_modules/react-native-vision-camera/lib/commonjs/CameraPreset.js.map
index 9ffd4b2..7260b12 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraPreset.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraPreset.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["CameraPreset.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/CameraProps.js.map b/node_modules/react-native-vision-camera/lib/commonjs/CameraProps.js.map
index 9ffd4b2..f5d0d4d 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/CameraProps.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/CameraProps.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["CameraProps.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/Frame.js.map b/node_modules/react-native-vision-camera/lib/commonjs/Frame.js.map
index 9ffd4b2..b6541a5 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/Frame.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/Frame.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["Frame.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/FrameProcessorContext.js b/node_modules/react-native-vision-camera/lib/commonjs/FrameProcessorContext.js
new file mode 100644
index 0000000..1e3c29a
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/commonjs/FrameProcessorContext.js
@@ -0,0 +1,26 @@
+"use strict";
+
+Object.defineProperty(exports, "__esModule", {
+  value: true
+});
+exports.FrameProcessorContext = void 0;
+let workletRuntime = null;
+let createWorklet = () => {
+  throw new Error("Reanimated V3 is not installed, Frame Processors are not available!");
+};
+try {
+  const reanimated = require('react-native-reanimated');
+  if (reanimated.createWorkletRuntime == null) {
+    console.warn("Frame Processors are disabled because you're using an incompatible version of Reanimated.");
+  }
+  workletRuntime = reanimated.createWorkletRuntime('VisionCamera');
+  createWorklet = reanimated.makeShareableCloneRecursive;
+} catch {
+  // Frame Processors are not enabled
+}
+const FrameProcessorContext = {
+  workletRuntime: workletRuntime,
+  createWorklet: createWorklet
+};
+exports.FrameProcessorContext = FrameProcessorContext;
+//# sourceMappingURL=FrameProcessorContext.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/FrameProcessorContext.js.map b/node_modules/react-native-vision-camera/lib/commonjs/FrameProcessorContext.js.map
new file mode 100644
index 0000000..9e8a13b
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/commonjs/FrameProcessorContext.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["workletRuntime","createWorklet","Error","reanimated","require","createWorkletRuntime","console","warn","makeShareableCloneRecursive","FrameProcessorContext","exports"],"sourceRoot":"../../src","sources":["FrameProcessorContext.ts"],"mappings":";;;;;;AAAA,IAAIA,cAAc,GAAG,IAAI;AACzB,IAAIC,aAAa,GAAGA,CAAA,KAAM;EACxB,MAAM,IAAIC,KAAK,CAAC,qEAAqE,CAAC;AACxF,CAAC;AAED,IAAI;EACF,MAAMC,UAAU,GAAGC,OAAO,CAAC,yBAAyB,CAAC;EACrD,IAAID,UAAU,CAACE,oBAAoB,IAAI,IAAI,EAAE;IAC3CC,OAAO,CAACC,IAAI,CAAC,2FAA2F,CAAC;EAC3G;EACAP,cAAc,GAAGG,UAAU,CAACE,oBAAoB,CAAC,cAAc,CAAC;EAChEJ,aAAa,GAAGE,UAAU,CAACK,2BAA2B;AACxD,CAAC,CAAC,MAAM;EACN;AAAA;AAGK,MAAMC,qBAAqB,GAAG;EACnCT,cAAc,EAAEA,cAAc;EAC9BC,aAAa,EAAEA;AACjB,CAAC;AAAAS,OAAA,CAAAD,qBAAA,GAAAA,qBAAA"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/PhotoFile.js.map b/node_modules/react-native-vision-camera/lib/commonjs/PhotoFile.js.map
index 9ffd4b2..220a942 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/PhotoFile.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/PhotoFile.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["PhotoFile.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/PixelFormat.js.map b/node_modules/react-native-vision-camera/lib/commonjs/PixelFormat.js.map
index 9ffd4b2..b89d3e3 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/PixelFormat.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/PixelFormat.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["PixelFormat.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/Point.js.map b/node_modules/react-native-vision-camera/lib/commonjs/Point.js.map
index 9ffd4b2..7805603 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/Point.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/Point.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["Point.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/Snapshot.js.map b/node_modules/react-native-vision-camera/lib/commonjs/Snapshot.js.map
index 9ffd4b2..5eb9af3 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/Snapshot.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/Snapshot.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["Snapshot.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/TemporaryFile.js.map b/node_modules/react-native-vision-camera/lib/commonjs/TemporaryFile.js.map
index 9ffd4b2..a710f60 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/TemporaryFile.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/TemporaryFile.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["TemporaryFile.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/VideoFile.js.map b/node_modules/react-native-vision-camera/lib/commonjs/VideoFile.js.map
index 9ffd4b2..72015f6 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/VideoFile.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/VideoFile.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["VideoFile.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js
index 5339e2d..6c0924e 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js
@@ -4,9 +4,7 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.withDisableFrameProcessorsAndroid = void 0;
-
 var _configPlugins = require("@expo/config-plugins");
-
 /**
  * Set the `disableFrameProcessors` value in the static `gradle.properties` file.
  * This is used to disable frame processors if you don't need it for android.
@@ -26,6 +24,5 @@ const withDisableFrameProcessorsAndroid = c => {
     return config;
   });
 };
-
 exports.withDisableFrameProcessorsAndroid = withDisableFrameProcessorsAndroid;
 //# sourceMappingURL=withDisableFrameProcessorsAndroid.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js.map b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js.map
index 631027a..966cebb 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsAndroid.js.map
@@ -1 +1 @@
-{"version":3,"sources":["withDisableFrameProcessorsAndroid.ts"],"names":["withDisableFrameProcessorsAndroid","c","disableFrameProcessorsKey","config","modResults","filter","item","type","key","push","value"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACO,MAAMA,iCAA+C,GAAIC,CAAD,IAAO;AACpE,QAAMC,yBAAyB,GAAG,wBAAlC;AACA,SAAO,yCAAqBD,CAArB,EAAyBE,MAAD,IAAY;AACzCA,IAAAA,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACC,UAAP,CAAkBC,MAAlB,CAA0BC,IAAD,IAAU;AACrD,UAAIA,IAAI,CAACC,IAAL,KAAc,UAAd,IAA4BD,IAAI,CAACE,GAAL,KAAaN,yBAA7C,EAAwE,OAAO,KAAP;AACxE,aAAO,IAAP;AACD,KAHmB,CAApB;AAKAC,IAAAA,MAAM,CAACC,UAAP,CAAkBK,IAAlB,CAAuB;AACrBF,MAAAA,IAAI,EAAE,UADe;AAErBC,MAAAA,GAAG,EAAEN,yBAFgB;AAGrBQ,MAAAA,KAAK,EAAE;AAHc,KAAvB;AAMA,WAAOP,MAAP;AACD,GAbM,CAAP;AAcD,CAhBM","sourcesContent":["import { ConfigPlugin, withGradleProperties } from '@expo/config-plugins';\n\n/**\n * Set the `disableFrameProcessors` value in the static `gradle.properties` file.\n * This is used to disable frame processors if you don't need it for android.\n */\nexport const withDisableFrameProcessorsAndroid: ConfigPlugin = (c) => {\n  const disableFrameProcessorsKey = 'disableFrameProcessors';\n  return withGradleProperties(c, (config) => {\n    config.modResults = config.modResults.filter((item) => {\n      if (item.type === 'property' && item.key === disableFrameProcessorsKey) return false;\n      return true;\n    });\n\n    config.modResults.push({\n      type: 'property',\n      key: disableFrameProcessorsKey,\n      value: 'true',\n    });\n\n    return config;\n  });\n};\n"]}
\ No newline at end of file
+{"version":3,"names":["_configPlugins","require","withDisableFrameProcessorsAndroid","c","disableFrameProcessorsKey","withGradleProperties","config","modResults","filter","item","type","key","push","value","exports"],"sourceRoot":"../../../src","sources":["expo-plugin/withDisableFrameProcessorsAndroid.ts"],"mappings":";;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACA;AACO,MAAMC,iCAA+C,GAAIC,CAAC,IAAK;EACpE,MAAMC,yBAAyB,GAAG,wBAAwB;EAC1D,OAAO,IAAAC,mCAAoB,EAACF,CAAC,EAAGG,MAAM,IAAK;IACzCA,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACC,UAAU,CAACC,MAAM,CAAEC,IAAI,IAAK;MACrD,IAAIA,IAAI,CAACC,IAAI,KAAK,UAAU,IAAID,IAAI,CAACE,GAAG,KAAKP,yBAAyB,EAAE,OAAO,KAAK;MACpF,OAAO,IAAI;IACb,CAAC,CAAC;IAEFE,MAAM,CAACC,UAAU,CAACK,IAAI,CAAC;MACrBF,IAAI,EAAE,UAAU;MAChBC,GAAG,EAAEP,yBAAyB;MAC9BS,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,OAAOP,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAACQ,OAAA,CAAAZ,iCAAA,GAAAA,iCAAA"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js
index a2a8571..6b8ae7f 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js
@@ -4,9 +4,7 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.withDisableFrameProcessorsIOS = void 0;
-
 var _configPlugins = require("@expo/config-plugins");
-
 /* eslint-disable @typescript-eslint/no-unsafe-assignment */
 
 /**
@@ -19,20 +17,15 @@ const withDisableFrameProcessorsIOS = c => {
     const configurations = xcodeProject.pbxXCBuildConfigurationSection();
     const inheritKey = '"$(inherited)"';
     const valueKey = '"VISION_CAMERA_DISABLE_FRAME_PROCESSORS=1"';
-
     for (const key in configurations) {
-      var _buildSettings$GCC_PR;
-
       const buildSettings = configurations[key].buildSettings;
       if (buildSettings == null) continue;
-      const preprocessorDefinitions = (_buildSettings$GCC_PR = buildSettings.GCC_PREPROCESSOR_DEFINITIONS) !== null && _buildSettings$GCC_PR !== void 0 ? _buildSettings$GCC_PR : [inheritKey];
+      const preprocessorDefinitions = buildSettings.GCC_PREPROCESSOR_DEFINITIONS ?? [inheritKey];
       if (!preprocessorDefinitions.includes(valueKey)) preprocessorDefinitions.push(valueKey);
       buildSettings.GCC_PREPROCESSOR_DEFINITIONS = preprocessorDefinitions;
     }
-
     return config;
   });
 };
-
 exports.withDisableFrameProcessorsIOS = withDisableFrameProcessorsIOS;
 //# sourceMappingURL=withDisableFrameProcessorsIOS.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js.map b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js.map
index 3bc4450..081bb57 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withDisableFrameProcessorsIOS.js.map
@@ -1 +1 @@
-{"version":3,"sources":["withDisableFrameProcessorsIOS.ts"],"names":["withDisableFrameProcessorsIOS","c","config","xcodeProject","modResults","configurations","pbxXCBuildConfigurationSection","inheritKey","valueKey","key","buildSettings","preprocessorDefinitions","GCC_PREPROCESSOR_DEFINITIONS","includes","push"],"mappings":";;;;;;;AACA;;AADA;;AAGA;AACA;AACA;AACA;AACO,MAAMA,6BAA2C,GAAIC,CAAD,IAAO;AAChE,SAAO,qCAAiBA,CAAjB,EAAqBC,MAAD,IAAY;AACrC,UAAMC,YAA0B,GAAGD,MAAM,CAACE,UAA1C;AAEA,UAAMC,cAAc,GAAGF,YAAY,CAACG,8BAAb,EAAvB;AAEA,UAAMC,UAAU,GAAG,gBAAnB;AACA,UAAMC,QAAQ,GAAG,4CAAjB;;AAEA,SAAK,MAAMC,GAAX,IAAkBJ,cAAlB,EAAkC;AAAA;;AAChC,YAAMK,aAAa,GAAGL,cAAc,CAACI,GAAD,CAAd,CAAoBC,aAA1C;AACA,UAAIA,aAAa,IAAI,IAArB,EAA2B;AAE3B,YAAMC,uBAAuB,4BAAID,aAAa,CAACE,4BAAlB,yEAAkD,CAACL,UAAD,CAA/E;AAEA,UAAI,CAACI,uBAAuB,CAACE,QAAxB,CAAiCL,QAAjC,CAAL,EAAiDG,uBAAuB,CAACG,IAAxB,CAA6BN,QAA7B;AACjDE,MAAAA,aAAa,CAACE,4BAAd,GAA6CD,uBAA7C;AACD;;AACD,WAAOT,MAAP;AACD,GAlBM,CAAP;AAmBD,CApBM","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { ConfigPlugin, withXcodeProject, XcodeProject } from '@expo/config-plugins';\n\n/**\n * Set the `disableFrameProcessors` inside of the XcodeProject.\n * This is used to disable frame processors if you don't need it on iOS. (will save CPU and Memory)\n */\nexport const withDisableFrameProcessorsIOS: ConfigPlugin = (c) => {\n  return withXcodeProject(c, (config) => {\n    const xcodeProject: XcodeProject = config.modResults;\n\n    const configurations = xcodeProject.pbxXCBuildConfigurationSection();\n\n    const inheritKey = '\"$(inherited)\"';\n    const valueKey = '\"VISION_CAMERA_DISABLE_FRAME_PROCESSORS=1\"';\n\n    for (const key in configurations) {\n      const buildSettings = configurations[key].buildSettings;\n      if (buildSettings == null) continue;\n\n      const preprocessorDefinitions = (buildSettings.GCC_PREPROCESSOR_DEFINITIONS ?? [inheritKey]) as string[];\n\n      if (!preprocessorDefinitions.includes(valueKey)) preprocessorDefinitions.push(valueKey);\n      buildSettings.GCC_PREPROCESSOR_DEFINITIONS = preprocessorDefinitions;\n    }\n    return config;\n  });\n};\n"]}
\ No newline at end of file
+{"version":3,"names":["_configPlugins","require","withDisableFrameProcessorsIOS","c","withXcodeProject","config","xcodeProject","modResults","configurations","pbxXCBuildConfigurationSection","inheritKey","valueKey","key","buildSettings","preprocessorDefinitions","GCC_PREPROCESSOR_DEFINITIONS","includes","push","exports"],"sourceRoot":"../../../src","sources":["expo-plugin/withDisableFrameProcessorsIOS.ts"],"mappings":";;;;;;AACA,IAAAA,cAAA,GAAAC,OAAA;AADA;;AAGA;AACA;AACA;AACA;AACO,MAAMC,6BAA2C,GAAIC,CAAC,IAAK;EAChE,OAAO,IAAAC,+BAAgB,EAACD,CAAC,EAAGE,MAAM,IAAK;IACrC,MAAMC,YAA0B,GAAGD,MAAM,CAACE,UAAU;IAEpD,MAAMC,cAAc,GAAGF,YAAY,CAACG,8BAA8B,CAAC,CAAC;IAEpE,MAAMC,UAAU,GAAG,gBAAgB;IACnC,MAAMC,QAAQ,GAAG,4CAA4C;IAE7D,KAAK,MAAMC,GAAG,IAAIJ,cAAc,EAAE;MAChC,MAAMK,aAAa,GAAGL,cAAc,CAACI,GAAG,CAAC,CAACC,aAAa;MACvD,IAAIA,aAAa,IAAI,IAAI,EAAE;MAE3B,MAAMC,uBAAuB,GAAID,aAAa,CAACE,4BAA4B,IAAI,CAACL,UAAU,CAAc;MAExG,IAAI,CAACI,uBAAuB,CAACE,QAAQ,CAACL,QAAQ,CAAC,EAAEG,uBAAuB,CAACG,IAAI,CAACN,QAAQ,CAAC;MACvFE,aAAa,CAACE,4BAA4B,GAAGD,uBAAuB;IACtE;IACA,OAAOT,MAAM;EACf,CAAC,CAAC;AACJ,CAAC;AAACa,OAAA,CAAAhB,6BAAA,GAAAA,6BAAA"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js
index dc7b48f..521ca62 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js
@@ -4,45 +4,29 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.default = void 0;
-
 var _configPlugins = require("@expo/config-plugins");
-
 var _withDisableFrameProcessorsAndroid = require("./withDisableFrameProcessorsAndroid");
-
 var _withDisableFrameProcessorsIOS = require("./withDisableFrameProcessorsIOS");
-
 // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment
 const pkg = require('../../../package.json');
-
 const CAMERA_USAGE = 'Allow $(PRODUCT_NAME) to access your camera';
 const MICROPHONE_USAGE = 'Allow $(PRODUCT_NAME) to access your microphone';
-
 const withCamera = function (config) {
-  var _ref, _props$cameraPermissi;
-
   let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
   if (config.ios == null) config.ios = {};
   if (config.ios.infoPlist == null) config.ios.infoPlist = {};
-  config.ios.infoPlist.NSCameraUsageDescription = (_ref = (_props$cameraPermissi = props.cameraPermissionText) !== null && _props$cameraPermissi !== void 0 ? _props$cameraPermissi : config.ios.infoPlist.NSCameraUsageDescription) !== null && _ref !== void 0 ? _ref : CAMERA_USAGE;
-
+  config.ios.infoPlist.NSCameraUsageDescription = props.cameraPermissionText ?? config.ios.infoPlist.NSCameraUsageDescription ?? CAMERA_USAGE;
   if (props.enableMicrophonePermission) {
-    var _ref2, _props$microphonePerm;
-
-    config.ios.infoPlist.NSMicrophoneUsageDescription = (_ref2 = (_props$microphonePerm = props.microphonePermissionText) !== null && _props$microphonePerm !== void 0 ? _props$microphonePerm : config.ios.infoPlist.NSMicrophoneUsageDescription) !== null && _ref2 !== void 0 ? _ref2 : MICROPHONE_USAGE;
+    config.ios.infoPlist.NSMicrophoneUsageDescription = props.microphonePermissionText ?? config.ios.infoPlist.NSMicrophoneUsageDescription ?? MICROPHONE_USAGE;
   }
-
   const androidPermissions = ['android.permission.CAMERA'];
   if (props.enableMicrophonePermission) androidPermissions.push('android.permission.RECORD_AUDIO');
-
   if (props.disableFrameProcessors) {
     config = (0, _withDisableFrameProcessorsAndroid.withDisableFrameProcessorsAndroid)(config);
     config = (0, _withDisableFrameProcessorsIOS.withDisableFrameProcessorsIOS)(config);
   }
-
   return (0, _configPlugins.withPlugins)(config, [[_configPlugins.AndroidConfig.Permissions.withPermissions, androidPermissions]]);
 };
-
 var _default = (0, _configPlugins.createRunOncePlugin)(withCamera, pkg.name, pkg.version);
-
 exports.default = _default;
 //# sourceMappingURL=withVisionCamera.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js.map b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js.map
index eb73e91..850e368 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/expo-plugin/withVisionCamera.js.map
@@ -1 +1 @@
-{"version":3,"sources":["withVisionCamera.ts"],"names":["pkg","require","CAMERA_USAGE","MICROPHONE_USAGE","withCamera","config","props","ios","infoPlist","NSCameraUsageDescription","cameraPermissionText","enableMicrophonePermission","NSMicrophoneUsageDescription","microphonePermissionText","androidPermissions","push","disableFrameProcessors","AndroidConfig","Permissions","withPermissions","name","version"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;AACA,MAAMA,GAAG,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAEA,MAAMC,YAAY,GAAG,6CAArB;AACA,MAAMC,gBAAgB,GAAG,iDAAzB;;AASA,MAAMC,UAA+B,GAAG,UAACC,MAAD,EAAwB;AAAA;;AAAA,MAAfC,KAAe,uEAAP,EAAO;AAC9D,MAAID,MAAM,CAACE,GAAP,IAAc,IAAlB,EAAwBF,MAAM,CAACE,GAAP,GAAa,EAAb;AACxB,MAAIF,MAAM,CAACE,GAAP,CAAWC,SAAX,IAAwB,IAA5B,EAAkCH,MAAM,CAACE,GAAP,CAAWC,SAAX,GAAuB,EAAvB;AAClCH,EAAAA,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBC,wBAArB,oCACEH,KAAK,CAACI,oBADR,yEACiCL,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBC,wBADtD,uCACyGP,YADzG;;AAEA,MAAII,KAAK,CAACK,0BAAV,EAAsC;AAAA;;AACpCN,IAAAA,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBI,4BAArB,qCACEN,KAAK,CAACO,wBADR,yEACqCR,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBI,4BAD1D,yCACiHT,gBADjH;AAED;;AACD,QAAMW,kBAAkB,GAAG,CAAC,2BAAD,CAA3B;AACA,MAAIR,KAAK,CAACK,0BAAV,EAAsCG,kBAAkB,CAACC,IAAnB,CAAwB,iCAAxB;;AAEtC,MAAIT,KAAK,CAACU,sBAAV,EAAkC;AAChCX,IAAAA,MAAM,GAAG,0EAAkCA,MAAlC,CAAT;AACAA,IAAAA,MAAM,GAAG,kEAA8BA,MAA9B,CAAT;AACD;;AAED,SAAO,gCAAYA,MAAZ,EAAoB,CAAC,CAACY,6BAAcC,WAAd,CAA0BC,eAA3B,EAA4CL,kBAA5C,CAAD,CAApB,CAAP;AACD,CAlBD;;eAoBe,wCAAoBV,UAApB,EAAgCJ,GAAG,CAACoB,IAApC,EAA0CpB,GAAG,CAACqB,OAA9C,C","sourcesContent":["import { withPlugins, AndroidConfig, ConfigPlugin, createRunOncePlugin } from '@expo/config-plugins';\nimport { withDisableFrameProcessorsAndroid } from './withDisableFrameProcessorsAndroid';\nimport { withDisableFrameProcessorsIOS } from './withDisableFrameProcessorsIOS';\n// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment\nconst pkg = require('../../../package.json');\n\nconst CAMERA_USAGE = 'Allow $(PRODUCT_NAME) to access your camera';\nconst MICROPHONE_USAGE = 'Allow $(PRODUCT_NAME) to access your microphone';\n\ntype Props = {\n  cameraPermissionText?: string;\n  enableMicrophonePermission?: boolean;\n  microphonePermissionText?: string;\n  disableFrameProcessors?: boolean;\n};\n\nconst withCamera: ConfigPlugin<Props> = (config, props = {}) => {\n  if (config.ios == null) config.ios = {};\n  if (config.ios.infoPlist == null) config.ios.infoPlist = {};\n  config.ios.infoPlist.NSCameraUsageDescription =\n    props.cameraPermissionText ?? (config.ios.infoPlist.NSCameraUsageDescription as string | undefined) ?? CAMERA_USAGE;\n  if (props.enableMicrophonePermission) {\n    config.ios.infoPlist.NSMicrophoneUsageDescription =\n      props.microphonePermissionText ?? (config.ios.infoPlist.NSMicrophoneUsageDescription as string | undefined) ?? MICROPHONE_USAGE;\n  }\n  const androidPermissions = ['android.permission.CAMERA'];\n  if (props.enableMicrophonePermission) androidPermissions.push('android.permission.RECORD_AUDIO');\n\n  if (props.disableFrameProcessors) {\n    config = withDisableFrameProcessorsAndroid(config);\n    config = withDisableFrameProcessorsIOS(config);\n  }\n\n  return withPlugins(config, [[AndroidConfig.Permissions.withPermissions, androidPermissions]]);\n};\n\nexport default createRunOncePlugin(withCamera, pkg.name, pkg.version);\n"]}
\ No newline at end of file
+{"version":3,"names":["_configPlugins","require","_withDisableFrameProcessorsAndroid","_withDisableFrameProcessorsIOS","pkg","CAMERA_USAGE","MICROPHONE_USAGE","withCamera","config","props","arguments","length","undefined","ios","infoPlist","NSCameraUsageDescription","cameraPermissionText","enableMicrophonePermission","NSMicrophoneUsageDescription","microphonePermissionText","androidPermissions","push","disableFrameProcessors","withDisableFrameProcessorsAndroid","withDisableFrameProcessorsIOS","withPlugins","AndroidConfig","Permissions","withPermissions","_default","createRunOncePlugin","name","version","exports","default"],"sourceRoot":"../../../src","sources":["expo-plugin/withVisionCamera.ts"],"mappings":";;;;;;AAAA,IAAAA,cAAA,GAAAC,OAAA;AACA,IAAAC,kCAAA,GAAAD,OAAA;AACA,IAAAE,8BAAA,GAAAF,OAAA;AACA;AACA,MAAMG,GAAG,GAAGH,OAAO,CAAC,uBAAuB,CAAC;AAE5C,MAAMI,YAAY,GAAG,6CAA6C;AAClE,MAAMC,gBAAgB,GAAG,iDAAiD;AAS1E,MAAMC,UAA+B,GAAG,SAAAA,CAACC,MAAM,EAAiB;EAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACzD,IAAIF,MAAM,CAACK,GAAG,IAAI,IAAI,EAAEL,MAAM,CAACK,GAAG,GAAG,CAAC,CAAC;EACvC,IAAIL,MAAM,CAACK,GAAG,CAACC,SAAS,IAAI,IAAI,EAAEN,MAAM,CAACK,GAAG,CAACC,SAAS,GAAG,CAAC,CAAC;EAC3DN,MAAM,CAACK,GAAG,CAACC,SAAS,CAACC,wBAAwB,GAC3CN,KAAK,CAACO,oBAAoB,IAAKR,MAAM,CAACK,GAAG,CAACC,SAAS,CAACC,wBAA+C,IAAIV,YAAY;EACrH,IAAII,KAAK,CAACQ,0BAA0B,EAAE;IACpCT,MAAM,CAACK,GAAG,CAACC,SAAS,CAACI,4BAA4B,GAC/CT,KAAK,CAACU,wBAAwB,IAAKX,MAAM,CAACK,GAAG,CAACC,SAAS,CAACI,4BAAmD,IAAIZ,gBAAgB;EACnI;EACA,MAAMc,kBAAkB,GAAG,CAAC,2BAA2B,CAAC;EACxD,IAAIX,KAAK,CAACQ,0BAA0B,EAAEG,kBAAkB,CAACC,IAAI,CAAC,iCAAiC,CAAC;EAEhG,IAAIZ,KAAK,CAACa,sBAAsB,EAAE;IAChCd,MAAM,GAAG,IAAAe,oEAAiC,EAACf,MAAM,CAAC;IAClDA,MAAM,GAAG,IAAAgB,4DAA6B,EAAChB,MAAM,CAAC;EAChD;EAEA,OAAO,IAAAiB,0BAAW,EAACjB,MAAM,EAAE,CAAC,CAACkB,4BAAa,CAACC,WAAW,CAACC,eAAe,EAAER,kBAAkB,CAAC,CAAC,CAAC;AAC/F,CAAC;AAAC,IAAAS,QAAA,GAEa,IAAAC,kCAAmB,EAACvB,UAAU,EAAEH,GAAG,CAAC2B,IAAI,EAAE3B,GAAG,CAAC4B,OAAO,CAAC;AAAAC,OAAA,CAAAC,OAAA,GAAAL,QAAA"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/globals.d.js.map b/node_modules/react-native-vision-camera/lib/commonjs/globals.d.js.map
index 9ffd4b2..329e9d3 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/globals.d.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/globals.d.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["globals.d.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js
index 53cd54f..8cbeb64 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js
@@ -4,21 +4,17 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.useCameraDevices = useCameraDevices;
-
 var _react = require("react");
-
 var _FormatFilter = require("../utils/FormatFilter");
-
 var _Camera = require("../Camera");
-
 var _CameraDevice = require("../CameraDevice");
-
 const DefaultCameraDevices = {
   back: undefined,
   external: undefined,
   front: undefined,
   unspecified: undefined
 };
+
 /**
  * Gets the best available {@linkcode CameraDevice}. Devices with more cameras are preferred.
  *
@@ -32,23 +28,34 @@ const DefaultCameraDevices = {
  * ```
  */
 
+/**
+ * Gets a {@linkcode CameraDevice} for the requested device type.
+ *
+ * @param {PhysicalCameraDeviceType | LogicalCameraDeviceType} deviceType Specifies a device type which will be used as a device filter.
+ * @returns A {@linkcode CameraDevice} for the requested device type.
+ * @throws {@linkcode CameraRuntimeError} if no device was found.
+ * @example
+ * ```tsx
+ * const device = useCameraDevice('wide-angle-camera')
+ * // ...
+ * return <Camera device={device} />
+ * ```
+ */
+
 function useCameraDevices(deviceType) {
   const [cameraDevices, setCameraDevices] = (0, _react.useState)(DefaultCameraDevices);
   (0, _react.useEffect)(() => {
     let isMounted = true;
-
     const loadDevice = async () => {
       let devices = await _Camera.Camera.getAvailableCameraDevices();
       if (!isMounted) return;
       devices = devices.sort(_FormatFilter.sortDevices);
-
       if (deviceType != null) {
         devices = devices.filter(d => {
           const parsedType = (0, _CameraDevice.parsePhysicalDeviceTypes)(d.devices);
           return parsedType === deviceType;
         });
       }
-
       setCameraDevices({
         back: devices.find(d => d.position === 'back'),
         external: devices.find(d => d.position === 'external'),
@@ -56,7 +63,6 @@ function useCameraDevices(deviceType) {
         unspecified: devices.find(d => d.position === 'unspecified')
       });
     };
-
     loadDevice();
     return () => {
       isMounted = false;
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js.map b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js.map
index 61d26c2..81b0749 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraDevices.js.map
@@ -1 +1 @@
-{"version":3,"sources":["useCameraDevices.ts"],"names":["DefaultCameraDevices","back","undefined","external","front","unspecified","useCameraDevices","deviceType","cameraDevices","setCameraDevices","isMounted","loadDevice","devices","Camera","getAvailableCameraDevices","sort","sortDevices","filter","d","parsedType","find","position"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAKA,MAAMA,oBAAmC,GAAG;AAC1CC,EAAAA,IAAI,EAAEC,SADoC;AAE1CC,EAAAA,QAAQ,EAAED,SAFgC;AAG1CE,EAAAA,KAAK,EAAEF,SAHmC;AAI1CG,EAAAA,WAAW,EAAEH;AAJ6B,CAA5C;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAkBO,SAASI,gBAAT,CAA0BC,UAA1B,EAA0G;AAC/G,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC,qBAAwBT,oBAAxB,CAA1C;AAEA,wBAAU,MAAM;AACd,QAAIU,SAAS,GAAG,IAAhB;;AAEA,UAAMC,UAAU,GAAG,YAA2B;AAC5C,UAAIC,OAAO,GAAG,MAAMC,eAAOC,yBAAP,EAApB;AACA,UAAI,CAACJ,SAAL,EAAgB;AAEhBE,MAAAA,OAAO,GAAGA,OAAO,CAACG,IAAR,CAAaC,yBAAb,CAAV;;AACA,UAAIT,UAAU,IAAI,IAAlB,EAAwB;AACtBK,QAAAA,OAAO,GAAGA,OAAO,CAACK,MAAR,CAAgBC,CAAD,IAAO;AAC9B,gBAAMC,UAAU,GAAG,4CAAyBD,CAAC,CAACN,OAA3B,CAAnB;AACA,iBAAOO,UAAU,KAAKZ,UAAtB;AACD,SAHS,CAAV;AAID;;AACDE,MAAAA,gBAAgB,CAAC;AACfR,QAAAA,IAAI,EAAEW,OAAO,CAACQ,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,MAAnC,CADS;AAEflB,QAAAA,QAAQ,EAAES,OAAO,CAACQ,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,UAAnC,CAFK;AAGfjB,QAAAA,KAAK,EAAEQ,OAAO,CAACQ,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,OAAnC,CAHQ;AAIfhB,QAAAA,WAAW,EAAEO,OAAO,CAACQ,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,aAAnC;AAJE,OAAD,CAAhB;AAMD,KAjBD;;AAkBAV,IAAAA,UAAU;AAEV,WAAO,MAAM;AACXD,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GA1BD,EA0BG,CAACH,UAAD,CA1BH;AA4BA,SAAOC,aAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport type { CameraPosition } from '../CameraPosition';\nimport { sortDevices } from '../utils/FormatFilter';\nimport { Camera } from '../Camera';\nimport { CameraDevice, LogicalCameraDeviceType, parsePhysicalDeviceTypes, PhysicalCameraDeviceType } from '../CameraDevice';\n\nexport type CameraDevices = {\n  [key in CameraPosition]: CameraDevice | undefined;\n};\nconst DefaultCameraDevices: CameraDevices = {\n  back: undefined,\n  external: undefined,\n  front: undefined,\n  unspecified: undefined,\n};\n\n/**\n * Gets the best available {@linkcode CameraDevice}. Devices with more cameras are preferred.\n *\n * @returns The best matching {@linkcode CameraDevice}.\n * @throws {@linkcode CameraRuntimeError} if no device was found.\n * @example\n * ```tsx\n * const device = useCameraDevice()\n * // ...\n * return <Camera device={device} />\n * ```\n */\nexport function useCameraDevices(): CameraDevices;\n\n/**\n * Gets a {@linkcode CameraDevice} for the requested device type.\n *\n * @param {PhysicalCameraDeviceType | LogicalCameraDeviceType} deviceType Specifies a device type which will be used as a device filter.\n * @returns A {@linkcode CameraDevice} for the requested device type.\n * @throws {@linkcode CameraRuntimeError} if no device was found.\n * @example\n * ```tsx\n * const device = useCameraDevice('wide-angle-camera')\n * // ...\n * return <Camera device={device} />\n * ```\n */\nexport function useCameraDevices(deviceType: PhysicalCameraDeviceType | LogicalCameraDeviceType): CameraDevices;\n\nexport function useCameraDevices(deviceType?: PhysicalCameraDeviceType | LogicalCameraDeviceType): CameraDevices {\n  const [cameraDevices, setCameraDevices] = useState<CameraDevices>(DefaultCameraDevices);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const loadDevice = async (): Promise<void> => {\n      let devices = await Camera.getAvailableCameraDevices();\n      if (!isMounted) return;\n\n      devices = devices.sort(sortDevices);\n      if (deviceType != null) {\n        devices = devices.filter((d) => {\n          const parsedType = parsePhysicalDeviceTypes(d.devices);\n          return parsedType === deviceType;\n        });\n      }\n      setCameraDevices({\n        back: devices.find((d) => d.position === 'back'),\n        external: devices.find((d) => d.position === 'external'),\n        front: devices.find((d) => d.position === 'front'),\n        unspecified: devices.find((d) => d.position === 'unspecified'),\n      });\n    };\n    loadDevice();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [deviceType]);\n\n  return cameraDevices;\n}\n"]}
\ No newline at end of file
+{"version":3,"names":["_react","require","_FormatFilter","_Camera","_CameraDevice","DefaultCameraDevices","back","undefined","external","front","unspecified","useCameraDevices","deviceType","cameraDevices","setCameraDevices","useState","useEffect","isMounted","loadDevice","devices","Camera","getAvailableCameraDevices","sort","sortDevices","filter","d","parsedType","parsePhysicalDeviceTypes","find","position"],"sourceRoot":"../../../src","sources":["hooks/useCameraDevices.ts"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AAKA,MAAMI,oBAAmC,GAAG;EAC1CC,IAAI,EAAEC,SAAS;EACfC,QAAQ,EAAED,SAAS;EACnBE,KAAK,EAAEF,SAAS;EAChBG,WAAW,EAAEH;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGO,SAASI,gBAAgBA,CAACC,UAA+D,EAAiB;EAC/G,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG,IAAAC,eAAQ,EAAgBV,oBAAoB,CAAC;EAEvF,IAAAW,gBAAS,EAAC,MAAM;IACd,IAAIC,SAAS,GAAG,IAAI;IAEpB,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAA2B;MAC5C,IAAIC,OAAO,GAAG,MAAMC,cAAM,CAACC,yBAAyB,CAAC,CAAC;MACtD,IAAI,CAACJ,SAAS,EAAE;MAEhBE,OAAO,GAAGA,OAAO,CAACG,IAAI,CAACC,yBAAW,CAAC;MACnC,IAAIX,UAAU,IAAI,IAAI,EAAE;QACtBO,OAAO,GAAGA,OAAO,CAACK,MAAM,CAAEC,CAAC,IAAK;UAC9B,MAAMC,UAAU,GAAG,IAAAC,sCAAwB,EAACF,CAAC,CAACN,OAAO,CAAC;UACtD,OAAOO,UAAU,KAAKd,UAAU;QAClC,CAAC,CAAC;MACJ;MACAE,gBAAgB,CAAC;QACfR,IAAI,EAAEa,OAAO,CAACS,IAAI,CAAEH,CAAC,IAAKA,CAAC,CAACI,QAAQ,KAAK,MAAM,CAAC;QAChDrB,QAAQ,EAAEW,OAAO,CAACS,IAAI,CAAEH,CAAC,IAAKA,CAAC,CAACI,QAAQ,KAAK,UAAU,CAAC;QACxDpB,KAAK,EAAEU,OAAO,CAACS,IAAI,CAAEH,CAAC,IAAKA,CAAC,CAACI,QAAQ,KAAK,OAAO,CAAC;QAClDnB,WAAW,EAAES,OAAO,CAACS,IAAI,CAAEH,CAAC,IAAKA,CAAC,CAACI,QAAQ,KAAK,aAAa;MAC/D,CAAC,CAAC;IACJ,CAAC;IACDX,UAAU,CAAC,CAAC;IAEZ,OAAO,MAAM;MACXD,SAAS,GAAG,KAAK;IACnB,CAAC;EACH,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,OAAOC,aAAa;AACtB"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js
index fbf0449..8071f04 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js
@@ -4,11 +4,8 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.useCameraFormat = useCameraFormat;
-
 var _react = require("react");
-
 var _FormatFilter = require("../utils/FormatFilter");
-
 /**
  * Returns the best format for the given camera device.
  *
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js.map b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js.map
index 28d99ab..5fb1380 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useCameraFormat.js.map
@@ -1 +1 @@
-{"version":3,"sources":["useCameraFormat.ts"],"names":["useCameraFormat","device","formats","sort","sortFormats"],"mappings":";;;;;;;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,eAAT,CAAyBC,MAAzB,EAAgF;AACrF,SAAO,oBAAQ,MAAMA,MAAN,aAAMA,MAAN,uBAAMA,MAAM,CAAEC,OAAR,CAAgBC,IAAhB,CAAqBC,yBAArB,EAAkC,CAAlC,CAAd,EAAoD,CAACH,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEC,OAAT,CAApD,CAAP;AACD","sourcesContent":["import { useMemo } from 'react';\nimport type { CameraDevice, CameraDeviceFormat } from '../CameraDevice';\nimport { sortFormats } from '../utils/FormatFilter';\n\n/**\n * Returns the best format for the given camera device.\n *\n * This function tries to choose a format with the highest possible photo-capture resolution and best matching aspect ratio.\n *\n * @param {CameraDevice} device The Camera Device\n *\n * @returns The best matching format for the given camera device, or `undefined` if the camera device is `undefined`.\n */\nexport function useCameraFormat(device?: CameraDevice): CameraDeviceFormat | undefined {\n  return useMemo(() => device?.formats.sort(sortFormats)[0], [device?.formats]);\n}\n"]}
\ No newline at end of file
+{"version":3,"names":["_react","require","_FormatFilter","useCameraFormat","device","useMemo","formats","sort","sortFormats"],"sourceRoot":"../../../src","sources":["hooks/useCameraFormat.ts"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,IAAAC,aAAA,GAAAD,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,eAAeA,CAACC,MAAqB,EAAkC;EACrF,OAAO,IAAAC,cAAO,EAAC,MAAMD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,OAAO,CAACC,IAAI,CAACC,yBAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAACJ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEE,OAAO,CAAC,CAAC;AAC/E"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js
index 6ab045d..649e907 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js
@@ -4,13 +4,9 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.useFrameProcessor = useFrameProcessor;
-
 var _react = require("react");
-
-/* global _setGlobalConsole */
-const capturableConsole = console;
 /**
- * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors))
+ * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://react-native-vision-camera.com/docs/guides/frame-processors))
  *
  * Make sure to add the `'worklet'` directive to the top of the Frame Processor function, otherwise it will not get compiled into a worklet.
  *
@@ -26,37 +22,12 @@ const capturableConsole = console;
  * }, [])
  * ```
  */
-
 function useFrameProcessor(frameProcessor, dependencies) {
   return (0, _react.useCallback)(frame => {
-    'worklet'; // @ts-expect-error
-
-    if (global.didSetConsole == null || global.didSetConsole === false) {
-      const console = {
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        debug: capturableConsole.debug.__callAsync,
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        log: capturableConsole.log.__callAsync,
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        warn: capturableConsole.warn.__callAsync,
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        error: capturableConsole.error.__callAsync,
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        info: capturableConsole.info.__callAsync
-      }; // @ts-expect-error _setGlobalConsole is set by RuntimeDecorator::decorateRuntime
-
-      _setGlobalConsole(console); // @ts-expect-error
-
-
-      global.didSetConsole = true;
-    }
+    'worklet';
 
-    frameProcessor(frame); // eslint-disable-next-line react-hooks/exhaustive-deps
+    frameProcessor(frame);
+    // eslint-disable-next-line react-hooks/exhaustive-deps
   }, dependencies);
 }
 //# sourceMappingURL=useFrameProcessor.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js.map b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js.map
index f44d9b9..429bdeb 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/hooks/useFrameProcessor.js.map
@@ -1 +1 @@
-{"version":3,"sources":["useFrameProcessor.ts"],"names":["capturableConsole","console","useFrameProcessor","frameProcessor","dependencies","frame","global","didSetConsole","debug","__callAsync","log","warn","error","info","_setGlobalConsole"],"mappings":";;;;;;;AAEA;;AAFA;AAOA,MAAMA,iBAAiB,GAAGC,OAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,iBAAT,CAA2BC,cAA3B,EAA2DC,YAA3D,EAAyG;AAC9G,SAAO,wBAAaC,KAAD,IAAkB;AACnC,cADmC,CAGnC;;AACA,QAAIC,MAAM,CAACC,aAAP,IAAwB,IAAxB,IAAgCD,MAAM,CAACC,aAAP,KAAyB,KAA7D,EAAoE;AAClE,YAAMN,OAAO,GAAG;AACd;AACA;AACAO,QAAAA,KAAK,EAAER,iBAAiB,CAACQ,KAAlB,CAAwBC,WAHjB;AAId;AACA;AACAC,QAAAA,GAAG,EAAEV,iBAAiB,CAACU,GAAlB,CAAsBD,WANb;AAOd;AACA;AACAE,QAAAA,IAAI,EAAEX,iBAAiB,CAACW,IAAlB,CAAuBF,WATf;AAUd;AACA;AACAG,QAAAA,KAAK,EAAEZ,iBAAiB,CAACY,KAAlB,CAAwBH,WAZjB;AAad;AACA;AACAI,QAAAA,IAAI,EAAEb,iBAAiB,CAACa,IAAlB,CAAuBJ;AAff,OAAhB,CADkE,CAkBlE;;AACAK,MAAAA,iBAAiB,CAACb,OAAD,CAAjB,CAnBkE,CAoBlE;;;AACAK,MAAAA,MAAM,CAACC,aAAP,GAAuB,IAAvB;AACD;;AAEDJ,IAAAA,cAAc,CAACE,KAAD,CAAd,CA5BmC,CA6BnC;AACD,GA9BM,EA8BJD,YA9BI,CAAP;AA+BD","sourcesContent":["/* global _setGlobalConsole */\n\nimport { DependencyList, useCallback } from 'react';\nimport type { Frame } from '../Frame';\n\ntype FrameProcessor = (frame: Frame) => void;\n\nconst capturableConsole = console;\n\n/**\n * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See [\"Frame Processors\"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors))\n *\n * Make sure to add the `'worklet'` directive to the top of the Frame Processor function, otherwise it will not get compiled into a worklet.\n *\n * @param frameProcessor The Frame Processor\n * @param dependencies The React dependencies which will be copied into the VisionCamera JS-Runtime.\n * @returns The memoized Frame Processor.\n * @example\n * ```ts\n * const frameProcessor = useFrameProcessor((frame) => {\n *   'worklet'\n *   const qrCodes = scanQRCodes(frame)\n *   console.log(`QR Codes: ${qrCodes}`)\n * }, [])\n * ```\n */\nexport function useFrameProcessor(frameProcessor: FrameProcessor, dependencies: DependencyList): FrameProcessor {\n  return useCallback((frame: Frame) => {\n    'worklet';\n\n    // @ts-expect-error\n    if (global.didSetConsole == null || global.didSetConsole === false) {\n      const console = {\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        debug: capturableConsole.debug.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        log: capturableConsole.log.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        warn: capturableConsole.warn.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        error: capturableConsole.error.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        info: capturableConsole.info.__callAsync,\n      };\n      // @ts-expect-error _setGlobalConsole is set by RuntimeDecorator::decorateRuntime\n      _setGlobalConsole(console);\n      // @ts-expect-error\n      global.didSetConsole = true;\n    }\n\n    frameProcessor(frame);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n"]}
\ No newline at end of file
+{"version":3,"names":["_react","require","useFrameProcessor","frameProcessor","dependencies","useCallback","frame"],"sourceRoot":"../../../src","sources":["hooks/useFrameProcessor.ts"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,iBAAiBA,CAACC,cAA8B,EAAEC,YAA4B,EAAkB;EAC9G,OAAO,IAAAC,kBAAW,EAAEC,KAAY,IAAK;IACnC,SAAS;;IACTH,cAAc,CAACG,KAAK,CAAC;IACrB;EACF,CAAC,EAAEF,YAAY,CAAC;AAClB"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/index.js b/node_modules/react-native-vision-camera/lib/commonjs/index.js
index 3a6993d..bdcd598 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/index.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/index.js
@@ -3,9 +3,7 @@
 Object.defineProperty(exports, "__esModule", {
   value: true
 });
-
 var _Camera = require("./Camera");
-
 Object.keys(_Camera).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _Camera[key]) return;
@@ -16,9 +14,7 @@ Object.keys(_Camera).forEach(function (key) {
     }
   });
 });
-
 var _CameraDevice = require("./CameraDevice");
-
 Object.keys(_CameraDevice).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _CameraDevice[key]) return;
@@ -29,9 +25,7 @@ Object.keys(_CameraDevice).forEach(function (key) {
     }
   });
 });
-
 var _CameraError = require("./CameraError");
-
 Object.keys(_CameraError).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _CameraError[key]) return;
@@ -42,9 +36,7 @@ Object.keys(_CameraError).forEach(function (key) {
     }
   });
 });
-
 var _CameraPosition = require("./CameraPosition");
-
 Object.keys(_CameraPosition).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _CameraPosition[key]) return;
@@ -55,9 +47,7 @@ Object.keys(_CameraPosition).forEach(function (key) {
     }
   });
 });
-
 var _CameraPreset = require("./CameraPreset");
-
 Object.keys(_CameraPreset).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _CameraPreset[key]) return;
@@ -68,9 +58,7 @@ Object.keys(_CameraPreset).forEach(function (key) {
     }
   });
 });
-
 var _CameraProps = require("./CameraProps");
-
 Object.keys(_CameraProps).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _CameraProps[key]) return;
@@ -81,9 +69,7 @@ Object.keys(_CameraProps).forEach(function (key) {
     }
   });
 });
-
 var _Frame = require("./Frame");
-
 Object.keys(_Frame).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _Frame[key]) return;
@@ -94,9 +80,7 @@ Object.keys(_Frame).forEach(function (key) {
     }
   });
 });
-
 var _PhotoFile = require("./PhotoFile");
-
 Object.keys(_PhotoFile).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _PhotoFile[key]) return;
@@ -107,9 +91,7 @@ Object.keys(_PhotoFile).forEach(function (key) {
     }
   });
 });
-
 var _Point = require("./Point");
-
 Object.keys(_Point).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _Point[key]) return;
@@ -120,9 +102,7 @@ Object.keys(_Point).forEach(function (key) {
     }
   });
 });
-
 var _Snapshot = require("./Snapshot");
-
 Object.keys(_Snapshot).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _Snapshot[key]) return;
@@ -133,9 +113,7 @@ Object.keys(_Snapshot).forEach(function (key) {
     }
   });
 });
-
 var _TemporaryFile = require("./TemporaryFile");
-
 Object.keys(_TemporaryFile).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _TemporaryFile[key]) return;
@@ -146,9 +124,7 @@ Object.keys(_TemporaryFile).forEach(function (key) {
     }
   });
 });
-
 var _VideoFile = require("./VideoFile");
-
 Object.keys(_VideoFile).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _VideoFile[key]) return;
@@ -159,9 +135,7 @@ Object.keys(_VideoFile).forEach(function (key) {
     }
   });
 });
-
 var _useCameraDevices = require("./hooks/useCameraDevices");
-
 Object.keys(_useCameraDevices).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _useCameraDevices[key]) return;
@@ -172,9 +146,7 @@ Object.keys(_useCameraDevices).forEach(function (key) {
     }
   });
 });
-
 var _useCameraFormat = require("./hooks/useCameraFormat");
-
 Object.keys(_useCameraFormat).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _useCameraFormat[key]) return;
@@ -185,9 +157,7 @@ Object.keys(_useCameraFormat).forEach(function (key) {
     }
   });
 });
-
 var _useFrameProcessor = require("./hooks/useFrameProcessor");
-
 Object.keys(_useFrameProcessor).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _useFrameProcessor[key]) return;
@@ -198,9 +168,7 @@ Object.keys(_useFrameProcessor).forEach(function (key) {
     }
   });
 });
-
 var _FormatFilter = require("./utils/FormatFilter");
-
 Object.keys(_FormatFilter).forEach(function (key) {
   if (key === "default" || key === "__esModule") return;
   if (key in exports && exports[key] === _FormatFilter[key]) return;
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/index.js.map b/node_modules/react-native-vision-camera/lib/commonjs/index.js.map
index fe8b29c..942150a 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/index.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/index.js.map
@@ -1 +1 @@
-{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export * from './Camera';\nexport * from './CameraDevice';\nexport * from './CameraError';\nexport * from './CameraPosition';\nexport * from './CameraPreset';\nexport * from './CameraProps';\nexport * from './Frame';\nexport * from './CameraProps';\nexport * from './PhotoFile';\nexport * from './Point';\nexport * from './Snapshot';\nexport * from './TemporaryFile';\nexport * from './VideoFile';\n\nexport * from './hooks/useCameraDevices';\nexport * from './hooks/useCameraFormat';\nexport * from './hooks/useFrameProcessor';\n\nexport * from './utils/FormatFilter';\n"]}
\ No newline at end of file
+{"version":3,"names":["_Camera","require","Object","keys","forEach","key","exports","defineProperty","enumerable","get","_CameraDevice","_CameraError","_CameraPosition","_CameraPreset","_CameraProps","_Frame","_PhotoFile","_Point","_Snapshot","_TemporaryFile","_VideoFile","_useCameraDevices","_useCameraFormat","_useFrameProcessor","_FormatFilter"],"sourceRoot":"../../src","sources":["index.ts"],"mappings":";;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAH,OAAA,EAAAI,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAL,OAAA,CAAAK,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAT,OAAA,CAAAK,GAAA;IAAA;EAAA;AAAA;AACA,IAAAK,aAAA,GAAAT,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAO,aAAA,EAAAN,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAK,aAAA,CAAAL,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAC,aAAA,CAAAL,GAAA;IAAA;EAAA;AAAA;AACA,IAAAM,YAAA,GAAAV,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAQ,YAAA,EAAAP,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAM,YAAA,CAAAN,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAE,YAAA,CAAAN,GAAA;IAAA;EAAA;AAAA;AACA,IAAAO,eAAA,GAAAX,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAS,eAAA,EAAAR,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAO,eAAA,CAAAP,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAG,eAAA,CAAAP,GAAA;IAAA;EAAA;AAAA;AACA,IAAAQ,aAAA,GAAAZ,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAU,aAAA,EAAAT,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAQ,aAAA,CAAAR,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAI,aAAA,CAAAR,GAAA;IAAA;EAAA;AAAA;AACA,IAAAS,YAAA,GAAAb,OAAA;AAEAC,MAAA,CAAAC,IAAA,CAAAW,YAAA,EAAAV,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAS,YAAA,CAAAT,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAK,YAAA,CAAAT,GAAA;IAAA;EAAA;AAAA;AADA,IAAAU,MAAA,GAAAd,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAY,MAAA,EAAAX,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAU,MAAA,CAAAV,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAM,MAAA,CAAAV,GAAA;IAAA;EAAA;AAAA;AAEA,IAAAW,UAAA,GAAAf,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAa,UAAA,EAAAZ,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAW,UAAA,CAAAX,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAO,UAAA,CAAAX,GAAA;IAAA;EAAA;AAAA;AACA,IAAAY,MAAA,GAAAhB,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAc,MAAA,EAAAb,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAY,MAAA,CAAAZ,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAQ,MAAA,CAAAZ,GAAA;IAAA;EAAA;AAAA;AACA,IAAAa,SAAA,GAAAjB,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAe,SAAA,EAAAd,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAa,SAAA,CAAAb,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAS,SAAA,CAAAb,GAAA;IAAA;EAAA;AAAA;AACA,IAAAc,cAAA,GAAAlB,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAgB,cAAA,EAAAf,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAc,cAAA,CAAAd,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAU,cAAA,CAAAd,GAAA;IAAA;EAAA;AAAA;AACA,IAAAe,UAAA,GAAAnB,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAiB,UAAA,EAAAhB,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAe,UAAA,CAAAf,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAW,UAAA,CAAAf,GAAA;IAAA;EAAA;AAAA;AAEA,IAAAgB,iBAAA,GAAApB,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAkB,iBAAA,EAAAjB,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAgB,iBAAA,CAAAhB,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAY,iBAAA,CAAAhB,GAAA;IAAA;EAAA;AAAA;AACA,IAAAiB,gBAAA,GAAArB,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAmB,gBAAA,EAAAlB,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAiB,gBAAA,CAAAjB,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAa,gBAAA,CAAAjB,GAAA;IAAA;EAAA;AAAA;AACA,IAAAkB,kBAAA,GAAAtB,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAoB,kBAAA,EAAAnB,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAkB,kBAAA,CAAAlB,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAc,kBAAA,CAAAlB,GAAA;IAAA;EAAA;AAAA;AAEA,IAAAmB,aAAA,GAAAvB,OAAA;AAAAC,MAAA,CAAAC,IAAA,CAAAqB,aAAA,EAAApB,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAA,GAAA,IAAAC,OAAA,IAAAA,OAAA,CAAAD,GAAA,MAAAmB,aAAA,CAAAnB,GAAA;EAAAH,MAAA,CAAAK,cAAA,CAAAD,OAAA,EAAAD,GAAA;IAAAG,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAe,aAAA,CAAAnB,GAAA;IAAA;EAAA;AAAA"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js b/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js
index aec88e3..6783b3d 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js
+++ b/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js
@@ -4,9 +4,7 @@ Object.defineProperty(exports, "__esModule", {
   value: true
 });
 exports.sortFormats = exports.sortDevices = exports.frameRateIncluded = void 0;
-
 var _reactNative = require("react-native");
-
 /**
  * Compares two devices by the following criteria:
  * * `wide-angle-camera`s are ranked higher than others
@@ -27,8 +25,9 @@ const sortDevices = (left, right) => {
   const leftHasWideAngle = left.devices.includes('wide-angle-camera');
   const rightHasWideAngle = right.devices.includes('wide-angle-camera');
   if (leftHasWideAngle) leftPoints += 2;
-  if (rightHasWideAngle) rightPoints += 2; // telephoto cameras often have very poor quality.
+  if (rightHasWideAngle) rightPoints += 2;
 
+  // telephoto cameras often have very poor quality.
   const leftHasTelephoto = left.devices.includes('telephoto-camera');
   const rightHasTelephoto = right.devices.includes('telephoto-camera');
   if (leftHasTelephoto) leftPoints -= 2;
@@ -37,38 +36,40 @@ const sortDevices = (left, right) => {
   if (right.devices.length > left.devices.length) rightPoints += 1;
   return rightPoints - leftPoints;
 };
-
 exports.sortDevices = sortDevices;
 const SCREEN_SIZE = {
   width: _reactNative.Dimensions.get('window').width,
   height: _reactNative.Dimensions.get('window').height
 };
 const SCREEN_ASPECT_RATIO = SCREEN_SIZE.width / SCREEN_SIZE.height;
+
 /**
  * Sort formats by resolution and aspect ratio difference (to the Screen size).
  *
  * > Note that this makes the `sort()` function descending, so the first element (`[0]`) is the "best" device.
  */
-
 const sortFormats = (left, right) => {
   let leftPoints = 0,
-      rightPoints = 0; // we downscale the points so much that we are in smaller number ranges for future calculations
-  // e.g. for 4k (4096), this adds 8 points.
+    rightPoints = 0;
 
+  // we downscale the points so much that we are in smaller number ranges for future calculations
+  // e.g. for 4k (4096), this adds 8 points.
   leftPoints += Math.round(left.photoWidth / 500);
-  rightPoints += Math.round(right.photoWidth / 500); // e.g. for 4k (4096), this adds 8 points.
-
+  rightPoints += Math.round(right.photoWidth / 500);
+  // e.g. for 4k (4096), this adds 8 points.
   leftPoints += Math.round(left.videoWidth / 500);
-  rightPoints += Math.round(right.videoWidth / 500); // we downscale the points here as well, so if left has 16:9 and right has 21:9, this roughly
+  rightPoints += Math.round(right.videoWidth / 500);
+
+  // we downscale the points here as well, so if left has 16:9 and right has 21:9, this roughly
   // adds 5 points. If the difference is smaller, e.g. 16:9 vs 17:9, this roughly adds a little
   // bit over 1 point, just enough to overrule the FPS below.
-
   const leftAspectRatioDiff = left.photoHeight / left.photoWidth - SCREEN_ASPECT_RATIO;
   const rightAspectRatioDiff = right.photoHeight / right.photoWidth - SCREEN_ASPECT_RATIO;
   leftPoints -= Math.abs(leftAspectRatioDiff) * 10;
   rightPoints -= Math.abs(rightAspectRatioDiff) * 10;
   return rightPoints - leftPoints;
 };
+
 /**
  * Returns `true` if the given Frame Rate Range (`range`) contains the given frame rate (`fps`)
  *
@@ -81,11 +82,7 @@ const sortFormats = (left, right) => {
  * ```
  * @method
  */
-
-
 exports.sortFormats = sortFormats;
-
 const frameRateIncluded = (range, fps) => fps >= range.minFrameRate && fps <= range.maxFrameRate;
-
 exports.frameRateIncluded = frameRateIncluded;
 //# sourceMappingURL=FormatFilter.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js.map b/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js.map
index 60474c1..6526f30 100644
--- a/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js.map
+++ b/node_modules/react-native-vision-camera/lib/commonjs/utils/FormatFilter.js.map
@@ -1 +1 @@
-{"version":3,"sources":["FormatFilter.ts"],"names":["sortDevices","left","right","leftPoints","rightPoints","leftHasWideAngle","devices","includes","rightHasWideAngle","leftHasTelephoto","rightHasTelephoto","length","SCREEN_SIZE","width","Dimensions","get","height","SCREEN_ASPECT_RATIO","sortFormats","Math","round","photoWidth","videoWidth","leftAspectRatioDiff","photoHeight","rightAspectRatioDiff","abs","frameRateIncluded","range","fps","minFrameRate","maxFrameRate"],"mappings":"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","sourcesContent":["import { Dimensions } from 'react-native';\nimport type { CameraDevice, CameraDeviceFormat, FrameRateRange } from '../CameraDevice';\n\n/**\n * Compares two devices by the following criteria:\n * * `wide-angle-camera`s are ranked higher than others\n * * Devices with more physical cameras are ranked higher than ones with less. (e.g. \"Triple Camera\" > \"Wide-Angle Camera\")\n *\n * > Note that this makes the `sort()` function descending, so the first element (`[0]`) is the \"best\" device.\n *\n * @example\n * ```ts\n * const devices = camera.devices.sort(sortDevices)\n * const bestDevice = devices[0]\n * ```\n * @method\n */\nexport const sortDevices = (left: CameraDevice, right: CameraDevice): number => {\n  let leftPoints = 0;\n  let rightPoints = 0;\n\n  const leftHasWideAngle = left.devices.includes('wide-angle-camera');\n  const rightHasWideAngle = right.devices.includes('wide-angle-camera');\n  if (leftHasWideAngle) leftPoints += 2;\n  if (rightHasWideAngle) rightPoints += 2;\n\n  // telephoto cameras often have very poor quality.\n  const leftHasTelephoto = left.devices.includes('telephoto-camera');\n  const rightHasTelephoto = right.devices.includes('telephoto-camera');\n  if (leftHasTelephoto) leftPoints -= 2;\n  if (rightHasTelephoto) rightPoints -= 2;\n\n  if (left.devices.length > right.devices.length) leftPoints += 1;\n  if (right.devices.length > left.devices.length) rightPoints += 1;\n\n  return rightPoints - leftPoints;\n};\n\nconst SCREEN_SIZE = {\n  width: Dimensions.get('window').width,\n  height: Dimensions.get('window').height,\n};\nconst SCREEN_ASPECT_RATIO = SCREEN_SIZE.width / SCREEN_SIZE.height;\n\n/**\n * Sort formats by resolution and aspect ratio difference (to the Screen size).\n *\n * > Note that this makes the `sort()` function descending, so the first element (`[0]`) is the \"best\" device.\n */\nexport const sortFormats = (left: CameraDeviceFormat, right: CameraDeviceFormat): number => {\n  let leftPoints = 0,\n    rightPoints = 0;\n\n  // we downscale the points so much that we are in smaller number ranges for future calculations\n  // e.g. for 4k (4096), this adds 8 points.\n  leftPoints += Math.round(left.photoWidth / 500);\n  rightPoints += Math.round(right.photoWidth / 500);\n  // e.g. for 4k (4096), this adds 8 points.\n  leftPoints += Math.round(left.videoWidth / 500);\n  rightPoints += Math.round(right.videoWidth / 500);\n\n  // we downscale the points here as well, so if left has 16:9 and right has 21:9, this roughly\n  // adds 5 points. If the difference is smaller, e.g. 16:9 vs 17:9, this roughly adds a little\n  // bit over 1 point, just enough to overrule the FPS below.\n  const leftAspectRatioDiff = left.photoHeight / left.photoWidth - SCREEN_ASPECT_RATIO;\n  const rightAspectRatioDiff = right.photoHeight / right.photoWidth - SCREEN_ASPECT_RATIO;\n  leftPoints -= Math.abs(leftAspectRatioDiff) * 10;\n  rightPoints -= Math.abs(rightAspectRatioDiff) * 10;\n\n  return rightPoints - leftPoints;\n};\n\n/**\n * Returns `true` if the given Frame Rate Range (`range`) contains the given frame rate (`fps`)\n *\n * @param {FrameRateRange} range The range to check if the given `fps` are included in\n * @param {number} fps The FPS to check if the given `range` supports.\n * @example\n * ```ts\n * // get all formats that support 60 FPS\n * const formatsWithHighFps = useMemo(() => device.formats.filter((f) => f.frameRateRanges.some((r) => frameRateIncluded(r, 60))), [device.formats])\n * ```\n * @method\n */\nexport const frameRateIncluded = (range: FrameRateRange, fps: number): boolean => fps >= range.minFrameRate && fps <= range.maxFrameRate;\n"]}
\ No newline at end of file
+{"version":3,"names":["_reactNative","require","sortDevices","left","right","leftPoints","rightPoints","leftHasWideAngle","devices","includes","rightHasWideAngle","leftHasTelephoto","rightHasTelephoto","length","exports","SCREEN_SIZE","width","Dimensions","get","height","SCREEN_ASPECT_RATIO","sortFormats","Math","round","photoWidth","videoWidth","leftAspectRatioDiff","photoHeight","rightAspectRatioDiff","abs","frameRateIncluded","range","fps","minFrameRate","maxFrameRate"],"sourceRoot":"../../../src","sources":["utils/FormatFilter.ts"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/Camera.js b/node_modules/react-native-vision-camera/lib/module/Camera.js
index 59ede18..c822fac 100644
--- a/node_modules/react-native-vision-camera/lib/module/Camera.js
+++ b/node_modules/react-native-vision-camera/lib/module/Camera.js
@@ -1,20 +1,23 @@
-function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
-
-function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
-
+function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
 import React from 'react';
 import { requireNativeComponent, NativeModules, findNodeHandle, Platform } from 'react-native';
 import { CameraCaptureError, CameraRuntimeError, tryParseNativeCameraError, isErrorWithCause } from './CameraError';
+import { FrameProcessorContext } from './FrameProcessorContext';
+
+//#region Types
+
 //#endregion
+
 // NativeModules automatically resolves 'CameraView' to 'CameraViewModule'
 // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
 const CameraModule = NativeModules.CameraView;
-if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was null! Did you run pod install?"); //#region Camera Component
+if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was null! Did you run pod install?");
 
+//#region Camera Component
 /**
  * ### A powerful `<Camera>` component.
  *
- * Read the [VisionCamera documentation](https://mrousavy.github.io/react-native-vision-camera/) for more information.
+ * Read the [VisionCamera documentation](https://react-native-vision-camera.com/) for more information.
  *
  * The `<Camera>` component's most important (and therefore _required_) properties are:
  *
@@ -40,24 +43,15 @@ if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was
  *
  * @component
  */
-
 export class Camera extends React.PureComponent {
   /** @internal */
-
+  static displayName = 'Camera';
   /** @internal */
-
+  displayName = Camera.displayName;
+  isNativeViewMounted = false;
   /** @internal */
   constructor(props) {
     super(props);
-
-    _defineProperty(this, "displayName", Camera.displayName);
-
-    _defineProperty(this, "lastFrameProcessor", void 0);
-
-    _defineProperty(this, "isNativeViewMounted", false);
-
-    _defineProperty(this, "ref", void 0);
-
     this.onViewReady = this.onViewReady.bind(this);
     this.onInitialized = this.onInitialized.bind(this);
     this.onError = this.onError.bind(this);
@@ -65,17 +59,15 @@ export class Camera extends React.PureComponent {
     this.ref = /*#__PURE__*/React.createRef();
     this.lastFrameProcessor = undefined;
   }
-
   get handle() {
     const nodeHandle = findNodeHandle(this.ref.current);
-
     if (nodeHandle == null || nodeHandle === -1) {
       throw new CameraRuntimeError('system/view-not-found', "Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?");
     }
-
     return nodeHandle;
-  } //#region View-specific functions (UIViewManager)
+  }
 
+  //#region View-specific functions (UIViewManager)
   /**
    * Take a single photo and write it's content to a temporary file.
    *
@@ -89,15 +81,14 @@ export class Camera extends React.PureComponent {
    * })
    * ```
    */
-
-
   async takePhoto(options) {
     try {
-      return await CameraModule.takePhoto(this.handle, options !== null && options !== void 0 ? options : {});
+      return await CameraModule.takePhoto(this.handle, options ?? {});
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
   }
+
   /**
    * Take a snapshot of the current preview view.
    *
@@ -114,17 +105,15 @@ export class Camera extends React.PureComponent {
    * })
    * ```
    */
-
-
   async takeSnapshot(options) {
     if (Platform.OS !== 'android') throw new CameraCaptureError('capture/capture-type-not-supported', `'takeSnapshot()' is not available on ${Platform.OS}!`);
-
     try {
-      return await CameraModule.takeSnapshot(this.handle, options !== null && options !== void 0 ? options : {});
+      return await CameraModule.takeSnapshot(this.handle, options ?? {});
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
   }
+
   /**
    * Start a new video recording.
    *
@@ -147,8 +136,6 @@ export class Camera extends React.PureComponent {
    * }, 5000)
    * ```
    */
-
-
   startRecording(options) {
     const {
       onRecordingError,
@@ -156,19 +143,18 @@ export class Camera extends React.PureComponent {
       ...passThroughOptions
     } = options;
     if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function') throw new CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');
-
     const onRecordCallback = (video, error) => {
       if (error != null) return onRecordingError(error);
       if (video != null) return onRecordingFinished(video);
-    }; // TODO: Use TurboModules to either make this a sync invokation, or make it async.
-
-
+    };
+    // TODO: Use TurboModules to either make this a sync invokation, or make it async.
     try {
       CameraModule.startRecording(this.handle, passThroughOptions, onRecordCallback);
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
   }
+
   /**
    * Pauses the current video recording.
    *
@@ -189,8 +175,6 @@ export class Camera extends React.PureComponent {
    * const video = await camera.current.stopRecording()
    * ```
    */
-
-
   async pauseRecording() {
     try {
       return await CameraModule.pauseRecording(this.handle);
@@ -198,6 +182,7 @@ export class Camera extends React.PureComponent {
       throw tryParseNativeCameraError(e);
     }
   }
+
   /**
    * Resumes a currently paused video recording.
    *
@@ -218,8 +203,6 @@ export class Camera extends React.PureComponent {
    * const video = await camera.current.stopRecording()
    * ```
    */
-
-
   async resumeRecording() {
     try {
       return await CameraModule.resumeRecording(this.handle);
@@ -227,6 +210,7 @@ export class Camera extends React.PureComponent {
       throw tryParseNativeCameraError(e);
     }
   }
+
   /**
    * Stop the current video recording.
    *
@@ -240,8 +224,6 @@ export class Camera extends React.PureComponent {
    * }, 5000)
    * ```
    */
-
-
   async stopRecording() {
     try {
       return await CameraModule.stopRecording(this.handle);
@@ -249,6 +231,7 @@ export class Camera extends React.PureComponent {
       throw tryParseNativeCameraError(e);
     }
   }
+
   /**
    * Focus the camera to a specific point in the coordinate system.
    * @param {Point} point The point to focus to. This should be relative to the Camera view's coordinate system,
@@ -267,15 +250,14 @@ export class Camera extends React.PureComponent {
    * })
    * ```
    */
-
-
   async focus(point) {
     try {
       return await CameraModule.focus(this.handle, point);
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
-  } //#endregion
+  }
+  //#endregion
 
   /**
    * Get a list of video codecs the current camera supports for a given file type.  Returned values are ordered by efficiency (descending).
@@ -286,8 +268,6 @@ export class Camera extends React.PureComponent {
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting available video codecs. Use the {@linkcode ParameterError.code | code} property to get the actual error
    * @platform iOS
    */
-
-
   async getAvailableVideoCodecs(fileType) {
     if (Platform.OS !== 'ios') return []; // no video codecs supported on other platforms.
 
@@ -296,8 +276,9 @@ export class Camera extends React.PureComponent {
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
-  } //#region Static Functions (NativeModule)
+  }
 
+  //#region Static Functions (NativeModule)
   /**
    * Get a list of all available camera devices on the current phone.
    *
@@ -313,8 +294,6 @@ export class Camera extends React.PureComponent {
    * }
    * ```
    */
-
-
   static async getAvailableCameraDevices() {
     try {
       return await CameraModule.getAvailableCameraDevices();
@@ -330,8 +309,6 @@ export class Camera extends React.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
-
-
   static async getCameraPermissionStatus() {
     try {
       return await CameraModule.getCameraPermissionStatus();
@@ -347,8 +324,6 @@ export class Camera extends React.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
-
-
   static async getMicrophonePermissionStatus() {
     try {
       return await CameraModule.getMicrophonePermissionStatus();
@@ -364,8 +339,6 @@ export class Camera extends React.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
-
-
   static async requestCameraPermission() {
     try {
       return await CameraModule.requestCameraPermission();
@@ -381,86 +354,74 @@ export class Camera extends React.PureComponent {
    *
    * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error
    */
-
-
   static async requestMicrophonePermission() {
     try {
       return await CameraModule.requestMicrophonePermission();
     } catch (e) {
       throw tryParseNativeCameraError(e);
     }
-  } //#endregion
-  //#region Events (Wrapped to maintain reference equality)
-
+  }
+  //#endregion
 
+  //#region Events (Wrapped to maintain reference equality)
   onError(event) {
     if (this.props.onError != null) {
       const error = event.nativeEvent;
       const cause = isErrorWithCause(error.cause) ? error.cause : undefined;
-      this.props.onError( // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
+      this.props.onError(
+      // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work
       new CameraRuntimeError(error.code, error.message, cause));
     }
   }
-
   onInitialized() {
     var _this$props$onInitial, _this$props;
-
     (_this$props$onInitial = (_this$props = this.props).onInitialized) === null || _this$props$onInitial === void 0 ? void 0 : _this$props$onInitial.call(_this$props);
   }
-
   onFrameProcessorPerformanceSuggestionAvailable(event) {
     if (this.props.onFrameProcessorPerformanceSuggestionAvailable != null) this.props.onFrameProcessorPerformanceSuggestionAvailable(event.nativeEvent);
-  } //#endregion
-  //#region Lifecycle
+  }
+  //#endregion
 
+  //#region Lifecycle
   /** @internal */
-
-
   assertFrameProcessorsEnabled() {
     // @ts-expect-error JSI functions aren't typed
     if (global.setFrameProcessor == null || global.unsetFrameProcessor == null) {
-      throw new CameraRuntimeError('frame-processor/unavailable', 'Frame Processors are not enabled. See https://mrousavy.github.io/react-native-vision-camera/docs/guides/troubleshooting');
+      throw new CameraRuntimeError('frame-processor/unavailable', 'Frame Processors are not enabled. See https://react-native-vision-camera.com/docs/guides/troubleshooting');
     }
   }
-
   setFrameProcessor(frameProcessor) {
-    this.assertFrameProcessorsEnabled(); // @ts-expect-error JSI functions aren't typed
-
-    global.setFrameProcessor(this.handle, frameProcessor);
+    this.assertFrameProcessorsEnabled();
+    // @ts-expect-error JSI functions aren't typed
+    global.setFrameProcessor(this.handle, FrameProcessorContext.createWorklet(frameProcessor), FrameProcessorContext.workletRuntime);
   }
-
   unsetFrameProcessor() {
-    this.assertFrameProcessorsEnabled(); // @ts-expect-error JSI functions aren't typed
-
+    this.assertFrameProcessorsEnabled();
+    // @ts-expect-error JSI functions aren't typed
     global.unsetFrameProcessor(this.handle);
   }
-
   onViewReady() {
     this.isNativeViewMounted = true;
-
     if (this.props.frameProcessor != null) {
       // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.
       this.setFrameProcessor(this.props.frameProcessor);
       this.lastFrameProcessor = this.props.frameProcessor;
     }
   }
-  /** @internal */
-
 
+  /** @internal */
   componentDidUpdate() {
     if (!this.isNativeViewMounted) return;
     const frameProcessor = this.props.frameProcessor;
-
     if (frameProcessor !== this.lastFrameProcessor) {
       // frameProcessor argument identity changed. Update native to reflect the change.
       if (frameProcessor != null) this.setFrameProcessor(frameProcessor);else this.unsetFrameProcessor();
       this.lastFrameProcessor = frameProcessor;
     }
-  } //#endregion
+  }
+  //#endregion
 
   /** @internal */
-
-
   render() {
     // We remove the big `device` object from the props because we only need to pass `cameraId` to native.
     const {
@@ -480,12 +441,11 @@ export class Camera extends React.PureComponent {
       enableFrameProcessor: frameProcessor != null
     }));
   }
+}
+//#endregion
 
-} //#endregion
 // requireNativeComponent automatically resolves 'CameraView' to 'CameraViewManager'
-
-_defineProperty(Camera, "displayName", 'Camera');
-
-const NativeCameraView = requireNativeComponent('CameraView', // @ts-expect-error because the type declarations are kinda wrong, no?
+const NativeCameraView = requireNativeComponent('CameraView',
+// @ts-expect-error because the type declarations are kinda wrong, no?
 Camera);
 //# sourceMappingURL=Camera.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/Camera.js.map b/node_modules/react-native-vision-camera/lib/module/Camera.js.map
index 1fc80f9..4daae85 100644
--- a/node_modules/react-native-vision-camera/lib/module/Camera.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/Camera.js.map
@@ -1 +1 @@
-{"version":3,"sources":["Camera.tsx"],"names":["React","requireNativeComponent","NativeModules","findNodeHandle","Platform","CameraCaptureError","CameraRuntimeError","tryParseNativeCameraError","isErrorWithCause","CameraModule","CameraView","console","error","Camera","PureComponent","constructor","props","displayName","onViewReady","bind","onInitialized","onError","onFrameProcessorPerformanceSuggestionAvailable","ref","createRef","lastFrameProcessor","undefined","handle","nodeHandle","current","takePhoto","options","e","takeSnapshot","OS","startRecording","onRecordingError","onRecordingFinished","passThroughOptions","onRecordCallback","video","pauseRecording","resumeRecording","stopRecording","focus","point","getAvailableVideoCodecs","fileType","getAvailableCameraDevices","getCameraPermissionStatus","getMicrophonePermissionStatus","requestCameraPermission","requestMicrophonePermission","event","nativeEvent","cause","code","message","assertFrameProcessorsEnabled","global","setFrameProcessor","unsetFrameProcessor","frameProcessor","isNativeViewMounted","componentDidUpdate","render","device","frameProcessorFps","id","NativeCameraView"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { requireNativeComponent, NativeModules, NativeSyntheticEvent, findNodeHandle, NativeMethods, Platform } from 'react-native';\nimport type { FrameProcessorPerformanceSuggestion, VideoFileType } from '.';\nimport type { CameraDevice } from './CameraDevice';\nimport type { ErrorWithCause } from './CameraError';\nimport { CameraCaptureError, CameraRuntimeError, tryParseNativeCameraError, isErrorWithCause } from './CameraError';\nimport type { CameraProps } from './CameraProps';\nimport type { Frame } from './Frame';\nimport type { PhotoFile, TakePhotoOptions } from './PhotoFile';\nimport type { Point } from './Point';\nimport type { TakeSnapshotOptions } from './Snapshot';\nimport type { CameraVideoCodec, RecordVideoOptions, VideoFile } from './VideoFile';\n\n//#region Types\nexport type CameraPermissionStatus = 'authorized' | 'not-determined' | 'denied' | 'restricted';\nexport type CameraPermissionRequestResult = 'authorized' | 'denied';\n\ninterface OnErrorEvent {\n  code: string;\n  message: string;\n  cause?: ErrorWithCause;\n}\ntype NativeCameraViewProps = Omit<\n  CameraProps,\n  'device' | 'onInitialized' | 'onError' | 'onFrameProcessorPerformanceSuggestionAvailable' | 'frameProcessor' | 'frameProcessorFps'\n> & {\n  cameraId: string;\n  frameProcessorFps?: number; // native cannot use number | string, so we use '-1' for 'auto'\n  enableFrameProcessor: boolean;\n  onInitialized?: (event: NativeSyntheticEvent<void>) => void;\n  onError?: (event: NativeSyntheticEvent<OnErrorEvent>) => void;\n  onFrameProcessorPerformanceSuggestionAvailable?: (event: NativeSyntheticEvent<FrameProcessorPerformanceSuggestion>) => void;\n  onViewReady: () => void;\n};\ntype RefType = React.Component<NativeCameraViewProps> & Readonly<NativeMethods>;\n//#endregion\n\n// NativeModules automatically resolves 'CameraView' to 'CameraViewModule'\n// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\nconst CameraModule = NativeModules.CameraView;\nif (CameraModule == null) console.error(\"Camera: Native Module 'CameraView' was null! Did you run pod install?\");\n\n//#region Camera Component\n/**\n * ### A powerful `<Camera>` component.\n *\n * Read the [VisionCamera documentation](https://mrousavy.github.io/react-native-vision-camera/) for more information.\n *\n * The `<Camera>` component's most important (and therefore _required_) properties are:\n *\n * * {@linkcode CameraProps.device | device}: Specifies the {@linkcode CameraDevice} to use. Get a {@linkcode CameraDevice} by using the {@linkcode useCameraDevices | useCameraDevices()} hook, or manually by using the {@linkcode Camera.getAvailableCameraDevices Camera.getAvailableCameraDevices()} function.\n * * {@linkcode CameraProps.isActive | isActive}: A boolean value that specifies whether the Camera should actively stream video frames or not. This can be compared to a Video component, where `isActive` specifies whether the video is paused or not. If you fully unmount the `<Camera>` component instead of using `isActive={false}`, the Camera will take a bit longer to start again.\n *\n * @example\n * ```tsx\n * function App() {\n *   const devices = useCameraDevices('wide-angle-camera')\n *   const device = devices.back\n *\n *   if (device == null) return <LoadingView />\n *   return (\n *     <Camera\n *       style={StyleSheet.absoluteFill}\n *       device={device}\n *       isActive={true}\n *     />\n *   )\n * }\n * ```\n *\n * @component\n */\nexport class Camera extends React.PureComponent<CameraProps> {\n  /** @internal */\n  static displayName = 'Camera';\n  /** @internal */\n  displayName = Camera.displayName;\n  private lastFrameProcessor: ((frame: Frame) => void) | undefined;\n  private isNativeViewMounted = false;\n\n  private readonly ref: React.RefObject<RefType>;\n\n  /** @internal */\n  constructor(props: CameraProps) {\n    super(props);\n    this.onViewReady = this.onViewReady.bind(this);\n    this.onInitialized = this.onInitialized.bind(this);\n    this.onError = this.onError.bind(this);\n    this.onFrameProcessorPerformanceSuggestionAvailable = this.onFrameProcessorPerformanceSuggestionAvailable.bind(this);\n    this.ref = React.createRef<RefType>();\n    this.lastFrameProcessor = undefined;\n  }\n\n  private get handle(): number | null {\n    const nodeHandle = findNodeHandle(this.ref.current);\n    if (nodeHandle == null || nodeHandle === -1) {\n      throw new CameraRuntimeError(\n        'system/view-not-found',\n        \"Could not get the Camera's native view tag! Does the Camera View exist in the native view-tree?\",\n      );\n    }\n\n    return nodeHandle;\n  }\n\n  //#region View-specific functions (UIViewManager)\n  /**\n   * Take a single photo and write it's content to a temporary file.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while capturing the photo. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * const photo = await camera.current.takePhoto({\n   *   qualityPrioritization: 'quality',\n   *   flash: 'on',\n   *   enableAutoRedEyeReduction: true\n   * })\n   * ```\n   */\n  public async takePhoto(options?: TakePhotoOptions): Promise<PhotoFile> {\n    try {\n      return await CameraModule.takePhoto(this.handle, options ?? {});\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Take a snapshot of the current preview view.\n   *\n   * This can be used as an alternative to {@linkcode Camera.takePhoto | takePhoto()} if speed is more important than quality\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while taking a snapshot. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @platform Android\n   * @example\n   * ```ts\n   * const photo = await camera.current.takeSnapshot({\n   *   quality: 85,\n   *   skipMetadata: true\n   * })\n   * ```\n   */\n  public async takeSnapshot(options?: TakeSnapshotOptions): Promise<PhotoFile> {\n    if (Platform.OS !== 'android')\n      throw new CameraCaptureError('capture/capture-type-not-supported', `'takeSnapshot()' is not available on ${Platform.OS}!`);\n\n    try {\n      return await CameraModule.takeSnapshot(this.handle, options ?? {});\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Start a new video recording.\n   *\n   * Records in the following formats:\n   * * **iOS**: QuickTime (`.mov`)\n   * * **Android**: MPEG4 (`.mp4`)\n   *\n   * @blocking This function is synchronized/blocking.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while starting the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * camera.current.startRecording({\n   *   onRecordingFinished: (video) => console.log(video),\n   *   onRecordingError: (error) => console.error(error),\n   * })\n   * setTimeout(() => {\n   *   camera.current.stopRecording()\n   * }, 5000)\n   * ```\n   */\n  public startRecording(options: RecordVideoOptions): void {\n    const { onRecordingError, onRecordingFinished, ...passThroughOptions } = options;\n    if (typeof onRecordingError !== 'function' || typeof onRecordingFinished !== 'function')\n      throw new CameraRuntimeError('parameter/invalid-parameter', 'The onRecordingError or onRecordingFinished functions were not set!');\n\n    const onRecordCallback = (video?: VideoFile, error?: CameraCaptureError): void => {\n      if (error != null) return onRecordingError(error);\n      if (video != null) return onRecordingFinished(video);\n    };\n    // TODO: Use TurboModules to either make this a sync invokation, or make it async.\n    try {\n      CameraModule.startRecording(this.handle, passThroughOptions, onRecordCallback);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Pauses the current video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while pausing the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * // Start\n   * await camera.current.startRecording()\n   * await timeout(1000)\n   * // Pause\n   * await camera.current.pauseRecording()\n   * await timeout(500)\n   * // Resume\n   * await camera.current.resumeRecording()\n   * await timeout(2000)\n   * // Stop\n   * const video = await camera.current.stopRecording()\n   * ```\n   */\n  public async pauseRecording(): Promise<void> {\n    try {\n      return await CameraModule.pauseRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Resumes a currently paused video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while resuming the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * // Start\n   * await camera.current.startRecording()\n   * await timeout(1000)\n   * // Pause\n   * await camera.current.pauseRecording()\n   * await timeout(500)\n   * // Resume\n   * await camera.current.resumeRecording()\n   * await timeout(2000)\n   * // Stop\n   * const video = await camera.current.stopRecording()\n   * ```\n   */\n  public async resumeRecording(): Promise<void> {\n    try {\n      return await CameraModule.resumeRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Stop the current video recording.\n   *\n   * @throws {@linkcode CameraCaptureError} When any kind of error occured while stopping the video recording. Use the {@linkcode CameraCaptureError.code | code} property to get the actual error\n   *\n   * @example\n   * ```ts\n   * await camera.current.startRecording()\n   * setTimeout(async () => {\n   *  const video = await camera.current.stopRecording()\n   * }, 5000)\n   * ```\n   */\n  public async stopRecording(): Promise<void> {\n    try {\n      return await CameraModule.stopRecording(this.handle);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  /**\n   * Focus the camera to a specific point in the coordinate system.\n   * @param {Point} point The point to focus to. This should be relative to the Camera view's coordinate system,\n   * and expressed in Pixel on iOS and Points on Android.\n   *  * `(0, 0)` means **top left**.\n   *  * `(CameraView.width, CameraView.height)` means **bottom right**.\n   *\n   * Make sure the value doesn't exceed the CameraView's dimensions.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while focussing. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * await camera.current.focus({\n   *   x: tapEvent.x,\n   *   y: tapEvent.y\n   * })\n   * ```\n   */\n  public async focus(point: Point): Promise<void> {\n    try {\n      return await CameraModule.focus(this.handle, point);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  //#endregion\n\n  /**\n   * Get a list of video codecs the current camera supports for a given file type.  Returned values are ordered by efficiency (descending).\n   * @example\n   * ```ts\n   * const codecs = await camera.current.getAvailableVideoCodecs(\"mp4\")\n   * ```\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting available video codecs. Use the {@linkcode ParameterError.code | code} property to get the actual error\n   * @platform iOS\n   */\n  public async getAvailableVideoCodecs(fileType?: VideoFileType): Promise<CameraVideoCodec[]> {\n    if (Platform.OS !== 'ios') return []; // no video codecs supported on other platforms.\n\n    try {\n      return await CameraModule.getAvailableVideoCodecs(this.handle, fileType);\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n\n  //#region Static Functions (NativeModule)\n  /**\n   * Get a list of all available camera devices on the current phone.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting all available camera devices. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   * @example\n   * ```ts\n   * const devices = await Camera.getAvailableCameraDevices()\n   * const filtered = devices.filter((d) => matchesMyExpectations(d))\n   * const sorted = devices.sort(sortDevicesByAmountOfCameras)\n   * return {\n   *   back: sorted.find((d) => d.position === \"back\"),\n   *   front: sorted.find((d) => d.position === \"front\")\n   * }\n   * ```\n   */\n  public static async getAvailableCameraDevices(): Promise<CameraDevice[]> {\n    try {\n      return await CameraModule.getAvailableCameraDevices();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Gets the current Camera Permission Status. Check this before mounting the Camera to ensure\n   * the user has permitted the app to use the camera.\n   *\n   * To actually prompt the user for camera permission, use {@linkcode Camera.requestCameraPermission | requestCameraPermission()}.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async getCameraPermissionStatus(): Promise<CameraPermissionStatus> {\n    try {\n      return await CameraModule.getCameraPermissionStatus();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Gets the current Microphone-Recording Permission Status. Check this before mounting the Camera to ensure\n   * the user has permitted the app to use the microphone.\n   *\n   * To actually prompt the user for microphone permission, use {@linkcode Camera.requestMicrophonePermission | requestMicrophonePermission()}.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while getting the current permission status. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async getMicrophonePermissionStatus(): Promise<CameraPermissionStatus> {\n    try {\n      return await CameraModule.getMicrophonePermissionStatus();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Shows a \"request permission\" alert to the user, and resolves with the new camera permission status.\n   *\n   * If the user has previously blocked the app from using the camera, the alert will not be shown\n   * and `\"denied\"` will be returned.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async requestCameraPermission(): Promise<CameraPermissionRequestResult> {\n    try {\n      return await CameraModule.requestCameraPermission();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  /**\n   * Shows a \"request permission\" alert to the user, and resolves with the new microphone permission status.\n   *\n   * If the user has previously blocked the app from using the microphone, the alert will not be shown\n   * and `\"denied\"` will be returned.\n   *\n   * @throws {@linkcode CameraRuntimeError} When any kind of error occured while requesting permission. Use the {@linkcode CameraRuntimeError.code | code} property to get the actual error\n   */\n  public static async requestMicrophonePermission(): Promise<CameraPermissionRequestResult> {\n    try {\n      return await CameraModule.requestMicrophonePermission();\n    } catch (e) {\n      throw tryParseNativeCameraError(e);\n    }\n  }\n  //#endregion\n\n  //#region Events (Wrapped to maintain reference equality)\n  private onError(event: NativeSyntheticEvent<OnErrorEvent>): void {\n    if (this.props.onError != null) {\n      const error = event.nativeEvent;\n      const cause = isErrorWithCause(error.cause) ? error.cause : undefined;\n      this.props.onError(\n        // @ts-expect-error We're casting from unknown bridge types to TS unions, I expect it to hopefully work\n        new CameraRuntimeError(error.code, error.message, cause),\n      );\n    }\n  }\n\n  private onInitialized(): void {\n    this.props.onInitialized?.();\n  }\n\n  private onFrameProcessorPerformanceSuggestionAvailable(event: NativeSyntheticEvent<FrameProcessorPerformanceSuggestion>): void {\n    if (this.props.onFrameProcessorPerformanceSuggestionAvailable != null)\n      this.props.onFrameProcessorPerformanceSuggestionAvailable(event.nativeEvent);\n  }\n  //#endregion\n\n  //#region Lifecycle\n  /** @internal */\n  private assertFrameProcessorsEnabled(): void {\n    // @ts-expect-error JSI functions aren't typed\n    if (global.setFrameProcessor == null || global.unsetFrameProcessor == null) {\n      throw new CameraRuntimeError(\n        'frame-processor/unavailable',\n        'Frame Processors are not enabled. See https://mrousavy.github.io/react-native-vision-camera/docs/guides/troubleshooting',\n      );\n    }\n  }\n\n  private setFrameProcessor(frameProcessor: (frame: Frame) => void): void {\n    this.assertFrameProcessorsEnabled();\n    // @ts-expect-error JSI functions aren't typed\n    global.setFrameProcessor(this.handle, frameProcessor);\n  }\n\n  private unsetFrameProcessor(): void {\n    this.assertFrameProcessorsEnabled();\n    // @ts-expect-error JSI functions aren't typed\n    global.unsetFrameProcessor(this.handle);\n  }\n\n  private onViewReady(): void {\n    this.isNativeViewMounted = true;\n    if (this.props.frameProcessor != null) {\n      // user passed a `frameProcessor` but we didn't set it yet because the native view was not mounted yet. set it now.\n      this.setFrameProcessor(this.props.frameProcessor);\n      this.lastFrameProcessor = this.props.frameProcessor;\n    }\n  }\n\n  /** @internal */\n  componentDidUpdate(): void {\n    if (!this.isNativeViewMounted) return;\n    const frameProcessor = this.props.frameProcessor;\n    if (frameProcessor !== this.lastFrameProcessor) {\n      // frameProcessor argument identity changed. Update native to reflect the change.\n      if (frameProcessor != null) this.setFrameProcessor(frameProcessor);\n      else this.unsetFrameProcessor();\n\n      this.lastFrameProcessor = frameProcessor;\n    }\n  }\n  //#endregion\n\n  /** @internal */\n  public render(): React.ReactNode {\n    // We remove the big `device` object from the props because we only need to pass `cameraId` to native.\n    const { device, frameProcessor, frameProcessorFps, ...props } = this.props;\n    return (\n      <NativeCameraView\n        {...props}\n        frameProcessorFps={frameProcessorFps === 'auto' ? -1 : frameProcessorFps}\n        cameraId={device.id}\n        ref={this.ref}\n        onViewReady={this.onViewReady}\n        onInitialized={this.onInitialized}\n        onError={this.onError}\n        onFrameProcessorPerformanceSuggestionAvailable={this.onFrameProcessorPerformanceSuggestionAvailable}\n        enableFrameProcessor={frameProcessor != null}\n      />\n    );\n  }\n}\n//#endregion\n\n// requireNativeComponent automatically resolves 'CameraView' to 'CameraViewManager'\nconst NativeCameraView = requireNativeComponent<NativeCameraViewProps>(\n  'CameraView',\n  // @ts-expect-error because the type declarations are kinda wrong, no?\n  Camera,\n);\n"]}
\ No newline at end of file
+{"version":3,"names":["React","requireNativeComponent","NativeModules","findNodeHandle","Platform","CameraCaptureError","CameraRuntimeError","tryParseNativeCameraError","isErrorWithCause","FrameProcessorContext","CameraModule","CameraView","console","error","Camera","PureComponent","displayName","isNativeViewMounted","constructor","props","onViewReady","bind","onInitialized","onError","onFrameProcessorPerformanceSuggestionAvailable","ref","createRef","lastFrameProcessor","undefined","handle","nodeHandle","current","takePhoto","options","e","takeSnapshot","OS","startRecording","onRecordingError","onRecordingFinished","passThroughOptions","onRecordCallback","video","pauseRecording","resumeRecording","stopRecording","focus","point","getAvailableVideoCodecs","fileType","getAvailableCameraDevices","getCameraPermissionStatus","getMicrophonePermissionStatus","requestCameraPermission","requestMicrophonePermission","event","nativeEvent","cause","code","message","_this$props$onInitial","_this$props","call","assertFrameProcessorsEnabled","global","setFrameProcessor","unsetFrameProcessor","frameProcessor","createWorklet","workletRuntime","componentDidUpdate","render","device","frameProcessorFps","createElement","NativeCameraView","_extends","cameraId","id","enableFrameProcessor"],"sourceRoot":"../../src","sources":["Camera.tsx"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraDevice.js b/node_modules/react-native-vision-camera/lib/module/CameraDevice.js
index a5a7ce3..aa20242 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraDevice.js
+++ b/node_modules/react-native-vision-camera/lib/module/CameraDevice.js
@@ -23,7 +23,6 @@ export const parsePhysicalDeviceTypes = physicalDeviceTypes => {
     // @ts-expect-error for very obvious reasons
     return physicalDeviceTypes[0];
   }
-
   const hasWide = physicalDeviceTypes.includes('wide-angle-camera');
   const hasUltra = physicalDeviceTypes.includes('ultra-wide-angle-camera');
   const hasTele = physicalDeviceTypes.includes('telephoto-camera');
@@ -32,6 +31,7 @@ export const parsePhysicalDeviceTypes = physicalDeviceTypes => {
   if (hasWide && hasTele) return 'dual-camera';
   throw new Error(`Invalid physical device type combination! ${physicalDeviceTypes.join(' + ')}`);
 };
+
 /**
  * Indicates a format's color space.
  *
@@ -54,4 +54,30 @@ export const parsePhysicalDeviceTypes = physicalDeviceTypes => {
  *
  * > See ["Android Color Formats"](https://jbit.net/Android_Colors/) for more information.
  */
+
+/**
+ * Indicates a format's autofocus system.
+ *
+ * * `"none"`: Indicates that autofocus is not available
+ * * `"contrast-detection"`: Indicates that autofocus is achieved by contrast detection. Contrast detection performs a focus scan to find the optimal position
+ * * `"phase-detection"`: Indicates that autofocus is achieved by phase detection. Phase detection has the ability to achieve focus in many cases without a focus scan. Phase detection autofocus is typically less visually intrusive than contrast detection autofocus
+ */
+
+/**
+ * Indicates a format's supported video stabilization mode
+ *
+ * * `"off"`: Indicates that video should not be stabilized
+ * * `"standard"`: Indicates that video should be stabilized using the standard video stabilization algorithm introduced with iOS 5.0. Standard video stabilization has a reduced field of view. Enabling video stabilization may introduce additional latency into the video capture pipeline
+ * * `"cinematic"`: Indicates that video should be stabilized using the cinematic stabilization algorithm for more dramatic results. Cinematic video stabilization has a reduced field of view compared to standard video stabilization. Enabling cinematic video stabilization introduces much more latency into the video capture pipeline than standard video stabilization and consumes significantly more system memory. Use narrow or identical min and max frame durations in conjunction with this mode
+ * * `"cinematic-extended"`: Indicates that the video should be stabilized using the extended cinematic stabilization algorithm. Enabling extended cinematic stabilization introduces longer latency into the video capture pipeline compared to the AVCaptureVideoStabilizationModeCinematic and consumes more memory, but yields improved stability. It is recommended to use identical or similar min and max frame durations in conjunction with this mode (iOS 13.0+)
+ * * `"auto"`: Indicates that the most appropriate video stabilization mode for the device and format should be chosen automatically
+ */
+
+/**
+ * A Camera Device's video format. Do not create instances of this type yourself, only use {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()}.
+ */
+
+/**
+ * Represents a camera device discovered by the {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()} function
+ */
 //# sourceMappingURL=CameraDevice.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraDevice.js.map b/node_modules/react-native-vision-camera/lib/module/CameraDevice.js.map
index 05a5fbb..aa8f937 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraDevice.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/CameraDevice.js.map
@@ -1 +1 @@
-{"version":3,"sources":["CameraDevice.ts"],"names":["parsePhysicalDeviceTypes","physicalDeviceTypes","length","hasWide","includes","hasUltra","hasTele","Error","join"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA,OAAO,MAAMA,wBAAwB,GACnCC,mBADsC,IAEiB;AACvD,MAAIA,mBAAmB,CAACC,MAApB,KAA+B,CAAnC,EAAsC;AACpC;AACA,WAAOD,mBAAmB,CAAC,CAAD,CAA1B;AACD;;AAED,QAAME,OAAO,GAAGF,mBAAmB,CAACG,QAApB,CAA6B,mBAA7B,CAAhB;AACA,QAAMC,QAAQ,GAAGJ,mBAAmB,CAACG,QAApB,CAA6B,yBAA7B,CAAjB;AACA,QAAME,OAAO,GAAGL,mBAAmB,CAACG,QAApB,CAA6B,kBAA7B,CAAhB;AAEA,MAAIE,OAAO,IAAIH,OAAX,IAAsBE,QAA1B,EAAoC,OAAO,eAAP;AACpC,MAAIF,OAAO,IAAIE,QAAf,EAAyB,OAAO,kBAAP;AACzB,MAAIF,OAAO,IAAIG,OAAf,EAAwB,OAAO,aAAP;AAExB,QAAM,IAAIC,KAAJ,CAAW,6CAA4CN,mBAAmB,CAACO,IAApB,CAAyB,KAAzB,CAAgC,EAAvF,CAAN;AACD,CAjBM;AAmBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import type { CameraPosition } from './CameraPosition';\nimport type { PixelFormat } from './PixelFormat';\n\n/**\n * Indentifiers for a physical camera (one that actually exists on the back/front of the device)\n *\n * * `\"ultra-wide-angle-camera\"`: A built-in camera with a shorter focal length than that of a wide-angle camera. (focal length between below 24mm)\n * * `\"wide-angle-camera\"`: A built-in wide-angle camera. (focal length between 24mm and 35mm)\n * * `\"telephoto-camera\"`: A built-in camera device with a longer focal length than a wide-angle camera. (focal length between above 85mm)\n */\nexport type PhysicalCameraDeviceType = 'ultra-wide-angle-camera' | 'wide-angle-camera' | 'telephoto-camera';\n\n/**\n * Indentifiers for a logical camera (Combinations of multiple physical cameras to create a single logical camera).\n *\n * * `\"dual-camera\"`: A combination of wide-angle and telephoto cameras that creates a capture device.\n * * `\"dual-wide-camera\"`: A device that consists of two cameras of fixed focal length, one ultrawide angle and one wide angle.\n * * `\"triple-camera\"`: A device that consists of three cameras of fixed focal length, one ultrawide angle, one wide angle, and one telephoto.\n */\nexport type LogicalCameraDeviceType = 'dual-camera' | 'dual-wide-camera' | 'triple-camera';\n\n/**\n * Parses an array of physical device types into a single {@linkcode PhysicalCameraDeviceType} or {@linkcode LogicalCameraDeviceType}, depending what matches.\n * @method\n */\nexport const parsePhysicalDeviceTypes = (\n  physicalDeviceTypes: PhysicalCameraDeviceType[],\n): PhysicalCameraDeviceType | LogicalCameraDeviceType => {\n  if (physicalDeviceTypes.length === 1) {\n    // @ts-expect-error for very obvious reasons\n    return physicalDeviceTypes[0];\n  }\n\n  const hasWide = physicalDeviceTypes.includes('wide-angle-camera');\n  const hasUltra = physicalDeviceTypes.includes('ultra-wide-angle-camera');\n  const hasTele = physicalDeviceTypes.includes('telephoto-camera');\n\n  if (hasTele && hasWide && hasUltra) return 'triple-camera';\n  if (hasWide && hasUltra) return 'dual-wide-camera';\n  if (hasWide && hasTele) return 'dual-camera';\n\n  throw new Error(`Invalid physical device type combination! ${physicalDeviceTypes.join(' + ')}`);\n};\n\n/**\n * Indicates a format's color space.\n *\n * #### The following colorspaces are available on iOS:\n * * `\"srgb\"`: The sGRB color space.\n * * `\"p3-d65\"`: The P3 D65 wide color space which uses Illuminant D65 as the white point\n * * `\"hlg-bt2020\"`: The BT2020 wide color space which uses Illuminant D65 as the white point and Hybrid Log-Gamma as the transfer function\n *\n * > See [\"AVCaptureColorSpace\"](https://developer.apple.com/documentation/avfoundation/avcapturecolorspace) for more information.\n *\n * #### The following colorspaces are available on Android:\n * * `\"yuv\"`: The Multi-plane Android YCbCr color space. (YUV 420_888, 422_888 or 444_888)\n * * `\"jpeg\"`: The compressed JPEG color space.\n * * `\"jpeg-depth\"`: The compressed JPEG color space including depth data.\n * * `\"raw\"`: The Camera's RAW sensor color space. (Single-channel Bayer-mosaic image, usually 16 bit)\n * * `\"heic\"`: The compressed HEIC color space.\n * * `\"private\"`: The Android private opaque image format. (The choices of the actual format and pixel data layout are entirely up to the device-specific and framework internal implementations, and may vary depending on use cases even for the same device. These buffers are not directly accessible to the application)\n * * `\"depth-16\"`: The Android dense depth image format (16 bit)\n * * `\"unknown\"`: Placeholder for an unknown image/pixel format. [Edit this file](https://github.com/mrousavy/react-native-vision-camera/edit/main/android/src/main/java/com/mrousavy/camera/parsers/ImageFormat+String.kt) to add a name for the unknown format.\n *\n * > See [\"Android Color Formats\"](https://jbit.net/Android_Colors/) for more information.\n */\nexport type ColorSpace =\n  // ios\n  | 'hlg-bt2020'\n  | 'p3-d65'\n  | 'srgb'\n  // android\n  | 'yuv'\n  | 'jpeg'\n  | 'jpeg-depth'\n  | 'raw'\n  | 'heic'\n  | 'private'\n  | 'depth-16'\n  | 'unknown';\n\n/**\n * Indicates a format's autofocus system.\n *\n * * `\"none\"`: Indicates that autofocus is not available\n * * `\"contrast-detection\"`: Indicates that autofocus is achieved by contrast detection. Contrast detection performs a focus scan to find the optimal position\n * * `\"phase-detection\"`: Indicates that autofocus is achieved by phase detection. Phase detection has the ability to achieve focus in many cases without a focus scan. Phase detection autofocus is typically less visually intrusive than contrast detection autofocus\n */\nexport type AutoFocusSystem = 'contrast-detection' | 'phase-detection' | 'none';\n\n/**\n * Indicates a format's supported video stabilization mode\n *\n * * `\"off\"`: Indicates that video should not be stabilized\n * * `\"standard\"`: Indicates that video should be stabilized using the standard video stabilization algorithm introduced with iOS 5.0. Standard video stabilization has a reduced field of view. Enabling video stabilization may introduce additional latency into the video capture pipeline\n * * `\"cinematic\"`: Indicates that video should be stabilized using the cinematic stabilization algorithm for more dramatic results. Cinematic video stabilization has a reduced field of view compared to standard video stabilization. Enabling cinematic video stabilization introduces much more latency into the video capture pipeline than standard video stabilization and consumes significantly more system memory. Use narrow or identical min and max frame durations in conjunction with this mode\n * * `\"cinematic-extended\"`: Indicates that the video should be stabilized using the extended cinematic stabilization algorithm. Enabling extended cinematic stabilization introduces longer latency into the video capture pipeline compared to the AVCaptureVideoStabilizationModeCinematic and consumes more memory, but yields improved stability. It is recommended to use identical or similar min and max frame durations in conjunction with this mode (iOS 13.0+)\n * * `\"auto\"`: Indicates that the most appropriate video stabilization mode for the device and format should be chosen automatically\n */\nexport type VideoStabilizationMode = 'off' | 'standard' | 'cinematic' | 'cinematic-extended' | 'auto';\n\nexport interface FrameRateRange {\n  minFrameRate: number;\n  maxFrameRate: number;\n}\n\n/**\n * A Camera Device's video format. Do not create instances of this type yourself, only use {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()}.\n */\nexport interface CameraDeviceFormat {\n  /**\n   * The height of the highest resolution a still image (photo) can be produced in\n   */\n  photoHeight: number;\n  /**\n   * The width of the highest resolution a still image (photo) can be produced in\n   */\n  photoWidth: number;\n  /**\n   * The video resolutions's height\n   */\n  videoHeight: number;\n  /**\n   * The video resolution's width\n   */\n  videoWidth: number;\n  /**\n   * A boolean value specifying whether this format supports the highest possible photo quality that can be delivered on the current platform.\n   *\n   * @platform iOS 13.0+\n   */\n  isHighestPhotoQualitySupported?: boolean;\n  /**\n   * Maximum supported ISO value\n   */\n  maxISO: number;\n  /**\n   * Minimum supported ISO value\n   */\n  minISO: number;\n  /**\n   * The video field of view in degrees\n   */\n  fieldOfView: number;\n  /**\n   * The maximum zoom factor (e.g. `128`)\n   */\n  maxZoom: number;\n  /**\n   * The available color spaces.\n   *\n   * Note: On Android, this will always be only `[\"yuv\"]`\n   */\n  colorSpaces: ColorSpace[];\n  /**\n   * Specifies whether this format supports HDR mode for video capture\n   */\n  supportsVideoHDR: boolean;\n  /**\n   * Specifies whether this format supports HDR mode for photo capture\n   */\n  supportsPhotoHDR: boolean;\n  /**\n   * All available frame rate ranges. You can query this to find the highest frame rate available\n   */\n  frameRateRanges: FrameRateRange[];\n  /**\n   * Specifies this format's auto focus system.\n   */\n  autoFocusSystem: AutoFocusSystem;\n  /**\n   * All supported video stabilization modes\n   */\n  videoStabilizationModes: VideoStabilizationMode[];\n  /**\n   * Specifies this format's pixel format. The pixel format specifies how the individual pixels are interpreted as a visual image.\n   *\n   * The most common format is `420v`. Some formats (like `x420`) are not compatible with some frame processor plugins (e.g. MLKit)\n   */\n  pixelFormat: PixelFormat;\n}\n\n/**\n * Represents a camera device discovered by the {@linkcode Camera.getAvailableCameraDevices | Camera.getAvailableCameraDevices()} function\n */\nexport interface CameraDevice {\n  /**\n   * The native ID of the camera device instance.\n   */\n  id: string;\n  /**\n   * The physical devices this `CameraDevice` contains.\n   *\n   * * If this camera device is a **logical camera** (combination of multiple physical cameras), there are multiple cameras in this array.\n   * * If this camera device is a **physical camera**, there is only a single element in this array.\n   *\n   * You can check if the camera is a logical multi-camera by using the `isMultiCam` property.\n   */\n  devices: PhysicalCameraDeviceType[];\n  /**\n   * Specifies the physical position of this camera. (back or front)\n   */\n  position: CameraPosition;\n  /**\n   * A friendly localized name describing the camera.\n   */\n  name: string;\n  /**\n   * Specifies whether this camera supports enabling flash for photo capture.\n   */\n  hasFlash: boolean;\n  /**\n   * Specifies whether this camera supports continuously enabling the flash to act like a torch (flash with video capture)\n   */\n  hasTorch: boolean;\n  /**\n   * A property indicating whether the device is a virtual multi-camera consisting of multiple combined physical cameras.\n   *\n   * Examples:\n   * * The Dual Camera, which supports seamlessly switching between a wide and telephoto camera while zooming and generating depth data from the disparities between the different points of view of the physical cameras.\n   * * The TrueDepth Camera, which generates depth data from disparities between a YUV camera and an Infrared camera pointed in the same direction.\n   */\n  isMultiCam: boolean;\n  /**\n   * Minimum available zoom factor (e.g. `1`)\n   */\n  minZoom: number;\n  /**\n   * Maximum available zoom factor (e.g. `128`)\n   */\n  maxZoom: number;\n  /**\n   * The zoom factor where the camera is \"neutral\".\n   *\n   * * For single-physical cameras this property is always `1.0`.\n   * * For multi cameras this property is a value between `minZoom` and `maxZoom`, where the camera is in _wide-angle_ mode and hasn't switched to the _ultra-wide-angle_ (\"fish-eye\") or telephoto camera yet.\n   *\n   * Use this value as an initial value for the zoom property if you implement custom zoom. (e.g. reanimated shared value should be initially set to this value)\n   * @example\n   * const device = ...\n   *\n   * const zoom = useSharedValue(device.neutralZoom) // <-- initial value so it doesn't start at ultra-wide\n   * const cameraProps = useAnimatedProps(() => ({\n   *   zoom: zoom.value\n   * }))\n   */\n  neutralZoom: number;\n  /**\n   * All available formats for this camera device. Use this to find the best format for your use case and set it to the Camera's {@linkcode CameraProps.format | Camera's .format} property.\n   *\n   * See [the Camera Formats documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/formats) for more information about Camera Formats.\n   */\n  formats: CameraDeviceFormat[];\n  /**\n   * Whether this camera device supports using Video Recordings (`video={true}`) and Frame Processors (`frameProcessor={...}`) at the same time. See [\"The `supportsParallelVideoProcessing` prop\"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) for more information.\n   *\n   * If this property is `false`, you can only enable `video` or add a `frameProcessor`, but not both.\n   *\n   * * On iOS this value is always `true`.\n   * * On newer Android devices this value is always `true`.\n   * * On older Android devices this value is `false` if the Camera's hardware level is `LEGACY` or `LIMITED`, `true` otherwise. (See [`INFO_SUPPORTED_HARDWARE_LEVEL`](https://developer.android.com/reference/android/hardware/camera2/CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL) or [the tables at \"Regular capture\"](https://developer.android.com/reference/android/hardware/camera2/CameraDevice#regular-capture))\n   */\n  supportsParallelVideoProcessing: boolean;\n  /**\n   * Whether this camera device supports low light boost.\n   */\n  supportsLowLightBoost: boolean;\n  /**\n   * Whether this camera supports taking photos with depth data.\n   *\n   * **! Work in Progress !**\n   */\n  supportsDepthCapture: boolean;\n  /**\n   * Whether this camera supports taking photos in RAW format\n   *\n   * **! Work in Progress !**\n   */\n  supportsRawCapture: boolean;\n  /**\n   * Specifies whether this device supports focusing ({@linkcode Camera.focus | Camera.focus(...)})\n   */\n  supportsFocus: boolean;\n}\n"]}
\ No newline at end of file
+{"version":3,"names":["parsePhysicalDeviceTypes","physicalDeviceTypes","length","hasWide","includes","hasUltra","hasTele","Error","join"],"sourceRoot":"../../src","sources":["CameraDevice.ts"],"mappings":"AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA,OAAO,MAAMA,wBAAwB,GACnCC,mBAA+C,IACQ;EACvD,IAAIA,mBAAmB,CAACC,MAAM,KAAK,CAAC,EAAE;IACpC;IACA,OAAOD,mBAAmB,CAAC,CAAC,CAAC;EAC/B;EAEA,MAAME,OAAO,GAAGF,mBAAmB,CAACG,QAAQ,CAAC,mBAAmB,CAAC;EACjE,MAAMC,QAAQ,GAAGJ,mBAAmB,CAACG,QAAQ,CAAC,yBAAyB,CAAC;EACxE,MAAME,OAAO,GAAGL,mBAAmB,CAACG,QAAQ,CAAC,kBAAkB,CAAC;EAEhE,IAAIE,OAAO,IAAIH,OAAO,IAAIE,QAAQ,EAAE,OAAO,eAAe;EAC1D,IAAIF,OAAO,IAAIE,QAAQ,EAAE,OAAO,kBAAkB;EAClD,IAAIF,OAAO,IAAIG,OAAO,EAAE,OAAO,aAAa;EAE5C,MAAM,IAAIC,KAAK,CAAE,6CAA4CN,mBAAmB,CAACO,IAAI,CAAC,KAAK,CAAE,EAAC,CAAC;AACjG,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;;AA0EA;AACA;AACA"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraError.js b/node_modules/react-native-vision-camera/lib/module/CameraError.js
index f86fd42..5629f57 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraError.js
+++ b/node_modules/react-native-vision-camera/lib/module/CameraError.js
@@ -1,5 +1,3 @@
-function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
-
 /**
  * Represents a JSON-style error cause. This contains native `NSError`/`Throwable` information, and can have recursive {@linkcode ErrorWithCause.cause | .cause} properties until the ultimate cause has been found.
  */
@@ -11,86 +9,78 @@ class CameraError extends Error {
   get code() {
     return this._code;
   }
-
   get message() {
     return this._message;
   }
-
   get cause() {
     const c = this._cause;
     if (c == null) return undefined;
     return new Error(`[${c.code}]: ${c.message}`);
   }
+
   /**
    * @internal
    */
-
-
   constructor(code, message, cause) {
     super(`[${code}]: ${message}${cause != null ? ` (Cause: ${cause.message})` : ''}`);
-
-    _defineProperty(this, "_code", void 0);
-
-    _defineProperty(this, "_message", void 0);
-
-    _defineProperty(this, "_cause", void 0);
-
     super.name = code;
     super.message = message;
     this._code = code;
     this._message = message;
     this._cause = cause;
   }
-
   toString() {
     return `[${this.code}]: ${this.message}`;
   }
-
 }
+
 /**
  * Represents any kind of error that occured while trying to capture a video or photo.
  *
- * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
  */
-
-
 export class CameraCaptureError extends CameraError {}
+
 /**
  * Represents any kind of error that occured in the Camera View Module.
  *
- * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
  */
-
 export class CameraRuntimeError extends CameraError {}
+
 /**
  * Checks if the given `error` is of type {@linkcode ErrorWithCause}
  * @param {unknown} error Any unknown object to validate
  * @returns `true` if the given `error` is of type {@linkcode ErrorWithCause}
  */
-
-export const isErrorWithCause = error => typeof error === 'object' && error != null && // @ts-expect-error error is still unknown
-typeof error.message === 'string' && ( // @ts-expect-error error is still unknown
-typeof error.stacktrace === 'string' || error.stacktrace == null) && ( // @ts-expect-error error is still unknown
+export const isErrorWithCause = error => typeof error === 'object' && error != null &&
+// @ts-expect-error error is still unknown
+typeof error.message === 'string' && (
+// @ts-expect-error error is still unknown
+typeof error.stacktrace === 'string' || error.stacktrace == null) && (
+// @ts-expect-error error is still unknown
 isErrorWithCause(error.cause) || error.cause == null);
-
-const isCameraErrorJson = error => typeof error === 'object' && error != null && // @ts-expect-error error is still unknown
-typeof error.code === 'string' && // @ts-expect-error error is still unknown
-typeof error.message === 'string' && ( // @ts-expect-error error is still unknown
+const isCameraErrorJson = error => typeof error === 'object' && error != null &&
+// @ts-expect-error error is still unknown
+typeof error.code === 'string' &&
+// @ts-expect-error error is still unknown
+typeof error.message === 'string' && (
+// @ts-expect-error error is still unknown
 typeof error.cause === 'object' || error.cause == null);
+
 /**
  * Tries to parse an error coming from native to a typed JS camera error.
  * @param {CameraError} nativeError The native error instance. This is a JSON in the legacy native module architecture.
  * @returns A {@linkcode CameraRuntimeError} or {@linkcode CameraCaptureError}, or the `nativeError` itself if it's not parsable
  * @method
  */
-
-
 export const tryParseNativeCameraError = nativeError => {
   if (isCameraErrorJson(nativeError)) {
     if (nativeError.code.startsWith('capture')) {
       return new CameraCaptureError(nativeError.code, nativeError.message, nativeError.cause);
     } else {
-      return new CameraRuntimeError( // @ts-expect-error the code is string, we narrow it down to TS union.
+      return new CameraRuntimeError(
+      // @ts-expect-error the code is string, we narrow it down to TS union.
       nativeError.code, nativeError.message, nativeError.cause);
     }
   } else {
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraError.js.map b/node_modules/react-native-vision-camera/lib/module/CameraError.js.map
index 964fac5..28d0b47 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraError.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/CameraError.js.map
@@ -1 +1 @@
-{"version":3,"sources":["CameraError.ts"],"names":["CameraError","Error","code","_code","message","_message","cause","c","_cause","undefined","constructor","name","toString","CameraCaptureError","CameraRuntimeError","isErrorWithCause","error","stacktrace","isCameraErrorJson","tryParseNativeCameraError","nativeError","startsWith"],"mappings":";;AAuDA;AACA;AACA;;AAyDA;AACA;AACA;AACA,MAAMA,WAAN,SAAyDC,KAAzD,CAA+D;AAK9C,MAAJC,IAAI,GAAU;AACvB,WAAO,KAAKC,KAAZ;AACD;;AACiB,MAAPC,OAAO,GAAW;AAC3B,WAAO,KAAKC,QAAZ;AACD;;AACe,MAALC,KAAK,GAAsB;AACpC,UAAMC,CAAC,GAAG,KAAKC,MAAf;AACA,QAAID,CAAC,IAAI,IAAT,EAAe,OAAOE,SAAP;AACf,WAAO,IAAIR,KAAJ,CAAW,IAAGM,CAAC,CAACL,IAAK,MAAKK,CAAC,CAACH,OAAQ,EAApC,CAAP;AACD;AAED;AACF;AACA;;;AACEM,EAAAA,WAAW,CAACR,IAAD,EAAcE,OAAd,EAA+BE,KAA/B,EAAuD;AAChE,UAAO,IAAGJ,IAAK,MAAKE,OAAQ,GAAEE,KAAK,IAAI,IAAT,GAAiB,YAAWA,KAAK,CAACF,OAAQ,GAA1C,GAA+C,EAAG,EAAhF;;AADgE;;AAAA;;AAAA;;AAEhE,UAAMO,IAAN,GAAaT,IAAb;AACA,UAAME,OAAN,GAAgBA,OAAhB;AACA,SAAKD,KAAL,GAAaD,IAAb;AACA,SAAKG,QAAL,GAAgBD,OAAhB;AACA,SAAKI,MAAL,GAAcF,KAAd;AACD;;AAEMM,EAAAA,QAAQ,GAAW;AACxB,WAAQ,IAAG,KAAKV,IAAK,MAAK,KAAKE,OAAQ,EAAvC;AACD;;AA/B4D;AAkC/D;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMS,kBAAN,SAAiCb,WAAjC,CAA2D;AAElE;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMc,kBAAN,SAAiCd,WAAjC,CAEL;AAEF;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMe,gBAAgB,GAAIC,KAAD,IAC9B,OAAOA,KAAP,KAAiB,QAAjB,IACAA,KAAK,IAAI,IADT,IAEA;AACA,OAAOA,KAAK,CAACZ,OAAb,KAAyB,QAHzB,MAIA;AACC,OAAOY,KAAK,CAACC,UAAb,KAA4B,QAA5B,IAAwCD,KAAK,CAACC,UAAN,IAAoB,IAL7D,OAMA;AACCF,gBAAgB,CAACC,KAAK,CAACV,KAAP,CAAhB,IAAiCU,KAAK,CAACV,KAAN,IAAe,IAPjD,CADK;;AAUP,MAAMY,iBAAiB,GAAIF,KAAD,IACxB,OAAOA,KAAP,KAAiB,QAAjB,IACAA,KAAK,IAAI,IADT,IAEA;AACA,OAAOA,KAAK,CAACd,IAAb,KAAsB,QAHtB,IAIA;AACA,OAAOc,KAAK,CAACZ,OAAb,KAAyB,QALzB,MAMA;AACC,OAAOY,KAAK,CAACV,KAAb,KAAuB,QAAvB,IAAmCU,KAAK,CAACV,KAAN,IAAe,IAPnD,CADF;AAUA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMa,yBAAyB,GAAOC,WAAJ,IAAsE;AAC7G,MAAIF,iBAAiB,CAACE,WAAD,CAArB,EAAoC;AAClC,QAAIA,WAAW,CAAClB,IAAZ,CAAiBmB,UAAjB,CAA4B,SAA5B,CAAJ,EAA4C;AAC1C,aAAO,IAAIR,kBAAJ,CAAuBO,WAAW,CAAClB,IAAnC,EAAyDkB,WAAW,CAAChB,OAArE,EAA8EgB,WAAW,CAACd,KAA1F,CAAP;AACD,KAFD,MAEO;AACL,aAAO,IAAIQ,kBAAJ,EACL;AACAM,MAAAA,WAAW,CAAClB,IAFP,EAGLkB,WAAW,CAAChB,OAHP,EAILgB,WAAW,CAACd,KAJP,CAAP;AAMD;AACF,GAXD,MAWO;AACL,WAAOc,WAAP;AACD;AACF,CAfM","sourcesContent":["export type PermissionError = 'permission/microphone-permission-denied' | 'permission/camera-permission-denied';\nexport type ParameterError =\n  | 'parameter/invalid-parameter'\n  | 'parameter/unsupported-os'\n  | 'parameter/unsupported-output'\n  | 'parameter/unsupported-input'\n  | 'parameter/invalid-combination';\nexport type DeviceError =\n  | 'device/configuration-error'\n  | 'device/no-device'\n  | 'device/invalid-device'\n  | 'device/parallel-video-processing-not-supported'\n  | 'device/torch-unavailable'\n  | 'device/microphone-unavailable'\n  | 'device/low-light-boost-not-supported'\n  | 'device/focus-not-supported'\n  | 'device/camera-not-available-on-simulator';\nexport type FrameProcessorError = 'frame-processor/unavailable';\nexport type FormatError =\n  | 'format/invalid-fps'\n  | 'format/invalid-hdr'\n  | 'format/invalid-low-light-boost'\n  | 'format/invalid-format'\n  | 'format/invalid-color-space'\n  | 'format/invalid-preset';\nexport type SessionError =\n  | 'session/camera-not-ready'\n  | 'session/audio-session-setup-failed'\n  | 'session/audio-in-use-by-other-app'\n  | 'session/audio-session-failed-to-activate';\nexport type CaptureError =\n  | 'capture/invalid-photo-format'\n  | 'capture/encoder-error'\n  | 'capture/muxer-error'\n  | 'capture/recording-in-progress'\n  | 'capture/no-recording-in-progress'\n  | 'capture/file-io-error'\n  | 'capture/create-temp-file-error'\n  | 'capture/invalid-video-options'\n  | 'capture/create-recorder-error'\n  | 'capture/recorder-error'\n  | 'capture/no-valid-data'\n  | 'capture/inactive-source'\n  | 'capture/insufficient-storage'\n  | 'capture/file-size-limit-reached'\n  | 'capture/invalid-photo-codec'\n  | 'capture/not-bound-error'\n  | 'capture/capture-type-not-supported'\n  | 'capture/video-not-enabled'\n  | 'capture/photo-not-enabled'\n  | 'capture/aborted'\n  | 'capture/unknown';\nexport type SystemError = 'system/no-camera-manager' | 'system/view-not-found';\nexport type UnknownError = 'unknown/unknown';\n\n/**\n * Represents a JSON-style error cause. This contains native `NSError`/`Throwable` information, and can have recursive {@linkcode ErrorWithCause.cause | .cause} properties until the ultimate cause has been found.\n */\nexport interface ErrorWithCause {\n  /**\n   * The native error's code.\n   *\n   * * iOS: `NSError.code`\n   * * Android: N/A\n   */\n  code?: number;\n  /**\n   * The native error's domain.\n   *\n   * * iOS: `NSError.domain`\n   * * Android: N/A\n   */\n  domain?: string;\n  /**\n   * The native error description\n   *\n   * * iOS: `NSError.message`\n   * * Android: `Throwable.message`\n   */\n  message: string;\n  /**\n   * Optional additional details\n   *\n   * * iOS: `NSError.userInfo`\n   * * Android: N/A\n   */\n  details?: Record<string, unknown>;\n  /**\n   * Optional Java stacktrace\n   *\n   * * iOS: N/A\n   * * Android: `Throwable.stacktrace.toString()`\n   */\n  stacktrace?: string;\n  /**\n   * Optional additional cause for nested errors\n   *\n   * * iOS: N/A\n   * * Android: `Throwable.cause`\n   */\n  cause?: ErrorWithCause;\n}\n\ntype CameraErrorCode =\n  | PermissionError\n  | ParameterError\n  | DeviceError\n  | FrameProcessorError\n  | FormatError\n  | SessionError\n  | CaptureError\n  | SystemError\n  | UnknownError;\n\n/**\n * Represents any kind of error that occured in the {@linkcode Camera} View Module.\n */\nclass CameraError<TCode extends CameraErrorCode> extends Error {\n  private readonly _code: TCode;\n  private readonly _message: string;\n  private readonly _cause?: ErrorWithCause;\n\n  public get code(): TCode {\n    return this._code;\n  }\n  public get message(): string {\n    return this._message;\n  }\n  public get cause(): Error | undefined {\n    const c = this._cause;\n    if (c == null) return undefined;\n    return new Error(`[${c.code}]: ${c.message}`);\n  }\n\n  /**\n   * @internal\n   */\n  constructor(code: TCode, message: string, cause?: ErrorWithCause) {\n    super(`[${code}]: ${message}${cause != null ? ` (Cause: ${cause.message})` : ''}`);\n    super.name = code;\n    super.message = message;\n    this._code = code;\n    this._message = message;\n    this._cause = cause;\n  }\n\n  public toString(): string {\n    return `[${this.code}]: ${this.message}`;\n  }\n}\n\n/**\n * Represents any kind of error that occured while trying to capture a video or photo.\n *\n * See the [\"Camera Errors\" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.\n */\nexport class CameraCaptureError extends CameraError<CaptureError> {}\n\n/**\n * Represents any kind of error that occured in the Camera View Module.\n *\n * See the [\"Camera Errors\" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.\n */\nexport class CameraRuntimeError extends CameraError<\n  PermissionError | ParameterError | DeviceError | FormatError | FrameProcessorError | SessionError | SystemError | UnknownError\n> {}\n\n/**\n * Checks if the given `error` is of type {@linkcode ErrorWithCause}\n * @param {unknown} error Any unknown object to validate\n * @returns `true` if the given `error` is of type {@linkcode ErrorWithCause}\n */\nexport const isErrorWithCause = (error: unknown): error is ErrorWithCause =>\n  typeof error === 'object' &&\n  error != null &&\n  // @ts-expect-error error is still unknown\n  typeof error.message === 'string' &&\n  // @ts-expect-error error is still unknown\n  (typeof error.stacktrace === 'string' || error.stacktrace == null) &&\n  // @ts-expect-error error is still unknown\n  (isErrorWithCause(error.cause) || error.cause == null);\n\nconst isCameraErrorJson = (error: unknown): error is { code: string; message: string; cause?: ErrorWithCause } =>\n  typeof error === 'object' &&\n  error != null &&\n  // @ts-expect-error error is still unknown\n  typeof error.code === 'string' &&\n  // @ts-expect-error error is still unknown\n  typeof error.message === 'string' &&\n  // @ts-expect-error error is still unknown\n  (typeof error.cause === 'object' || error.cause == null);\n\n/**\n * Tries to parse an error coming from native to a typed JS camera error.\n * @param {CameraError} nativeError The native error instance. This is a JSON in the legacy native module architecture.\n * @returns A {@linkcode CameraRuntimeError} or {@linkcode CameraCaptureError}, or the `nativeError` itself if it's not parsable\n * @method\n */\nexport const tryParseNativeCameraError = <T>(nativeError: T): (CameraRuntimeError | CameraCaptureError) | T => {\n  if (isCameraErrorJson(nativeError)) {\n    if (nativeError.code.startsWith('capture')) {\n      return new CameraCaptureError(nativeError.code as CaptureError, nativeError.message, nativeError.cause);\n    } else {\n      return new CameraRuntimeError(\n        // @ts-expect-error the code is string, we narrow it down to TS union.\n        nativeError.code,\n        nativeError.message,\n        nativeError.cause,\n      );\n    }\n  } else {\n    return nativeError;\n  }\n};\n"]}
\ No newline at end of file
+{"version":3,"names":["CameraError","Error","code","_code","message","_message","cause","c","_cause","undefined","constructor","name","toString","CameraCaptureError","CameraRuntimeError","isErrorWithCause","error","stacktrace","isCameraErrorJson","tryParseNativeCameraError","nativeError","startsWith"],"sourceRoot":"../../src","sources":["CameraError.ts"],"mappings":"AAuDA;AACA;AACA;;AAyDA;AACA;AACA;AACA,MAAMA,WAAW,SAAwCC,KAAK,CAAC;EAK7D,IAAWC,IAAIA,CAAA,EAAU;IACvB,OAAO,IAAI,CAACC,KAAK;EACnB;EACA,IAAWC,OAAOA,CAAA,EAAW;IAC3B,OAAO,IAAI,CAACC,QAAQ;EACtB;EACA,IAAWC,KAAKA,CAAA,EAAsB;IACpC,MAAMC,CAAC,GAAG,IAAI,CAACC,MAAM;IACrB,IAAID,CAAC,IAAI,IAAI,EAAE,OAAOE,SAAS;IAC/B,OAAO,IAAIR,KAAK,CAAE,IAAGM,CAAC,CAACL,IAAK,MAAKK,CAAC,CAACH,OAAQ,EAAC,CAAC;EAC/C;;EAEA;AACF;AACA;EACEM,WAAWA,CAACR,IAAW,EAAEE,OAAe,EAAEE,KAAsB,EAAE;IAChE,KAAK,CAAE,IAAGJ,IAAK,MAAKE,OAAQ,GAAEE,KAAK,IAAI,IAAI,GAAI,YAAWA,KAAK,CAACF,OAAQ,GAAE,GAAG,EAAG,EAAC,CAAC;IAClF,KAAK,CAACO,IAAI,GAAGT,IAAI;IACjB,KAAK,CAACE,OAAO,GAAGA,OAAO;IACvB,IAAI,CAACD,KAAK,GAAGD,IAAI;IACjB,IAAI,CAACG,QAAQ,GAAGD,OAAO;IACvB,IAAI,CAACI,MAAM,GAAGF,KAAK;EACrB;EAEOM,QAAQA,CAAA,EAAW;IACxB,OAAQ,IAAG,IAAI,CAACV,IAAK,MAAK,IAAI,CAACE,OAAQ,EAAC;EAC1C;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMS,kBAAkB,SAASb,WAAW,CAAe;;AAElE;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMc,kBAAkB,SAASd,WAAW,CAEjD;;AAEF;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMe,gBAAgB,GAAIC,KAAc,IAC7C,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,IAAI,IAAI;AACb;AACA,OAAOA,KAAK,CAACZ,OAAO,KAAK,QAAQ;AACjC;AACC,OAAOY,KAAK,CAACC,UAAU,KAAK,QAAQ,IAAID,KAAK,CAACC,UAAU,IAAI,IAAI,CAAC;AAClE;AACCF,gBAAgB,CAACC,KAAK,CAACV,KAAK,CAAC,IAAIU,KAAK,CAACV,KAAK,IAAI,IAAI,CAAC;AAExD,MAAMY,iBAAiB,GAAIF,KAAc,IACvC,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,IAAI,IAAI;AACb;AACA,OAAOA,KAAK,CAACd,IAAI,KAAK,QAAQ;AAC9B;AACA,OAAOc,KAAK,CAACZ,OAAO,KAAK,QAAQ;AACjC;AACC,OAAOY,KAAK,CAACV,KAAK,KAAK,QAAQ,IAAIU,KAAK,CAACV,KAAK,IAAI,IAAI,CAAC;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMa,yBAAyB,GAAOC,WAAc,IAAoD;EAC7G,IAAIF,iBAAiB,CAACE,WAAW,CAAC,EAAE;IAClC,IAAIA,WAAW,CAAClB,IAAI,CAACmB,UAAU,CAAC,SAAS,CAAC,EAAE;MAC1C,OAAO,IAAIR,kBAAkB,CAACO,WAAW,CAAClB,IAAI,EAAkBkB,WAAW,CAAChB,OAAO,EAAEgB,WAAW,CAACd,KAAK,CAAC;IACzG,CAAC,MAAM;MACL,OAAO,IAAIQ,kBAAkB;MAC3B;MACAM,WAAW,CAAClB,IAAI,EAChBkB,WAAW,CAAChB,OAAO,EACnBgB,WAAW,CAACd,KACd,CAAC;IACH;EACF,CAAC,MAAM;IACL,OAAOc,WAAW;EACpB;AACF,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraPosition.js.map b/node_modules/react-native-vision-camera/lib/module/CameraPosition.js.map
index 9ffd4b2..f4e0458 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraPosition.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/CameraPosition.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["CameraPosition.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraPreset.js.map b/node_modules/react-native-vision-camera/lib/module/CameraPreset.js.map
index 9ffd4b2..7260b12 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraPreset.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/CameraPreset.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["CameraPreset.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/CameraProps.js.map b/node_modules/react-native-vision-camera/lib/module/CameraProps.js.map
index 9ffd4b2..f5d0d4d 100644
--- a/node_modules/react-native-vision-camera/lib/module/CameraProps.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/CameraProps.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["CameraProps.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/Frame.js.map b/node_modules/react-native-vision-camera/lib/module/Frame.js.map
index 9ffd4b2..b6541a5 100644
--- a/node_modules/react-native-vision-camera/lib/module/Frame.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/Frame.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["Frame.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/FrameProcessorContext.js b/node_modules/react-native-vision-camera/lib/module/FrameProcessorContext.js
new file mode 100644
index 0000000..923724c
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/module/FrameProcessorContext.js
@@ -0,0 +1,19 @@
+let workletRuntime = null;
+let createWorklet = () => {
+  throw new Error("Reanimated V3 is not installed, Frame Processors are not available!");
+};
+try {
+  const reanimated = require('react-native-reanimated');
+  if (reanimated.createWorkletRuntime == null) {
+    console.warn("Frame Processors are disabled because you're using an incompatible version of Reanimated.");
+  }
+  workletRuntime = reanimated.createWorkletRuntime('VisionCamera');
+  createWorklet = reanimated.makeShareableCloneRecursive;
+} catch {
+  // Frame Processors are not enabled
+}
+export const FrameProcessorContext = {
+  workletRuntime: workletRuntime,
+  createWorklet: createWorklet
+};
+//# sourceMappingURL=FrameProcessorContext.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/FrameProcessorContext.js.map b/node_modules/react-native-vision-camera/lib/module/FrameProcessorContext.js.map
new file mode 100644
index 0000000..ac6c964
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/module/FrameProcessorContext.js.map
@@ -0,0 +1 @@
+{"version":3,"names":["workletRuntime","createWorklet","Error","reanimated","require","createWorkletRuntime","console","warn","makeShareableCloneRecursive","FrameProcessorContext"],"sourceRoot":"../../src","sources":["FrameProcessorContext.ts"],"mappings":"AAAA,IAAIA,cAAc,GAAG,IAAI;AACzB,IAAIC,aAAa,GAAGA,CAAA,KAAM;EACxB,MAAM,IAAIC,KAAK,CAAC,qEAAqE,CAAC;AACxF,CAAC;AAED,IAAI;EACF,MAAMC,UAAU,GAAGC,OAAO,CAAC,yBAAyB,CAAC;EACrD,IAAID,UAAU,CAACE,oBAAoB,IAAI,IAAI,EAAE;IAC3CC,OAAO,CAACC,IAAI,CAAC,2FAA2F,CAAC;EAC3G;EACAP,cAAc,GAAGG,UAAU,CAACE,oBAAoB,CAAC,cAAc,CAAC;EAChEJ,aAAa,GAAGE,UAAU,CAACK,2BAA2B;AACxD,CAAC,CAAC,MAAM;EACN;AAAA;AAGF,OAAO,MAAMC,qBAAqB,GAAG;EACnCT,cAAc,EAAEA,cAAc;EAC9BC,aAAa,EAAEA;AACjB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/PhotoFile.js.map b/node_modules/react-native-vision-camera/lib/module/PhotoFile.js.map
index 9ffd4b2..220a942 100644
--- a/node_modules/react-native-vision-camera/lib/module/PhotoFile.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/PhotoFile.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["PhotoFile.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/PixelFormat.js.map b/node_modules/react-native-vision-camera/lib/module/PixelFormat.js.map
index 9ffd4b2..b89d3e3 100644
--- a/node_modules/react-native-vision-camera/lib/module/PixelFormat.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/PixelFormat.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["PixelFormat.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/Point.js.map b/node_modules/react-native-vision-camera/lib/module/Point.js.map
index 9ffd4b2..7805603 100644
--- a/node_modules/react-native-vision-camera/lib/module/Point.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/Point.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["Point.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/Snapshot.js.map b/node_modules/react-native-vision-camera/lib/module/Snapshot.js.map
index 9ffd4b2..5eb9af3 100644
--- a/node_modules/react-native-vision-camera/lib/module/Snapshot.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/Snapshot.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["Snapshot.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/TemporaryFile.js.map b/node_modules/react-native-vision-camera/lib/module/TemporaryFile.js.map
index 9ffd4b2..a710f60 100644
--- a/node_modules/react-native-vision-camera/lib/module/TemporaryFile.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/TemporaryFile.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["TemporaryFile.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/VideoFile.js.map b/node_modules/react-native-vision-camera/lib/module/VideoFile.js.map
index 9ffd4b2..72015f6 100644
--- a/node_modules/react-native-vision-camera/lib/module/VideoFile.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/VideoFile.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["VideoFile.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js
index dad91dc..afa0c64 100644
--- a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js
+++ b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js
@@ -1,9 +1,9 @@
 import { withGradleProperties } from '@expo/config-plugins';
+
 /**
  * Set the `disableFrameProcessors` value in the static `gradle.properties` file.
  * This is used to disable frame processors if you don't need it for android.
  */
-
 export const withDisableFrameProcessorsAndroid = c => {
   const disableFrameProcessorsKey = 'disableFrameProcessors';
   return withGradleProperties(c, config => {
diff --git a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js.map b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js.map
index 5c71989..316e100 100644
--- a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsAndroid.js.map
@@ -1 +1 @@
-{"version":3,"sources":["withDisableFrameProcessorsAndroid.ts"],"names":["withGradleProperties","withDisableFrameProcessorsAndroid","c","disableFrameProcessorsKey","config","modResults","filter","item","type","key","push","value"],"mappings":"AAAA,SAAuBA,oBAAvB,QAAmD,sBAAnD;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,iCAA+C,GAAIC,CAAD,IAAO;AACpE,QAAMC,yBAAyB,GAAG,wBAAlC;AACA,SAAOH,oBAAoB,CAACE,CAAD,EAAKE,MAAD,IAAY;AACzCA,IAAAA,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACC,UAAP,CAAkBC,MAAlB,CAA0BC,IAAD,IAAU;AACrD,UAAIA,IAAI,CAACC,IAAL,KAAc,UAAd,IAA4BD,IAAI,CAACE,GAAL,KAAaN,yBAA7C,EAAwE,OAAO,KAAP;AACxE,aAAO,IAAP;AACD,KAHmB,CAApB;AAKAC,IAAAA,MAAM,CAACC,UAAP,CAAkBK,IAAlB,CAAuB;AACrBF,MAAAA,IAAI,EAAE,UADe;AAErBC,MAAAA,GAAG,EAAEN,yBAFgB;AAGrBQ,MAAAA,KAAK,EAAE;AAHc,KAAvB;AAMA,WAAOP,MAAP;AACD,GAb0B,CAA3B;AAcD,CAhBM","sourcesContent":["import { ConfigPlugin, withGradleProperties } from '@expo/config-plugins';\n\n/**\n * Set the `disableFrameProcessors` value in the static `gradle.properties` file.\n * This is used to disable frame processors if you don't need it for android.\n */\nexport const withDisableFrameProcessorsAndroid: ConfigPlugin = (c) => {\n  const disableFrameProcessorsKey = 'disableFrameProcessors';\n  return withGradleProperties(c, (config) => {\n    config.modResults = config.modResults.filter((item) => {\n      if (item.type === 'property' && item.key === disableFrameProcessorsKey) return false;\n      return true;\n    });\n\n    config.modResults.push({\n      type: 'property',\n      key: disableFrameProcessorsKey,\n      value: 'true',\n    });\n\n    return config;\n  });\n};\n"]}
\ No newline at end of file
+{"version":3,"names":["withGradleProperties","withDisableFrameProcessorsAndroid","c","disableFrameProcessorsKey","config","modResults","filter","item","type","key","push","value"],"sourceRoot":"../../../src","sources":["expo-plugin/withDisableFrameProcessorsAndroid.ts"],"mappings":"AAAA,SAAuBA,oBAAoB,QAAQ,sBAAsB;;AAEzE;AACA;AACA;AACA;AACA,OAAO,MAAMC,iCAA+C,GAAIC,CAAC,IAAK;EACpE,MAAMC,yBAAyB,GAAG,wBAAwB;EAC1D,OAAOH,oBAAoB,CAACE,CAAC,EAAGE,MAAM,IAAK;IACzCA,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACC,UAAU,CAACC,MAAM,CAAEC,IAAI,IAAK;MACrD,IAAIA,IAAI,CAACC,IAAI,KAAK,UAAU,IAAID,IAAI,CAACE,GAAG,KAAKN,yBAAyB,EAAE,OAAO,KAAK;MACpF,OAAO,IAAI;IACb,CAAC,CAAC;IAEFC,MAAM,CAACC,UAAU,CAACK,IAAI,CAAC;MACrBF,IAAI,EAAE,UAAU;MAChBC,GAAG,EAAEN,yBAAyB;MAC9BQ,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,OAAOP,MAAM;EACf,CAAC,CAAC;AACJ,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js
index 2fcdd04..6c60b23 100644
--- a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js
+++ b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js
@@ -1,27 +1,23 @@
 /* eslint-disable @typescript-eslint/no-unsafe-assignment */
 import { withXcodeProject } from '@expo/config-plugins';
+
 /**
  * Set the `disableFrameProcessors` inside of the XcodeProject.
  * This is used to disable frame processors if you don't need it on iOS. (will save CPU and Memory)
  */
-
 export const withDisableFrameProcessorsIOS = c => {
   return withXcodeProject(c, config => {
     const xcodeProject = config.modResults;
     const configurations = xcodeProject.pbxXCBuildConfigurationSection();
     const inheritKey = '"$(inherited)"';
     const valueKey = '"VISION_CAMERA_DISABLE_FRAME_PROCESSORS=1"';
-
     for (const key in configurations) {
-      var _buildSettings$GCC_PR;
-
       const buildSettings = configurations[key].buildSettings;
       if (buildSettings == null) continue;
-      const preprocessorDefinitions = (_buildSettings$GCC_PR = buildSettings.GCC_PREPROCESSOR_DEFINITIONS) !== null && _buildSettings$GCC_PR !== void 0 ? _buildSettings$GCC_PR : [inheritKey];
+      const preprocessorDefinitions = buildSettings.GCC_PREPROCESSOR_DEFINITIONS ?? [inheritKey];
       if (!preprocessorDefinitions.includes(valueKey)) preprocessorDefinitions.push(valueKey);
       buildSettings.GCC_PREPROCESSOR_DEFINITIONS = preprocessorDefinitions;
     }
-
     return config;
   });
 };
diff --git a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js.map b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js.map
index 27c18df..6177375 100644
--- a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withDisableFrameProcessorsIOS.js.map
@@ -1 +1 @@
-{"version":3,"sources":["withDisableFrameProcessorsIOS.ts"],"names":["withXcodeProject","withDisableFrameProcessorsIOS","c","config","xcodeProject","modResults","configurations","pbxXCBuildConfigurationSection","inheritKey","valueKey","key","buildSettings","preprocessorDefinitions","GCC_PREPROCESSOR_DEFINITIONS","includes","push"],"mappings":"AAAA;AACA,SAAuBA,gBAAvB,QAA6D,sBAA7D;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,6BAA2C,GAAIC,CAAD,IAAO;AAChE,SAAOF,gBAAgB,CAACE,CAAD,EAAKC,MAAD,IAAY;AACrC,UAAMC,YAA0B,GAAGD,MAAM,CAACE,UAA1C;AAEA,UAAMC,cAAc,GAAGF,YAAY,CAACG,8BAAb,EAAvB;AAEA,UAAMC,UAAU,GAAG,gBAAnB;AACA,UAAMC,QAAQ,GAAG,4CAAjB;;AAEA,SAAK,MAAMC,GAAX,IAAkBJ,cAAlB,EAAkC;AAAA;;AAChC,YAAMK,aAAa,GAAGL,cAAc,CAACI,GAAD,CAAd,CAAoBC,aAA1C;AACA,UAAIA,aAAa,IAAI,IAArB,EAA2B;AAE3B,YAAMC,uBAAuB,4BAAID,aAAa,CAACE,4BAAlB,yEAAkD,CAACL,UAAD,CAA/E;AAEA,UAAI,CAACI,uBAAuB,CAACE,QAAxB,CAAiCL,QAAjC,CAAL,EAAiDG,uBAAuB,CAACG,IAAxB,CAA6BN,QAA7B;AACjDE,MAAAA,aAAa,CAACE,4BAAd,GAA6CD,uBAA7C;AACD;;AACD,WAAOT,MAAP;AACD,GAlBsB,CAAvB;AAmBD,CApBM","sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { ConfigPlugin, withXcodeProject, XcodeProject } from '@expo/config-plugins';\n\n/**\n * Set the `disableFrameProcessors` inside of the XcodeProject.\n * This is used to disable frame processors if you don't need it on iOS. (will save CPU and Memory)\n */\nexport const withDisableFrameProcessorsIOS: ConfigPlugin = (c) => {\n  return withXcodeProject(c, (config) => {\n    const xcodeProject: XcodeProject = config.modResults;\n\n    const configurations = xcodeProject.pbxXCBuildConfigurationSection();\n\n    const inheritKey = '\"$(inherited)\"';\n    const valueKey = '\"VISION_CAMERA_DISABLE_FRAME_PROCESSORS=1\"';\n\n    for (const key in configurations) {\n      const buildSettings = configurations[key].buildSettings;\n      if (buildSettings == null) continue;\n\n      const preprocessorDefinitions = (buildSettings.GCC_PREPROCESSOR_DEFINITIONS ?? [inheritKey]) as string[];\n\n      if (!preprocessorDefinitions.includes(valueKey)) preprocessorDefinitions.push(valueKey);\n      buildSettings.GCC_PREPROCESSOR_DEFINITIONS = preprocessorDefinitions;\n    }\n    return config;\n  });\n};\n"]}
\ No newline at end of file
+{"version":3,"names":["withXcodeProject","withDisableFrameProcessorsIOS","c","config","xcodeProject","modResults","configurations","pbxXCBuildConfigurationSection","inheritKey","valueKey","key","buildSettings","preprocessorDefinitions","GCC_PREPROCESSOR_DEFINITIONS","includes","push"],"sourceRoot":"../../../src","sources":["expo-plugin/withDisableFrameProcessorsIOS.ts"],"mappings":"AAAA;AACA,SAAuBA,gBAAgB,QAAsB,sBAAsB;;AAEnF;AACA;AACA;AACA;AACA,OAAO,MAAMC,6BAA2C,GAAIC,CAAC,IAAK;EAChE,OAAOF,gBAAgB,CAACE,CAAC,EAAGC,MAAM,IAAK;IACrC,MAAMC,YAA0B,GAAGD,MAAM,CAACE,UAAU;IAEpD,MAAMC,cAAc,GAAGF,YAAY,CAACG,8BAA8B,CAAC,CAAC;IAEpE,MAAMC,UAAU,GAAG,gBAAgB;IACnC,MAAMC,QAAQ,GAAG,4CAA4C;IAE7D,KAAK,MAAMC,GAAG,IAAIJ,cAAc,EAAE;MAChC,MAAMK,aAAa,GAAGL,cAAc,CAACI,GAAG,CAAC,CAACC,aAAa;MACvD,IAAIA,aAAa,IAAI,IAAI,EAAE;MAE3B,MAAMC,uBAAuB,GAAID,aAAa,CAACE,4BAA4B,IAAI,CAACL,UAAU,CAAc;MAExG,IAAI,CAACI,uBAAuB,CAACE,QAAQ,CAACL,QAAQ,CAAC,EAAEG,uBAAuB,CAACG,IAAI,CAACN,QAAQ,CAAC;MACvFE,aAAa,CAACE,4BAA4B,GAAGD,uBAAuB;IACtE;IACA,OAAOT,MAAM;EACf,CAAC,CAAC;AACJ,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js
index 8989fa1..9c83683 100644
--- a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js
+++ b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js
@@ -1,36 +1,25 @@
 import { withPlugins, AndroidConfig, createRunOncePlugin } from '@expo/config-plugins';
 import { withDisableFrameProcessorsAndroid } from './withDisableFrameProcessorsAndroid';
-import { withDisableFrameProcessorsIOS } from './withDisableFrameProcessorsIOS'; // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment
-
+import { withDisableFrameProcessorsIOS } from './withDisableFrameProcessorsIOS';
+// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment
 const pkg = require('../../../package.json');
-
 const CAMERA_USAGE = 'Allow $(PRODUCT_NAME) to access your camera';
 const MICROPHONE_USAGE = 'Allow $(PRODUCT_NAME) to access your microphone';
-
 const withCamera = function (config) {
-  var _ref, _props$cameraPermissi;
-
   let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
   if (config.ios == null) config.ios = {};
   if (config.ios.infoPlist == null) config.ios.infoPlist = {};
-  config.ios.infoPlist.NSCameraUsageDescription = (_ref = (_props$cameraPermissi = props.cameraPermissionText) !== null && _props$cameraPermissi !== void 0 ? _props$cameraPermissi : config.ios.infoPlist.NSCameraUsageDescription) !== null && _ref !== void 0 ? _ref : CAMERA_USAGE;
-
+  config.ios.infoPlist.NSCameraUsageDescription = props.cameraPermissionText ?? config.ios.infoPlist.NSCameraUsageDescription ?? CAMERA_USAGE;
   if (props.enableMicrophonePermission) {
-    var _ref2, _props$microphonePerm;
-
-    config.ios.infoPlist.NSMicrophoneUsageDescription = (_ref2 = (_props$microphonePerm = props.microphonePermissionText) !== null && _props$microphonePerm !== void 0 ? _props$microphonePerm : config.ios.infoPlist.NSMicrophoneUsageDescription) !== null && _ref2 !== void 0 ? _ref2 : MICROPHONE_USAGE;
+    config.ios.infoPlist.NSMicrophoneUsageDescription = props.microphonePermissionText ?? config.ios.infoPlist.NSMicrophoneUsageDescription ?? MICROPHONE_USAGE;
   }
-
   const androidPermissions = ['android.permission.CAMERA'];
   if (props.enableMicrophonePermission) androidPermissions.push('android.permission.RECORD_AUDIO');
-
   if (props.disableFrameProcessors) {
     config = withDisableFrameProcessorsAndroid(config);
     config = withDisableFrameProcessorsIOS(config);
   }
-
   return withPlugins(config, [[AndroidConfig.Permissions.withPermissions, androidPermissions]]);
 };
-
 export default createRunOncePlugin(withCamera, pkg.name, pkg.version);
 //# sourceMappingURL=withVisionCamera.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js.map b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js.map
index 0c47981..5d4b0a8 100644
--- a/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/expo-plugin/withVisionCamera.js.map
@@ -1 +1 @@
-{"version":3,"sources":["withVisionCamera.ts"],"names":["withPlugins","AndroidConfig","createRunOncePlugin","withDisableFrameProcessorsAndroid","withDisableFrameProcessorsIOS","pkg","require","CAMERA_USAGE","MICROPHONE_USAGE","withCamera","config","props","ios","infoPlist","NSCameraUsageDescription","cameraPermissionText","enableMicrophonePermission","NSMicrophoneUsageDescription","microphonePermissionText","androidPermissions","push","disableFrameProcessors","Permissions","withPermissions","name","version"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,aAAtB,EAAmDC,mBAAnD,QAA8E,sBAA9E;AACA,SAASC,iCAAT,QAAkD,qCAAlD;AACA,SAASC,6BAAT,QAA8C,iCAA9C,C,CACA;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAEA,MAAMC,YAAY,GAAG,6CAArB;AACA,MAAMC,gBAAgB,GAAG,iDAAzB;;AASA,MAAMC,UAA+B,GAAG,UAACC,MAAD,EAAwB;AAAA;;AAAA,MAAfC,KAAe,uEAAP,EAAO;AAC9D,MAAID,MAAM,CAACE,GAAP,IAAc,IAAlB,EAAwBF,MAAM,CAACE,GAAP,GAAa,EAAb;AACxB,MAAIF,MAAM,CAACE,GAAP,CAAWC,SAAX,IAAwB,IAA5B,EAAkCH,MAAM,CAACE,GAAP,CAAWC,SAAX,GAAuB,EAAvB;AAClCH,EAAAA,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBC,wBAArB,oCACEH,KAAK,CAACI,oBADR,yEACiCL,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBC,wBADtD,uCACyGP,YADzG;;AAEA,MAAII,KAAK,CAACK,0BAAV,EAAsC;AAAA;;AACpCN,IAAAA,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBI,4BAArB,qCACEN,KAAK,CAACO,wBADR,yEACqCR,MAAM,CAACE,GAAP,CAAWC,SAAX,CAAqBI,4BAD1D,yCACiHT,gBADjH;AAED;;AACD,QAAMW,kBAAkB,GAAG,CAAC,2BAAD,CAA3B;AACA,MAAIR,KAAK,CAACK,0BAAV,EAAsCG,kBAAkB,CAACC,IAAnB,CAAwB,iCAAxB;;AAEtC,MAAIT,KAAK,CAACU,sBAAV,EAAkC;AAChCX,IAAAA,MAAM,GAAGP,iCAAiC,CAACO,MAAD,CAA1C;AACAA,IAAAA,MAAM,GAAGN,6BAA6B,CAACM,MAAD,CAAtC;AACD;;AAED,SAAOV,WAAW,CAACU,MAAD,EAAS,CAAC,CAACT,aAAa,CAACqB,WAAd,CAA0BC,eAA3B,EAA4CJ,kBAA5C,CAAD,CAAT,CAAlB;AACD,CAlBD;;AAoBA,eAAejB,mBAAmB,CAACO,UAAD,EAAaJ,GAAG,CAACmB,IAAjB,EAAuBnB,GAAG,CAACoB,OAA3B,CAAlC","sourcesContent":["import { withPlugins, AndroidConfig, ConfigPlugin, createRunOncePlugin } from '@expo/config-plugins';\nimport { withDisableFrameProcessorsAndroid } from './withDisableFrameProcessorsAndroid';\nimport { withDisableFrameProcessorsIOS } from './withDisableFrameProcessorsIOS';\n// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment\nconst pkg = require('../../../package.json');\n\nconst CAMERA_USAGE = 'Allow $(PRODUCT_NAME) to access your camera';\nconst MICROPHONE_USAGE = 'Allow $(PRODUCT_NAME) to access your microphone';\n\ntype Props = {\n  cameraPermissionText?: string;\n  enableMicrophonePermission?: boolean;\n  microphonePermissionText?: string;\n  disableFrameProcessors?: boolean;\n};\n\nconst withCamera: ConfigPlugin<Props> = (config, props = {}) => {\n  if (config.ios == null) config.ios = {};\n  if (config.ios.infoPlist == null) config.ios.infoPlist = {};\n  config.ios.infoPlist.NSCameraUsageDescription =\n    props.cameraPermissionText ?? (config.ios.infoPlist.NSCameraUsageDescription as string | undefined) ?? CAMERA_USAGE;\n  if (props.enableMicrophonePermission) {\n    config.ios.infoPlist.NSMicrophoneUsageDescription =\n      props.microphonePermissionText ?? (config.ios.infoPlist.NSMicrophoneUsageDescription as string | undefined) ?? MICROPHONE_USAGE;\n  }\n  const androidPermissions = ['android.permission.CAMERA'];\n  if (props.enableMicrophonePermission) androidPermissions.push('android.permission.RECORD_AUDIO');\n\n  if (props.disableFrameProcessors) {\n    config = withDisableFrameProcessorsAndroid(config);\n    config = withDisableFrameProcessorsIOS(config);\n  }\n\n  return withPlugins(config, [[AndroidConfig.Permissions.withPermissions, androidPermissions]]);\n};\n\nexport default createRunOncePlugin(withCamera, pkg.name, pkg.version);\n"]}
\ No newline at end of file
+{"version":3,"names":["withPlugins","AndroidConfig","createRunOncePlugin","withDisableFrameProcessorsAndroid","withDisableFrameProcessorsIOS","pkg","require","CAMERA_USAGE","MICROPHONE_USAGE","withCamera","config","props","arguments","length","undefined","ios","infoPlist","NSCameraUsageDescription","cameraPermissionText","enableMicrophonePermission","NSMicrophoneUsageDescription","microphonePermissionText","androidPermissions","push","disableFrameProcessors","Permissions","withPermissions","name","version"],"sourceRoot":"../../../src","sources":["expo-plugin/withVisionCamera.ts"],"mappings":"AAAA,SAASA,WAAW,EAAEC,aAAa,EAAgBC,mBAAmB,QAAQ,sBAAsB;AACpG,SAASC,iCAAiC,QAAQ,qCAAqC;AACvF,SAASC,6BAA6B,QAAQ,iCAAiC;AAC/E;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAE5C,MAAMC,YAAY,GAAG,6CAA6C;AAClE,MAAMC,gBAAgB,GAAG,iDAAiD;AAS1E,MAAMC,UAA+B,GAAG,SAAAA,CAACC,MAAM,EAAiB;EAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EACzD,IAAIF,MAAM,CAACK,GAAG,IAAI,IAAI,EAAEL,MAAM,CAACK,GAAG,GAAG,CAAC,CAAC;EACvC,IAAIL,MAAM,CAACK,GAAG,CAACC,SAAS,IAAI,IAAI,EAAEN,MAAM,CAACK,GAAG,CAACC,SAAS,GAAG,CAAC,CAAC;EAC3DN,MAAM,CAACK,GAAG,CAACC,SAAS,CAACC,wBAAwB,GAC3CN,KAAK,CAACO,oBAAoB,IAAKR,MAAM,CAACK,GAAG,CAACC,SAAS,CAACC,wBAA+C,IAAIV,YAAY;EACrH,IAAII,KAAK,CAACQ,0BAA0B,EAAE;IACpCT,MAAM,CAACK,GAAG,CAACC,SAAS,CAACI,4BAA4B,GAC/CT,KAAK,CAACU,wBAAwB,IAAKX,MAAM,CAACK,GAAG,CAACC,SAAS,CAACI,4BAAmD,IAAIZ,gBAAgB;EACnI;EACA,MAAMc,kBAAkB,GAAG,CAAC,2BAA2B,CAAC;EACxD,IAAIX,KAAK,CAACQ,0BAA0B,EAAEG,kBAAkB,CAACC,IAAI,CAAC,iCAAiC,CAAC;EAEhG,IAAIZ,KAAK,CAACa,sBAAsB,EAAE;IAChCd,MAAM,GAAGP,iCAAiC,CAACO,MAAM,CAAC;IAClDA,MAAM,GAAGN,6BAA6B,CAACM,MAAM,CAAC;EAChD;EAEA,OAAOV,WAAW,CAACU,MAAM,EAAE,CAAC,CAACT,aAAa,CAACwB,WAAW,CAACC,eAAe,EAAEJ,kBAAkB,CAAC,CAAC,CAAC;AAC/F,CAAC;AAED,eAAepB,mBAAmB,CAACO,UAAU,EAAEJ,GAAG,CAACsB,IAAI,EAAEtB,GAAG,CAACuB,OAAO,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/globals.d.js.map b/node_modules/react-native-vision-camera/lib/module/globals.d.js.map
index 9ffd4b2..329e9d3 100644
--- a/node_modules/react-native-vision-camera/lib/module/globals.d.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/globals.d.js.map
@@ -1 +1 @@
-{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":[]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["globals.d.ts"],"mappings":""}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js
index 67ba218..afd20ee 100644
--- a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js
+++ b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js
@@ -8,6 +8,7 @@ const DefaultCameraDevices = {
   front: undefined,
   unspecified: undefined
 };
+
 /**
  * Gets the best available {@linkcode CameraDevice}. Devices with more cameras are preferred.
  *
@@ -21,23 +22,34 @@ const DefaultCameraDevices = {
  * ```
  */
 
+/**
+ * Gets a {@linkcode CameraDevice} for the requested device type.
+ *
+ * @param {PhysicalCameraDeviceType | LogicalCameraDeviceType} deviceType Specifies a device type which will be used as a device filter.
+ * @returns A {@linkcode CameraDevice} for the requested device type.
+ * @throws {@linkcode CameraRuntimeError} if no device was found.
+ * @example
+ * ```tsx
+ * const device = useCameraDevice('wide-angle-camera')
+ * // ...
+ * return <Camera device={device} />
+ * ```
+ */
+
 export function useCameraDevices(deviceType) {
   const [cameraDevices, setCameraDevices] = useState(DefaultCameraDevices);
   useEffect(() => {
     let isMounted = true;
-
     const loadDevice = async () => {
       let devices = await Camera.getAvailableCameraDevices();
       if (!isMounted) return;
       devices = devices.sort(sortDevices);
-
       if (deviceType != null) {
         devices = devices.filter(d => {
           const parsedType = parsePhysicalDeviceTypes(d.devices);
           return parsedType === deviceType;
         });
       }
-
       setCameraDevices({
         back: devices.find(d => d.position === 'back'),
         external: devices.find(d => d.position === 'external'),
@@ -45,7 +57,6 @@ export function useCameraDevices(deviceType) {
         unspecified: devices.find(d => d.position === 'unspecified')
       });
     };
-
     loadDevice();
     return () => {
       isMounted = false;
diff --git a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js.map b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js.map
index 2c8c84e..b599ad5 100644
--- a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraDevices.js.map
@@ -1 +1 @@
-{"version":3,"sources":["useCameraDevices.ts"],"names":["useEffect","useState","sortDevices","Camera","parsePhysicalDeviceTypes","DefaultCameraDevices","back","undefined","external","front","unspecified","useCameraDevices","deviceType","cameraDevices","setCameraDevices","isMounted","loadDevice","devices","getAvailableCameraDevices","sort","filter","d","parsedType","find","position"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAgDC,wBAAhD,QAA0G,iBAA1G;AAKA,MAAMC,oBAAmC,GAAG;AAC1CC,EAAAA,IAAI,EAAEC,SADoC;AAE1CC,EAAAA,QAAQ,EAAED,SAFgC;AAG1CE,EAAAA,KAAK,EAAEF,SAHmC;AAI1CG,EAAAA,WAAW,EAAEH;AAJ6B,CAA5C;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAkBA,OAAO,SAASI,gBAAT,CAA0BC,UAA1B,EAA0G;AAC/G,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAgBI,oBAAhB,CAAlD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,SAAS,GAAG,IAAhB;;AAEA,UAAMC,UAAU,GAAG,YAA2B;AAC5C,UAAIC,OAAO,GAAG,MAAMd,MAAM,CAACe,yBAAP,EAApB;AACA,UAAI,CAACH,SAAL,EAAgB;AAEhBE,MAAAA,OAAO,GAAGA,OAAO,CAACE,IAAR,CAAajB,WAAb,CAAV;;AACA,UAAIU,UAAU,IAAI,IAAlB,EAAwB;AACtBK,QAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAgBC,CAAD,IAAO;AAC9B,gBAAMC,UAAU,GAAGlB,wBAAwB,CAACiB,CAAC,CAACJ,OAAH,CAA3C;AACA,iBAAOK,UAAU,KAAKV,UAAtB;AACD,SAHS,CAAV;AAID;;AACDE,MAAAA,gBAAgB,CAAC;AACfR,QAAAA,IAAI,EAAEW,OAAO,CAACM,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,MAAnC,CADS;AAEfhB,QAAAA,QAAQ,EAAES,OAAO,CAACM,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,UAAnC,CAFK;AAGff,QAAAA,KAAK,EAAEQ,OAAO,CAACM,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,OAAnC,CAHQ;AAIfd,QAAAA,WAAW,EAAEO,OAAO,CAACM,IAAR,CAAcF,CAAD,IAAOA,CAAC,CAACG,QAAF,KAAe,aAAnC;AAJE,OAAD,CAAhB;AAMD,KAjBD;;AAkBAR,IAAAA,UAAU;AAEV,WAAO,MAAM;AACXD,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GA1BQ,EA0BN,CAACH,UAAD,CA1BM,CAAT;AA4BA,SAAOC,aAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport type { CameraPosition } from '../CameraPosition';\nimport { sortDevices } from '../utils/FormatFilter';\nimport { Camera } from '../Camera';\nimport { CameraDevice, LogicalCameraDeviceType, parsePhysicalDeviceTypes, PhysicalCameraDeviceType } from '../CameraDevice';\n\nexport type CameraDevices = {\n  [key in CameraPosition]: CameraDevice | undefined;\n};\nconst DefaultCameraDevices: CameraDevices = {\n  back: undefined,\n  external: undefined,\n  front: undefined,\n  unspecified: undefined,\n};\n\n/**\n * Gets the best available {@linkcode CameraDevice}. Devices with more cameras are preferred.\n *\n * @returns The best matching {@linkcode CameraDevice}.\n * @throws {@linkcode CameraRuntimeError} if no device was found.\n * @example\n * ```tsx\n * const device = useCameraDevice()\n * // ...\n * return <Camera device={device} />\n * ```\n */\nexport function useCameraDevices(): CameraDevices;\n\n/**\n * Gets a {@linkcode CameraDevice} for the requested device type.\n *\n * @param {PhysicalCameraDeviceType | LogicalCameraDeviceType} deviceType Specifies a device type which will be used as a device filter.\n * @returns A {@linkcode CameraDevice} for the requested device type.\n * @throws {@linkcode CameraRuntimeError} if no device was found.\n * @example\n * ```tsx\n * const device = useCameraDevice('wide-angle-camera')\n * // ...\n * return <Camera device={device} />\n * ```\n */\nexport function useCameraDevices(deviceType: PhysicalCameraDeviceType | LogicalCameraDeviceType): CameraDevices;\n\nexport function useCameraDevices(deviceType?: PhysicalCameraDeviceType | LogicalCameraDeviceType): CameraDevices {\n  const [cameraDevices, setCameraDevices] = useState<CameraDevices>(DefaultCameraDevices);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    const loadDevice = async (): Promise<void> => {\n      let devices = await Camera.getAvailableCameraDevices();\n      if (!isMounted) return;\n\n      devices = devices.sort(sortDevices);\n      if (deviceType != null) {\n        devices = devices.filter((d) => {\n          const parsedType = parsePhysicalDeviceTypes(d.devices);\n          return parsedType === deviceType;\n        });\n      }\n      setCameraDevices({\n        back: devices.find((d) => d.position === 'back'),\n        external: devices.find((d) => d.position === 'external'),\n        front: devices.find((d) => d.position === 'front'),\n        unspecified: devices.find((d) => d.position === 'unspecified'),\n      });\n    };\n    loadDevice();\n\n    return () => {\n      isMounted = false;\n    };\n  }, [deviceType]);\n\n  return cameraDevices;\n}\n"]}
\ No newline at end of file
+{"version":3,"names":["useEffect","useState","sortDevices","Camera","parsePhysicalDeviceTypes","DefaultCameraDevices","back","undefined","external","front","unspecified","useCameraDevices","deviceType","cameraDevices","setCameraDevices","isMounted","loadDevice","devices","getAvailableCameraDevices","sort","filter","d","parsedType","find","position"],"sourceRoot":"../../../src","sources":["hooks/useCameraDevices.ts"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,MAAM,QAAQ,WAAW;AAClC,SAAgDC,wBAAwB,QAAkC,iBAAiB;AAK3H,MAAMC,oBAAmC,GAAG;EAC1CC,IAAI,EAAEC,SAAS;EACfC,QAAQ,EAAED,SAAS;EACnBE,KAAK,EAAEF,SAAS;EAChBG,WAAW,EAAEH;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,SAASI,gBAAgBA,CAACC,UAA+D,EAAiB;EAC/G,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAgBI,oBAAoB,CAAC;EAEvFL,SAAS,CAAC,MAAM;IACd,IAAIe,SAAS,GAAG,IAAI;IAEpB,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAA2B;MAC5C,IAAIC,OAAO,GAAG,MAAMd,MAAM,CAACe,yBAAyB,CAAC,CAAC;MACtD,IAAI,CAACH,SAAS,EAAE;MAEhBE,OAAO,GAAGA,OAAO,CAACE,IAAI,CAACjB,WAAW,CAAC;MACnC,IAAIU,UAAU,IAAI,IAAI,EAAE;QACtBK,OAAO,GAAGA,OAAO,CAACG,MAAM,CAAEC,CAAC,IAAK;UAC9B,MAAMC,UAAU,GAAGlB,wBAAwB,CAACiB,CAAC,CAACJ,OAAO,CAAC;UACtD,OAAOK,UAAU,KAAKV,UAAU;QAClC,CAAC,CAAC;MACJ;MACAE,gBAAgB,CAAC;QACfR,IAAI,EAAEW,OAAO,CAACM,IAAI,CAAEF,CAAC,IAAKA,CAAC,CAACG,QAAQ,KAAK,MAAM,CAAC;QAChDhB,QAAQ,EAAES,OAAO,CAACM,IAAI,CAAEF,CAAC,IAAKA,CAAC,CAACG,QAAQ,KAAK,UAAU,CAAC;QACxDf,KAAK,EAAEQ,OAAO,CAACM,IAAI,CAAEF,CAAC,IAAKA,CAAC,CAACG,QAAQ,KAAK,OAAO,CAAC;QAClDd,WAAW,EAAEO,OAAO,CAACM,IAAI,CAAEF,CAAC,IAAKA,CAAC,CAACG,QAAQ,KAAK,aAAa;MAC/D,CAAC,CAAC;IACJ,CAAC;IACDR,UAAU,CAAC,CAAC;IAEZ,OAAO,MAAM;MACXD,SAAS,GAAG,KAAK;IACnB,CAAC;EACH,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAEhB,OAAOC,aAAa;AACtB"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js
index 2ff59d6..ad8d2ac 100644
--- a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js
+++ b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js
@@ -1,5 +1,6 @@
 import { useMemo } from 'react';
 import { sortFormats } from '../utils/FormatFilter';
+
 /**
  * Returns the best format for the given camera device.
  *
@@ -9,7 +10,6 @@ import { sortFormats } from '../utils/FormatFilter';
  *
  * @returns The best matching format for the given camera device, or `undefined` if the camera device is `undefined`.
  */
-
 export function useCameraFormat(device) {
   return useMemo(() => device === null || device === void 0 ? void 0 : device.formats.sort(sortFormats)[0], [device === null || device === void 0 ? void 0 : device.formats]);
 }
diff --git a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js.map b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js.map
index ad0095d..caa2d21 100644
--- a/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/hooks/useCameraFormat.js.map
@@ -1 +1 @@
-{"version":3,"sources":["useCameraFormat.ts"],"names":["useMemo","sortFormats","useCameraFormat","device","formats","sort"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,MAAzB,EAAgF;AACrF,SAAOH,OAAO,CAAC,MAAMG,MAAN,aAAMA,MAAN,uBAAMA,MAAM,CAAEC,OAAR,CAAgBC,IAAhB,CAAqBJ,WAArB,EAAkC,CAAlC,CAAP,EAA6C,CAACE,MAAD,aAACA,MAAD,uBAACA,MAAM,CAAEC,OAAT,CAA7C,CAAd;AACD","sourcesContent":["import { useMemo } from 'react';\nimport type { CameraDevice, CameraDeviceFormat } from '../CameraDevice';\nimport { sortFormats } from '../utils/FormatFilter';\n\n/**\n * Returns the best format for the given camera device.\n *\n * This function tries to choose a format with the highest possible photo-capture resolution and best matching aspect ratio.\n *\n * @param {CameraDevice} device The Camera Device\n *\n * @returns The best matching format for the given camera device, or `undefined` if the camera device is `undefined`.\n */\nexport function useCameraFormat(device?: CameraDevice): CameraDeviceFormat | undefined {\n  return useMemo(() => device?.formats.sort(sortFormats)[0], [device?.formats]);\n}\n"]}
\ No newline at end of file
+{"version":3,"names":["useMemo","sortFormats","useCameraFormat","device","formats","sort"],"sourceRoot":"../../../src","sources":["hooks/useCameraFormat.ts"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,SAASC,WAAW,QAAQ,uBAAuB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,MAAqB,EAAkC;EACrF,OAAOH,OAAO,CAAC,MAAMG,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,OAAO,CAACC,IAAI,CAACJ,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAACE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,OAAO,CAAC,CAAC;AAC/E"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js b/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js
index edccc26..df87df2 100644
--- a/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js
+++ b/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js
@@ -1,8 +1,6 @@
-/* global _setGlobalConsole */
 import { useCallback } from 'react';
-const capturableConsole = console;
 /**
- * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors))
+ * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://react-native-vision-camera.com/docs/guides/frame-processors))
  *
  * Make sure to add the `'worklet'` directive to the top of the Frame Processor function, otherwise it will not get compiled into a worklet.
  *
@@ -18,37 +16,12 @@ const capturableConsole = console;
  * }, [])
  * ```
  */
-
 export function useFrameProcessor(frameProcessor, dependencies) {
   return useCallback(frame => {
-    'worklet'; // @ts-expect-error
-
-    if (global.didSetConsole == null || global.didSetConsole === false) {
-      const console = {
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        debug: capturableConsole.debug.__callAsync,
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        log: capturableConsole.log.__callAsync,
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        warn: capturableConsole.warn.__callAsync,
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        error: capturableConsole.error.__callAsync,
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        info: capturableConsole.info.__callAsync
-      }; // @ts-expect-error _setGlobalConsole is set by RuntimeDecorator::decorateRuntime
-
-      _setGlobalConsole(console); // @ts-expect-error
-
-
-      global.didSetConsole = true;
-    }
+    'worklet';
 
-    frameProcessor(frame); // eslint-disable-next-line react-hooks/exhaustive-deps
+    frameProcessor(frame);
+    // eslint-disable-next-line react-hooks/exhaustive-deps
   }, dependencies);
 }
 //# sourceMappingURL=useFrameProcessor.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js.map b/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js.map
index ef7dd38..457504c 100644
--- a/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/hooks/useFrameProcessor.js.map
@@ -1 +1 @@
-{"version":3,"sources":["useFrameProcessor.ts"],"names":["useCallback","capturableConsole","console","useFrameProcessor","frameProcessor","dependencies","frame","global","didSetConsole","debug","__callAsync","log","warn","error","info","_setGlobalConsole"],"mappings":"AAAA;AAEA,SAAyBA,WAAzB,QAA4C,OAA5C;AAKA,MAAMC,iBAAiB,GAAGC,OAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA2BC,cAA3B,EAA2DC,YAA3D,EAAyG;AAC9G,SAAOL,WAAW,CAAEM,KAAD,IAAkB;AACnC,cADmC,CAGnC;;AACA,QAAIC,MAAM,CAACC,aAAP,IAAwB,IAAxB,IAAgCD,MAAM,CAACC,aAAP,KAAyB,KAA7D,EAAoE;AAClE,YAAMN,OAAO,GAAG;AACd;AACA;AACAO,QAAAA,KAAK,EAAER,iBAAiB,CAACQ,KAAlB,CAAwBC,WAHjB;AAId;AACA;AACAC,QAAAA,GAAG,EAAEV,iBAAiB,CAACU,GAAlB,CAAsBD,WANb;AAOd;AACA;AACAE,QAAAA,IAAI,EAAEX,iBAAiB,CAACW,IAAlB,CAAuBF,WATf;AAUd;AACA;AACAG,QAAAA,KAAK,EAAEZ,iBAAiB,CAACY,KAAlB,CAAwBH,WAZjB;AAad;AACA;AACAI,QAAAA,IAAI,EAAEb,iBAAiB,CAACa,IAAlB,CAAuBJ;AAff,OAAhB,CADkE,CAkBlE;;AACAK,MAAAA,iBAAiB,CAACb,OAAD,CAAjB,CAnBkE,CAoBlE;;;AACAK,MAAAA,MAAM,CAACC,aAAP,GAAuB,IAAvB;AACD;;AAEDJ,IAAAA,cAAc,CAACE,KAAD,CAAd,CA5BmC,CA6BnC;AACD,GA9BiB,EA8BfD,YA9Be,CAAlB;AA+BD","sourcesContent":["/* global _setGlobalConsole */\n\nimport { DependencyList, useCallback } from 'react';\nimport type { Frame } from '../Frame';\n\ntype FrameProcessor = (frame: Frame) => void;\n\nconst capturableConsole = console;\n\n/**\n * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See [\"Frame Processors\"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors))\n *\n * Make sure to add the `'worklet'` directive to the top of the Frame Processor function, otherwise it will not get compiled into a worklet.\n *\n * @param frameProcessor The Frame Processor\n * @param dependencies The React dependencies which will be copied into the VisionCamera JS-Runtime.\n * @returns The memoized Frame Processor.\n * @example\n * ```ts\n * const frameProcessor = useFrameProcessor((frame) => {\n *   'worklet'\n *   const qrCodes = scanQRCodes(frame)\n *   console.log(`QR Codes: ${qrCodes}`)\n * }, [])\n * ```\n */\nexport function useFrameProcessor(frameProcessor: FrameProcessor, dependencies: DependencyList): FrameProcessor {\n  return useCallback((frame: Frame) => {\n    'worklet';\n\n    // @ts-expect-error\n    if (global.didSetConsole == null || global.didSetConsole === false) {\n      const console = {\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        debug: capturableConsole.debug.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        log: capturableConsole.log.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        warn: capturableConsole.warn.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        error: capturableConsole.error.__callAsync,\n        // @ts-expect-error __callAsync is injected by native REA\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        info: capturableConsole.info.__callAsync,\n      };\n      // @ts-expect-error _setGlobalConsole is set by RuntimeDecorator::decorateRuntime\n      _setGlobalConsole(console);\n      // @ts-expect-error\n      global.didSetConsole = true;\n    }\n\n    frameProcessor(frame);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n"]}
\ No newline at end of file
+{"version":3,"names":["useCallback","useFrameProcessor","frameProcessor","dependencies","frame"],"sourceRoot":"../../../src","sources":["hooks/useFrameProcessor.ts"],"mappings":"AAAA,SAAyBA,WAAW,QAAQ,OAAO;AAKnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAACC,cAA8B,EAAEC,YAA4B,EAAkB;EAC9G,OAAOH,WAAW,CAAEI,KAAY,IAAK;IACnC,SAAS;;IACTF,cAAc,CAACE,KAAK,CAAC;IACrB;EACF,CAAC,EAAED,YAAY,CAAC;AAClB"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/index.js.map b/node_modules/react-native-vision-camera/lib/module/index.js.map
index 152a29e..123e312 100644
--- a/node_modules/react-native-vision-camera/lib/module/index.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/index.js.map
@@ -1 +1 @@
-{"version":3,"sources":["index.ts"],"names":[],"mappings":"AAAA,cAAc,UAAd;AACA,cAAc,gBAAd;AACA,cAAc,eAAd;AACA,cAAc,kBAAd;AACA,cAAc,gBAAd;AACA,cAAc,eAAd;AACA,cAAc,SAAd;AACA,cAAc,eAAd;AACA,cAAc,aAAd;AACA,cAAc,SAAd;AACA,cAAc,YAAd;AACA,cAAc,iBAAd;AACA,cAAc,aAAd;AAEA,cAAc,0BAAd;AACA,cAAc,yBAAd;AACA,cAAc,2BAAd;AAEA,cAAc,sBAAd","sourcesContent":["export * from './Camera';\nexport * from './CameraDevice';\nexport * from './CameraError';\nexport * from './CameraPosition';\nexport * from './CameraPreset';\nexport * from './CameraProps';\nexport * from './Frame';\nexport * from './CameraProps';\nexport * from './PhotoFile';\nexport * from './Point';\nexport * from './Snapshot';\nexport * from './TemporaryFile';\nexport * from './VideoFile';\n\nexport * from './hooks/useCameraDevices';\nexport * from './hooks/useCameraFormat';\nexport * from './hooks/useFrameProcessor';\n\nexport * from './utils/FormatFilter';\n"]}
\ No newline at end of file
+{"version":3,"names":[],"sourceRoot":"../../src","sources":["index.ts"],"mappings":"AAAA,cAAc,UAAU;AACxB,cAAc,gBAAgB;AAC9B,cAAc,eAAe;AAC7B,cAAc,kBAAkB;AAChC,cAAc,gBAAgB;AAC9B,cAAc,eAAe;AAC7B,cAAc,SAAS;AACvB,cAAc,eAAe;AAC7B,cAAc,aAAa;AAC3B,cAAc,SAAS;AACvB,cAAc,YAAY;AAC1B,cAAc,iBAAiB;AAC/B,cAAc,aAAa;AAE3B,cAAc,0BAA0B;AACxC,cAAc,yBAAyB;AACvC,cAAc,2BAA2B;AAEzC,cAAc,sBAAsB"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js b/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js
index e293e64..df004d2 100644
--- a/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js
+++ b/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js
@@ -1,5 +1,4 @@
 import { Dimensions } from 'react-native';
-
 /**
  * Compares two devices by the following criteria:
  * * `wide-angle-camera`s are ranked higher than others
@@ -20,8 +19,9 @@ export const sortDevices = (left, right) => {
   const leftHasWideAngle = left.devices.includes('wide-angle-camera');
   const rightHasWideAngle = right.devices.includes('wide-angle-camera');
   if (leftHasWideAngle) leftPoints += 2;
-  if (rightHasWideAngle) rightPoints += 2; // telephoto cameras often have very poor quality.
+  if (rightHasWideAngle) rightPoints += 2;
 
+  // telephoto cameras often have very poor quality.
   const leftHasTelephoto = left.devices.includes('telephoto-camera');
   const rightHasTelephoto = right.devices.includes('telephoto-camera');
   if (leftHasTelephoto) leftPoints -= 2;
@@ -35,31 +35,34 @@ const SCREEN_SIZE = {
   height: Dimensions.get('window').height
 };
 const SCREEN_ASPECT_RATIO = SCREEN_SIZE.width / SCREEN_SIZE.height;
+
 /**
  * Sort formats by resolution and aspect ratio difference (to the Screen size).
  *
  * > Note that this makes the `sort()` function descending, so the first element (`[0]`) is the "best" device.
  */
-
 export const sortFormats = (left, right) => {
   let leftPoints = 0,
-      rightPoints = 0; // we downscale the points so much that we are in smaller number ranges for future calculations
-  // e.g. for 4k (4096), this adds 8 points.
+    rightPoints = 0;
 
+  // we downscale the points so much that we are in smaller number ranges for future calculations
+  // e.g. for 4k (4096), this adds 8 points.
   leftPoints += Math.round(left.photoWidth / 500);
-  rightPoints += Math.round(right.photoWidth / 500); // e.g. for 4k (4096), this adds 8 points.
-
+  rightPoints += Math.round(right.photoWidth / 500);
+  // e.g. for 4k (4096), this adds 8 points.
   leftPoints += Math.round(left.videoWidth / 500);
-  rightPoints += Math.round(right.videoWidth / 500); // we downscale the points here as well, so if left has 16:9 and right has 21:9, this roughly
+  rightPoints += Math.round(right.videoWidth / 500);
+
+  // we downscale the points here as well, so if left has 16:9 and right has 21:9, this roughly
   // adds 5 points. If the difference is smaller, e.g. 16:9 vs 17:9, this roughly adds a little
   // bit over 1 point, just enough to overrule the FPS below.
-
   const leftAspectRatioDiff = left.photoHeight / left.photoWidth - SCREEN_ASPECT_RATIO;
   const rightAspectRatioDiff = right.photoHeight / right.photoWidth - SCREEN_ASPECT_RATIO;
   leftPoints -= Math.abs(leftAspectRatioDiff) * 10;
   rightPoints -= Math.abs(rightAspectRatioDiff) * 10;
   return rightPoints - leftPoints;
 };
+
 /**
  * Returns `true` if the given Frame Rate Range (`range`) contains the given frame rate (`fps`)
  *
@@ -72,6 +75,5 @@ export const sortFormats = (left, right) => {
  * ```
  * @method
  */
-
 export const frameRateIncluded = (range, fps) => fps >= range.minFrameRate && fps <= range.maxFrameRate;
 //# sourceMappingURL=FormatFilter.js.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js.map b/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js.map
index b9d63de..65bcfdf 100644
--- a/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js.map
+++ b/node_modules/react-native-vision-camera/lib/module/utils/FormatFilter.js.map
@@ -1 +1 @@
-{"version":3,"sources":["FormatFilter.ts"],"names":["Dimensions","sortDevices","left","right","leftPoints","rightPoints","leftHasWideAngle","devices","includes","rightHasWideAngle","leftHasTelephoto","rightHasTelephoto","length","SCREEN_SIZE","width","get","height","SCREEN_ASPECT_RATIO","sortFormats","Math","round","photoWidth","videoWidth","leftAspectRatioDiff","photoHeight","rightAspectRatioDiff","abs","frameRateIncluded","range","fps","minFrameRate","maxFrameRate"],"mappings":"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","sourcesContent":["import { Dimensions } from 'react-native';\nimport type { CameraDevice, CameraDeviceFormat, FrameRateRange } from '../CameraDevice';\n\n/**\n * Compares two devices by the following criteria:\n * * `wide-angle-camera`s are ranked higher than others\n * * Devices with more physical cameras are ranked higher than ones with less. (e.g. \"Triple Camera\" > \"Wide-Angle Camera\")\n *\n * > Note that this makes the `sort()` function descending, so the first element (`[0]`) is the \"best\" device.\n *\n * @example\n * ```ts\n * const devices = camera.devices.sort(sortDevices)\n * const bestDevice = devices[0]\n * ```\n * @method\n */\nexport const sortDevices = (left: CameraDevice, right: CameraDevice): number => {\n  let leftPoints = 0;\n  let rightPoints = 0;\n\n  const leftHasWideAngle = left.devices.includes('wide-angle-camera');\n  const rightHasWideAngle = right.devices.includes('wide-angle-camera');\n  if (leftHasWideAngle) leftPoints += 2;\n  if (rightHasWideAngle) rightPoints += 2;\n\n  // telephoto cameras often have very poor quality.\n  const leftHasTelephoto = left.devices.includes('telephoto-camera');\n  const rightHasTelephoto = right.devices.includes('telephoto-camera');\n  if (leftHasTelephoto) leftPoints -= 2;\n  if (rightHasTelephoto) rightPoints -= 2;\n\n  if (left.devices.length > right.devices.length) leftPoints += 1;\n  if (right.devices.length > left.devices.length) rightPoints += 1;\n\n  return rightPoints - leftPoints;\n};\n\nconst SCREEN_SIZE = {\n  width: Dimensions.get('window').width,\n  height: Dimensions.get('window').height,\n};\nconst SCREEN_ASPECT_RATIO = SCREEN_SIZE.width / SCREEN_SIZE.height;\n\n/**\n * Sort formats by resolution and aspect ratio difference (to the Screen size).\n *\n * > Note that this makes the `sort()` function descending, so the first element (`[0]`) is the \"best\" device.\n */\nexport const sortFormats = (left: CameraDeviceFormat, right: CameraDeviceFormat): number => {\n  let leftPoints = 0,\n    rightPoints = 0;\n\n  // we downscale the points so much that we are in smaller number ranges for future calculations\n  // e.g. for 4k (4096), this adds 8 points.\n  leftPoints += Math.round(left.photoWidth / 500);\n  rightPoints += Math.round(right.photoWidth / 500);\n  // e.g. for 4k (4096), this adds 8 points.\n  leftPoints += Math.round(left.videoWidth / 500);\n  rightPoints += Math.round(right.videoWidth / 500);\n\n  // we downscale the points here as well, so if left has 16:9 and right has 21:9, this roughly\n  // adds 5 points. If the difference is smaller, e.g. 16:9 vs 17:9, this roughly adds a little\n  // bit over 1 point, just enough to overrule the FPS below.\n  const leftAspectRatioDiff = left.photoHeight / left.photoWidth - SCREEN_ASPECT_RATIO;\n  const rightAspectRatioDiff = right.photoHeight / right.photoWidth - SCREEN_ASPECT_RATIO;\n  leftPoints -= Math.abs(leftAspectRatioDiff) * 10;\n  rightPoints -= Math.abs(rightAspectRatioDiff) * 10;\n\n  return rightPoints - leftPoints;\n};\n\n/**\n * Returns `true` if the given Frame Rate Range (`range`) contains the given frame rate (`fps`)\n *\n * @param {FrameRateRange} range The range to check if the given `fps` are included in\n * @param {number} fps The FPS to check if the given `range` supports.\n * @example\n * ```ts\n * // get all formats that support 60 FPS\n * const formatsWithHighFps = useMemo(() => device.formats.filter((f) => f.frameRateRanges.some((r) => frameRateIncluded(r, 60))), [device.formats])\n * ```\n * @method\n */\nexport const frameRateIncluded = (range: FrameRateRange, fps: number): boolean => fps >= range.minFrameRate && fps <= range.maxFrameRate;\n"]}
\ No newline at end of file
+{"version":3,"names":["Dimensions","sortDevices","left","right","leftPoints","rightPoints","leftHasWideAngle","devices","includes","rightHasWideAngle","leftHasTelephoto","rightHasTelephoto","length","SCREEN_SIZE","width","get","height","SCREEN_ASPECT_RATIO","sortFormats","Math","round","photoWidth","videoWidth","leftAspectRatioDiff","photoHeight","rightAspectRatioDiff","abs","frameRateIncluded","range","fps","minFrameRate","maxFrameRate"],"sourceRoot":"../../../src","sources":["utils/FormatFilter.ts"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts b/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts
index 7efd264..77799ca 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts
@@ -6,12 +6,12 @@ import type { PhotoFile, TakePhotoOptions } from './PhotoFile';
 import type { Point } from './Point';
 import type { TakeSnapshotOptions } from './Snapshot';
 import type { CameraVideoCodec, RecordVideoOptions } from './VideoFile';
-export declare type CameraPermissionStatus = 'authorized' | 'not-determined' | 'denied' | 'restricted';
-export declare type CameraPermissionRequestResult = 'authorized' | 'denied';
+export type CameraPermissionStatus = 'authorized' | 'not-determined' | 'denied' | 'restricted';
+export type CameraPermissionRequestResult = 'authorized' | 'denied';
 /**
  * ### A powerful `<Camera>` component.
  *
- * Read the [VisionCamera documentation](https://mrousavy.github.io/react-native-vision-camera/) for more information.
+ * Read the [VisionCamera documentation](https://react-native-vision-camera.com/) for more information.
  *
  * The `<Camera>` component's most important (and therefore _required_) properties are:
  *
@@ -252,3 +252,4 @@ export declare class Camera extends React.PureComponent<CameraProps> {
     /** @internal */
     render(): React.ReactNode;
 }
+//# sourceMappingURL=Camera.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts.map
new file mode 100644
index 0000000..d2a2e80
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/Camera.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Camera.d.ts","sourceRoot":"","sources":["../../src/Camera.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,KAAK,EAAuC,aAAa,EAAE,MAAM,GAAG,CAAC;AAC5E,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAGnD,OAAO,KAAK,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAEjD,OAAO,KAAK,EAAE,SAAS,EAAE,gBAAgB,EAAE,MAAM,aAAa,CAAC;AAC/D,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AACrC,OAAO,KAAK,EAAE,mBAAmB,EAAE,MAAM,YAAY,CAAC;AACtD,OAAO,KAAK,EAAE,gBAAgB,EAAE,kBAAkB,EAAa,MAAM,aAAa,CAAC;AAInF,MAAM,MAAM,sBAAsB,GAAG,YAAY,GAAG,gBAAgB,GAAG,QAAQ,GAAG,YAAY,CAAC;AAC/F,MAAM,MAAM,6BAA6B,GAAG,YAAY,GAAG,QAAQ,CAAC;AA4BpE;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,qBAAa,MAAO,SAAQ,KAAK,CAAC,aAAa,CAAC,WAAW,CAAC;IAC1D,gBAAgB;IAChB,MAAM,CAAC,WAAW,SAAY;IAC9B,gBAAgB;IAChB,WAAW,SAAsB;IACjC,OAAO,CAAC,kBAAkB,CAAuC;IACjE,OAAO,CAAC,mBAAmB,CAAS;IAEpC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAA2B;IAE/C,gBAAgB;gBACJ,KAAK,EAAE,WAAW;IAU9B,OAAO,KAAK,MAAM,GAUjB;IAGD;;;;;;;;;;;;OAYG;IACU,SAAS,CAAC,OAAO,CAAC,EAAE,gBAAgB,GAAG,OAAO,CAAC,SAAS,CAAC;IAQtE;;;;;;;;;;;;;;;OAeG;IACU,YAAY,CAAC,OAAO,CAAC,EAAE,mBAAmB,GAAG,OAAO,CAAC,SAAS,CAAC;IAW5E;;;;;;;;;;;;;;;;;;;;;OAqBG;IACI,cAAc,CAAC,OAAO,EAAE,kBAAkB,GAAG,IAAI;IAiBxD;;;;;;;;;;;;;;;;;;;OAmBG;IACU,cAAc,IAAI,OAAO,CAAC,IAAI,CAAC;IAQ5C;;;;;;;;;;;;;;;;;;;OAmBG;IACU,eAAe,IAAI,OAAO,CAAC,IAAI,CAAC;IAQ7C;;;;;;;;;;;;OAYG;IACU,aAAa,IAAI,OAAO,CAAC,IAAI,CAAC;IAQ3C;;;;;;;;;;;;;;;;;OAiBG;IACU,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;IAS/C;;;;;;;;OAQG;IACU,uBAAuB,CAAC,QAAQ,CAAC,EAAE,aAAa,GAAG,OAAO,CAAC,gBAAgB,EAAE,CAAC;IAW3F;;;;;;;;;;;;;;OAcG;WACiB,yBAAyB,IAAI,OAAO,CAAC,YAAY,EAAE,CAAC;IAOxE;;;;;;;OAOG;WACiB,yBAAyB,IAAI,OAAO,CAAC,sBAAsB,CAAC;IAOhF;;;;;;;OAOG;WACiB,6BAA6B,IAAI,OAAO,CAAC,sBAAsB,CAAC;IAOpF;;;;;;;OAOG;WACiB,uBAAuB,IAAI,OAAO,CAAC,6BAA6B,CAAC;IAOrF;;;;;;;OAOG;WACiB,2BAA2B,IAAI,OAAO,CAAC,6BAA6B,CAAC;IAUzF,OAAO,CAAC,OAAO;IAWf,OAAO,CAAC,aAAa;IAIrB,OAAO,CAAC,8CAA8C;IAOtD,gBAAgB;IAChB,OAAO,CAAC,4BAA4B;IAUpC,OAAO,CAAC,iBAAiB;IAMzB,OAAO,CAAC,mBAAmB;IAM3B,OAAO,CAAC,WAAW;IASnB,gBAAgB;IAChB,kBAAkB,IAAI,IAAI;IAa1B,gBAAgB;IACT,MAAM,IAAI,KAAK,CAAC,SAAS;CAiBjC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts b/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts
index 3c92771..bf2d4ec 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts
@@ -7,7 +7,7 @@ import type { PixelFormat } from './PixelFormat';
  * * `"wide-angle-camera"`: A built-in wide-angle camera. (focal length between 24mm and 35mm)
  * * `"telephoto-camera"`: A built-in camera device with a longer focal length than a wide-angle camera. (focal length between above 85mm)
  */
-export declare type PhysicalCameraDeviceType = 'ultra-wide-angle-camera' | 'wide-angle-camera' | 'telephoto-camera';
+export type PhysicalCameraDeviceType = 'ultra-wide-angle-camera' | 'wide-angle-camera' | 'telephoto-camera';
 /**
  * Indentifiers for a logical camera (Combinations of multiple physical cameras to create a single logical camera).
  *
@@ -15,7 +15,7 @@ export declare type PhysicalCameraDeviceType = 'ultra-wide-angle-camera' | 'wide
  * * `"dual-wide-camera"`: A device that consists of two cameras of fixed focal length, one ultrawide angle and one wide angle.
  * * `"triple-camera"`: A device that consists of three cameras of fixed focal length, one ultrawide angle, one wide angle, and one telephoto.
  */
-export declare type LogicalCameraDeviceType = 'dual-camera' | 'dual-wide-camera' | 'triple-camera';
+export type LogicalCameraDeviceType = 'dual-camera' | 'dual-wide-camera' | 'triple-camera';
 /**
  * Parses an array of physical device types into a single {@linkcode PhysicalCameraDeviceType} or {@linkcode LogicalCameraDeviceType}, depending what matches.
  * @method
@@ -43,7 +43,7 @@ export declare const parsePhysicalDeviceTypes: (physicalDeviceTypes: PhysicalCam
  *
  * > See ["Android Color Formats"](https://jbit.net/Android_Colors/) for more information.
  */
-export declare type ColorSpace = 'hlg-bt2020' | 'p3-d65' | 'srgb' | 'yuv' | 'jpeg' | 'jpeg-depth' | 'raw' | 'heic' | 'private' | 'depth-16' | 'unknown';
+export type ColorSpace = 'hlg-bt2020' | 'p3-d65' | 'srgb' | 'yuv' | 'jpeg' | 'jpeg-depth' | 'raw' | 'heic' | 'private' | 'depth-16' | 'unknown';
 /**
  * Indicates a format's autofocus system.
  *
@@ -51,7 +51,7 @@ export declare type ColorSpace = 'hlg-bt2020' | 'p3-d65' | 'srgb' | 'yuv' | 'jpe
  * * `"contrast-detection"`: Indicates that autofocus is achieved by contrast detection. Contrast detection performs a focus scan to find the optimal position
  * * `"phase-detection"`: Indicates that autofocus is achieved by phase detection. Phase detection has the ability to achieve focus in many cases without a focus scan. Phase detection autofocus is typically less visually intrusive than contrast detection autofocus
  */
-export declare type AutoFocusSystem = 'contrast-detection' | 'phase-detection' | 'none';
+export type AutoFocusSystem = 'contrast-detection' | 'phase-detection' | 'none';
 /**
  * Indicates a format's supported video stabilization mode
  *
@@ -61,7 +61,7 @@ export declare type AutoFocusSystem = 'contrast-detection' | 'phase-detection' |
  * * `"cinematic-extended"`: Indicates that the video should be stabilized using the extended cinematic stabilization algorithm. Enabling extended cinematic stabilization introduces longer latency into the video capture pipeline compared to the AVCaptureVideoStabilizationModeCinematic and consumes more memory, but yields improved stability. It is recommended to use identical or similar min and max frame durations in conjunction with this mode (iOS 13.0+)
  * * `"auto"`: Indicates that the most appropriate video stabilization mode for the device and format should be chosen automatically
  */
-export declare type VideoStabilizationMode = 'off' | 'standard' | 'cinematic' | 'cinematic-extended' | 'auto';
+export type VideoStabilizationMode = 'off' | 'standard' | 'cinematic' | 'cinematic-extended' | 'auto';
 export interface FrameRateRange {
     minFrameRate: number;
     maxFrameRate: number;
@@ -209,11 +209,11 @@ export interface CameraDevice {
     /**
      * All available formats for this camera device. Use this to find the best format for your use case and set it to the Camera's {@linkcode CameraProps.format | Camera's .format} property.
      *
-     * See [the Camera Formats documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/formats) for more information about Camera Formats.
+     * See [the Camera Formats documentation](https://react-native-vision-camera.com/docs/guides/formats) for more information about Camera Formats.
      */
     formats: CameraDeviceFormat[];
     /**
-     * Whether this camera device supports using Video Recordings (`video={true}`) and Frame Processors (`frameProcessor={...}`) at the same time. See ["The `supportsParallelVideoProcessing` prop"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) for more information.
+     * Whether this camera device supports using Video Recordings (`video={true}`) and Frame Processors (`frameProcessor={...}`) at the same time. See ["The `supportsParallelVideoProcessing` prop"](https://react-native-vision-camera.com/docs/guides/devices#the-supportsparallelvideoprocessing-prop) for more information.
      *
      * If this property is `false`, you can only enable `video` or add a `frameProcessor`, but not both.
      *
@@ -243,3 +243,4 @@ export interface CameraDevice {
      */
     supportsFocus: boolean;
 }
+//# sourceMappingURL=CameraDevice.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts.map
new file mode 100644
index 0000000..d374853
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraDevice.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"CameraDevice.d.ts","sourceRoot":"","sources":["../../src/CameraDevice.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts b/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts
index a58581f..0ef8125 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts
@@ -1,12 +1,12 @@
-export declare type PermissionError = 'permission/microphone-permission-denied' | 'permission/camera-permission-denied';
-export declare type ParameterError = 'parameter/invalid-parameter' | 'parameter/unsupported-os' | 'parameter/unsupported-output' | 'parameter/unsupported-input' | 'parameter/invalid-combination';
-export declare type DeviceError = 'device/configuration-error' | 'device/no-device' | 'device/invalid-device' | 'device/parallel-video-processing-not-supported' | 'device/torch-unavailable' | 'device/microphone-unavailable' | 'device/low-light-boost-not-supported' | 'device/focus-not-supported' | 'device/camera-not-available-on-simulator';
-export declare type FrameProcessorError = 'frame-processor/unavailable';
-export declare type FormatError = 'format/invalid-fps' | 'format/invalid-hdr' | 'format/invalid-low-light-boost' | 'format/invalid-format' | 'format/invalid-color-space' | 'format/invalid-preset';
-export declare type SessionError = 'session/camera-not-ready' | 'session/audio-session-setup-failed' | 'session/audio-in-use-by-other-app' | 'session/audio-session-failed-to-activate';
-export declare type CaptureError = 'capture/invalid-photo-format' | 'capture/encoder-error' | 'capture/muxer-error' | 'capture/recording-in-progress' | 'capture/no-recording-in-progress' | 'capture/file-io-error' | 'capture/create-temp-file-error' | 'capture/invalid-video-options' | 'capture/create-recorder-error' | 'capture/recorder-error' | 'capture/no-valid-data' | 'capture/inactive-source' | 'capture/insufficient-storage' | 'capture/file-size-limit-reached' | 'capture/invalid-photo-codec' | 'capture/not-bound-error' | 'capture/capture-type-not-supported' | 'capture/video-not-enabled' | 'capture/photo-not-enabled' | 'capture/aborted' | 'capture/unknown';
-export declare type SystemError = 'system/no-camera-manager' | 'system/view-not-found';
-export declare type UnknownError = 'unknown/unknown';
+export type PermissionError = 'permission/microphone-permission-denied' | 'permission/camera-permission-denied';
+export type ParameterError = 'parameter/invalid-parameter' | 'parameter/unsupported-os' | 'parameter/unsupported-output' | 'parameter/unsupported-input' | 'parameter/invalid-combination';
+export type DeviceError = 'device/configuration-error' | 'device/no-device' | 'device/invalid-device' | 'device/parallel-video-processing-not-supported' | 'device/torch-unavailable' | 'device/microphone-unavailable' | 'device/low-light-boost-not-supported' | 'device/focus-not-supported' | 'device/camera-not-available-on-simulator';
+export type FrameProcessorError = 'frame-processor/unavailable';
+export type FormatError = 'format/invalid-fps' | 'format/invalid-hdr' | 'format/invalid-low-light-boost' | 'format/invalid-format' | 'format/invalid-color-space' | 'format/invalid-preset';
+export type SessionError = 'session/camera-not-ready' | 'session/audio-session-setup-failed' | 'session/audio-in-use-by-other-app' | 'session/audio-session-failed-to-activate';
+export type CaptureError = 'capture/invalid-photo-format' | 'capture/encoder-error' | 'capture/muxer-error' | 'capture/recording-in-progress' | 'capture/no-recording-in-progress' | 'capture/file-io-error' | 'capture/create-temp-file-error' | 'capture/invalid-video-options' | 'capture/create-recorder-error' | 'capture/recorder-error' | 'capture/no-valid-data' | 'capture/inactive-source' | 'capture/insufficient-storage' | 'capture/file-size-limit-reached' | 'capture/invalid-photo-codec' | 'capture/not-bound-error' | 'capture/capture-type-not-supported' | 'capture/video-not-enabled' | 'capture/photo-not-enabled' | 'capture/aborted' | 'capture/unknown';
+export type SystemError = 'system/no-camera-manager' | 'system/view-not-found';
+export type UnknownError = 'unknown/unknown';
 /**
  * Represents a JSON-style error cause. This contains native `NSError`/`Throwable` information, and can have recursive {@linkcode ErrorWithCause.cause | .cause} properties until the ultimate cause has been found.
  */
@@ -54,7 +54,7 @@ export interface ErrorWithCause {
      */
     cause?: ErrorWithCause;
 }
-declare type CameraErrorCode = PermissionError | ParameterError | DeviceError | FrameProcessorError | FormatError | SessionError | CaptureError | SystemError | UnknownError;
+type CameraErrorCode = PermissionError | ParameterError | DeviceError | FrameProcessorError | FormatError | SessionError | CaptureError | SystemError | UnknownError;
 /**
  * Represents any kind of error that occured in the {@linkcode Camera} View Module.
  */
@@ -74,14 +74,14 @@ declare class CameraError<TCode extends CameraErrorCode> extends Error {
 /**
  * Represents any kind of error that occured while trying to capture a video or photo.
  *
- * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
  */
 export declare class CameraCaptureError extends CameraError<CaptureError> {
 }
 /**
  * Represents any kind of error that occured in the Camera View Module.
  *
- * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
  */
 export declare class CameraRuntimeError extends CameraError<PermissionError | ParameterError | DeviceError | FormatError | FrameProcessorError | SessionError | SystemError | UnknownError> {
 }
@@ -99,3 +99,4 @@ export declare const isErrorWithCause: (error: unknown) => error is ErrorWithCau
  */
 export declare const tryParseNativeCameraError: <T>(nativeError: T) => CameraCaptureError | CameraRuntimeError | T;
 export {};
+//# sourceMappingURL=CameraError.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts.map
new file mode 100644
index 0000000..edbe61e
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraError.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"CameraError.d.ts","sourceRoot":"","sources":["../../src/CameraError.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts b/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts
index c020140..60f25d6 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts
@@ -10,4 +10,5 @@
  * #### Android only
  * * `"external"`: The camera device is an external camera, and has no fixed facing relative to the device's screen. (Android only)
  */
-export declare type CameraPosition = 'front' | 'back' | 'unspecified' | 'external';
+export type CameraPosition = 'front' | 'back' | 'unspecified' | 'external';
+//# sourceMappingURL=CameraPosition.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts.map
new file mode 100644
index 0000000..b7c445c
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraPosition.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"CameraPosition.d.ts","sourceRoot":"","sources":["../../src/CameraPosition.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;GAWG;AACH,MAAM,MAAM,cAAc,GAAG,OAAO,GAAG,MAAM,GAAG,aAAa,GAAG,UAAU,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts b/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts
index 79719d9..eebafc2 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts
@@ -14,4 +14,5 @@
  * * `"photo"`: Specifies capture settings suitable for high-resolution photo quality output.
  * * `"vga-640x480"`: Specifies capture settings suitable for VGA quality (640 x 480 pixel) video output.
  */
-export declare type CameraPreset = 'cif-352x288' | 'hd-1280x720' | 'hd-1920x1080' | 'hd-3840x2160' | 'high' | 'iframe-1280x720' | 'iframe-960x540' | 'input-priority' | 'low' | 'medium' | 'photo' | 'vga-640x480';
+export type CameraPreset = 'cif-352x288' | 'hd-1280x720' | 'hd-1920x1080' | 'hd-3840x2160' | 'high' | 'iframe-1280x720' | 'iframe-960x540' | 'input-priority' | 'low' | 'medium' | 'photo' | 'vga-640x480';
+//# sourceMappingURL=CameraPreset.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts.map
new file mode 100644
index 0000000..799e2f0
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraPreset.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"CameraPreset.d.ts","sourceRoot":"","sources":["../../src/CameraPreset.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AACH,MAAM,MAAM,YAAY,GACpB,aAAa,GACb,aAAa,GACb,cAAc,GACd,cAAc,GACd,MAAM,GACN,iBAAiB,GACjB,gBAAgB,GAChB,gBAAgB,GAChB,KAAK,GACL,QAAQ,GACR,OAAO,GACP,aAAa,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts b/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts
index 85f1585..324af69 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts
@@ -11,7 +11,7 @@ export interface CameraProps extends ViewProps {
     /**
      * The Camera Device to use.
      *
-     * See the [Camera Devices](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices) section in the documentation for more information about Camera Devices.
+     * See the [Camera Devices](https://react-native-vision-camera.com/docs/guides/devices) section in the documentation for more information about Camera Devices.
      *
      * @example
      * ```tsx
@@ -29,7 +29,7 @@ export interface CameraProps extends ViewProps {
      */
     device: CameraDevice;
     /**
-     * Whether the Camera should actively stream video frames, or not. See the [documentation about the `isActive` prop](https://mrousavy.github.io/react-native-vision-camera/docs/guides/lifecycle#the-isactive-prop) for more information.
+     * Whether the Camera should actively stream video frames, or not. See the [documentation about the `isActive` prop](https://react-native-vision-camera.com/docs/guides/lifecycle#the-isactive-prop) for more information.
      *
      * This can be compared to a Video component, where `isActive` specifies whether the video is paused or not.
      *
@@ -37,17 +37,17 @@ export interface CameraProps extends ViewProps {
      */
     isActive: boolean;
     /**
-     * Enables **photo capture** with the `takePhoto` function (see ["Taking Photos"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/capturing#taking-photos))
+     * Enables **photo capture** with the `takePhoto` function (see ["Taking Photos"](https://react-native-vision-camera.com/docs/guides/capturing#taking-photos))
      */
     photo?: boolean;
     /**
-     * Enables **video capture** with the `startRecording` function (see ["Recording Videos"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/capturing/#recording-videos))
+     * Enables **video capture** with the `startRecording` function (see ["Recording Videos"](https://react-native-vision-camera.com/docs/guides/capturing/#recording-videos))
      *
-     * Note: If you want to use `video` and `frameProcessor` simultaneously, make sure [`supportsParallelVideoProcessing`](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) is `true`.
+     * Note: If you want to use `video` and `frameProcessor` simultaneously, make sure [`supportsParallelVideoProcessing`](https://react-native-vision-camera.com/docs/guides/devices#the-supportsparallelvideoprocessing-prop) is `true`.
      */
     video?: boolean;
     /**
-     * Enables **audio capture** for video recordings (see ["Recording Videos"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/capturing/#recording-videos))
+     * Enables **audio capture** for video recordings (see ["Recording Videos"](https://react-native-vision-camera.com/docs/guides/capturing/#recording-videos))
      */
     audio?: boolean;
     /**
@@ -73,7 +73,7 @@ export interface CameraProps extends ViewProps {
     /**
      * Enables or disables the native pinch to zoom gesture.
      *
-     * If you want to implement a custom zoom gesture, see [the Zooming with Reanimated documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/animated).
+     * If you want to implement a custom zoom gesture, see [the Zooming with Reanimated documentation](https://react-native-vision-camera.com/docs/guides/animated).
      *
      * @default false
      */
@@ -163,9 +163,9 @@ export interface CameraProps extends ViewProps {
     /**
      * A worklet which will be called for every frame the Camera "sees". Throttle the Frame Processor's frame rate with {@linkcode frameProcessorFps}.
      *
-     * > See [the Frame Processors documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors) for more information
+     * > See [the Frame Processors documentation](https://react-native-vision-camera.com/docs/guides/frame-processors) for more information
      *
-     * Note: If you want to use `video` and `frameProcessor` simultaneously, make sure [`supportsParallelVideoProcessing`](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) is `true`.
+     * Note: If you want to use `video` and `frameProcessor` simultaneously, make sure [`supportsParallelVideoProcessing`](https://react-native-vision-camera.com/docs/guides/devices#the-supportsparallelvideoprocessing-prop) is `true`.
      *
      * @example
      * ```tsx
@@ -195,3 +195,4 @@ export interface CameraProps extends ViewProps {
      */
     frameProcessorFps?: number | 'auto';
 }
+//# sourceMappingURL=CameraProps.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts.map
new file mode 100644
index 0000000..f1bb0ca
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/CameraProps.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"CameraProps.d.ts","sourceRoot":"","sources":["../../src/CameraProps.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AAC9C,OAAO,KAAK,EAAE,YAAY,EAAE,kBAAkB,EAAE,UAAU,EAAE,sBAAsB,EAAE,MAAM,gBAAgB,CAAC;AAC3G,OAAO,KAAK,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AACxD,OAAO,KAAK,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AACnD,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAErC,MAAM,WAAW,mCAAmC;IAClD,IAAI,EAAE,oBAAoB,GAAG,sBAAsB,CAAC;IACpD,0BAA0B,EAAE,MAAM,CAAC;CACpC;AAED,MAAM,WAAW,WAAY,SAAQ,SAAS;IAC5C;;;;;;;;;;;;;;;;;;OAkBG;IACH,MAAM,EAAE,YAAY,CAAC;IACrB;;;;;;OAMG;IACH,QAAQ,EAAE,OAAO,CAAC;IAGlB;;OAEG;IACH,KAAK,CAAC,EAAE,OAAO,CAAC;IAChB;;;;OAIG;IACH,KAAK,CAAC,EAAE,OAAO,CAAC;IAChB;;OAEG;IACH,KAAK,CAAC,EAAE,OAAO,CAAC;IAIhB;;;;;;OAMG;IACH,KAAK,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC;IACrB;;;;;;;;;;OAUG;IACH,IAAI,CAAC,EAAE,MAAM,CAAC;IACd;;;;;;OAMG;IACH,iBAAiB,CAAC,EAAE,OAAO,CAAC;IAI5B;;OAEG;IACH,MAAM,CAAC,EAAE,YAAY,CAAC;IACtB;;OAEG;IACH,MAAM,CAAC,EAAE,kBAAkB,CAAC;IAC5B;;;;OAIG;IACH,GAAG,CAAC,EAAE,MAAM,CAAC;IACb;;;;OAIG;IACH,GAAG,CAAC,EAAE,OAAO,CAAC;IACd;;;;OAIG;IACH,aAAa,CAAC,EAAE,OAAO,CAAC;IACxB;;;;OAIG;IACH,UAAU,CAAC,EAAE,UAAU,CAAC;IACxB;;;;;OAKG;IACH,sBAAsB,CAAC,EAAE,sBAAsB,CAAC;IAGhD;;;;OAIG;IACH,eAAe,CAAC,EAAE,OAAO,CAAC;IAC1B;;;;;;;OAOG;IACH,kCAAkC,CAAC,EAAE,OAAO,CAAC;IAC7C;;;;;;;;;;OAUG;IACH,uBAAuB,CAAC,EAAE,OAAO,CAAC;IAClC;;OAEG;IACH,WAAW,CAAC,EAAE,UAAU,GAAG,oBAAoB,GAAG,eAAe,GAAG,gBAAgB,CAAC;IAGrF;;OAEG;IACH,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,kBAAkB,KAAK,IAAI,CAAC;IAC9C;;OAEG;IACH,aAAa,CAAC,EAAE,MAAM,IAAI,CAAC;IAC3B;;OAEG;IACH,8CAA8C,CAAC,EAAE,CAAC,UAAU,EAAE,mCAAmC,KAAK,IAAI,CAAC;IAC3G;;;;;;;;;;;;;;;;;OAiBG;IACH,cAAc,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC;IACxC;;;;;;;;;;;;;OAaG;IACH,iBAAiB,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC;CAErC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts b/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts
index 5f9007b..8386de1 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts
@@ -46,3 +46,4 @@ export interface Frame {
      */
     close(): void;
 }
+//# sourceMappingURL=Frame.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts.map
new file mode 100644
index 0000000..47f1dd5
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/Frame.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Frame.d.ts","sourceRoot":"","sources":["../../src/Frame.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,WAAW,KAAK;IACpB;;OAEG;IACH,OAAO,EAAE,OAAO,CAAC;IACjB;;OAEG;IACH,KAAK,EAAE,MAAM,CAAC;IACd;;OAEG;IACH,MAAM,EAAE,MAAM,CAAC;IACf;;OAEG;IACH,WAAW,EAAE,MAAM,CAAC;IACpB;;OAEG;IACH,WAAW,EAAE,MAAM,CAAC;IAEpB;;;;;;OAMG;IACH,QAAQ,IAAI,MAAM,CAAC;IACnB;;;;;;;;;;;;;OAaG;IACH,KAAK,IAAI,IAAI,CAAC;CACf"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/FrameProcessorContext.d.ts b/node_modules/react-native-vision-camera/lib/typescript/FrameProcessorContext.d.ts
new file mode 100644
index 0000000..31da8cb
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/FrameProcessorContext.d.ts
@@ -0,0 +1,5 @@
+export declare const FrameProcessorContext: {
+    workletRuntime: any;
+    createWorklet: () => never;
+};
+//# sourceMappingURL=FrameProcessorContext.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/FrameProcessorContext.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/FrameProcessorContext.d.ts.map
new file mode 100644
index 0000000..aca3abc
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/FrameProcessorContext.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"FrameProcessorContext.d.ts","sourceRoot":"","sources":["../../src/FrameProcessorContext.ts"],"names":[],"mappings":"AAgBA,eAAO,MAAM,qBAAqB;;;CAGjC,CAAA"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts b/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts
index 007b7b7..b0c1d21 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts
@@ -126,3 +126,4 @@ export interface PhotoFile extends TemporaryFile {
         };
     };
 }
+//# sourceMappingURL=PhotoFile.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts.map
new file mode 100644
index 0000000..349b5f4
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/PhotoFile.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PhotoFile.d.ts","sourceRoot":"","sources":["../../src/PhotoFile.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAErD,MAAM,WAAW,gBAAgB;IAC/B;;;;;;;;;OASG;IACH,qBAAqB,CAAC,EAAE,SAAS,GAAG,UAAU,GAAG,OAAO,CAAC;IACzD;;;;OAIG;IACH,KAAK,CAAC,EAAE,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC;IAC9B;;;;OAIG;IACH,yBAAyB,CAAC,EAAE,OAAO,CAAC;IACpC;;;;OAIG;IACH,uBAAuB,CAAC,EAAE,OAAO,CAAC;IAClC;;;;OAIG;IACH,8BAA8B,CAAC,EAAE,OAAO,CAAC;IACzC;;;;;;;;OAQG;IACH,YAAY,CAAC,EAAE,OAAO,CAAC;CACxB;AAED;;;;GAIG;AACH,MAAM,WAAW,SAAU,SAAQ,aAAa;IAC9C,KAAK,EAAE,MAAM,CAAC;IACd,MAAM,EAAE,MAAM,CAAC;IACf,UAAU,EAAE,OAAO,CAAC;IACpB,SAAS,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACpC;;;;;OAKG;IACH,QAAQ,EAAE;QACR,WAAW,EAAE,MAAM,CAAC;QACpB;;WAEG;QACH,SAAS,EAAE,MAAM,CAAC;QAClB;;WAEG;QACH,QAAQ,EAAE,MAAM,CAAC;QACjB;;;;WAIG;QACH,cAAc,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACzC,QAAQ,EAAE;YACR,cAAc,EAAE,MAAM,CAAC;YACvB,QAAQ,EAAE,MAAM,CAAC;YACjB,IAAI,EAAE,MAAM,CAAC;YACb,QAAQ,EAAE,MAAM,CAAC;YACjB,WAAW,EAAE,MAAM,CAAC;YACpB;;eAEG;YACH,YAAY,CAAC,EAAE,MAAM,CAAC;YACtB,KAAK,EAAE,MAAM,CAAC;YACd,WAAW,EAAE,MAAM,CAAC;SACrB,CAAC;QACF,QAAQ,EAAE;YACR,gBAAgB,EAAE,MAAM,CAAC;YACzB,YAAY,EAAE,MAAM,CAAC;YACrB,OAAO,EAAE,MAAM,CAAC;YAChB,iBAAiB,EAAE,MAAM,EAAE,CAAC;YAC5B,iBAAiB,EAAE,MAAM,CAAC;YAC1B,UAAU,EAAE,MAAM,CAAC;YACnB,kBAAkB,EAAE,MAAM,CAAC;YAC3B,eAAe,EAAE,MAAM,CAAC;YACxB,YAAY,EAAE,MAAM,CAAC;YACrB,SAAS,EAAE,MAAM,CAAC;YAClB,SAAS,EAAE,MAAM,CAAC;YAClB,eAAe,EAAE,MAAM,CAAC;YACxB,iBAAiB,EAAE,MAAM,CAAC;YAC1B,aAAa,EAAE,MAAM,CAAC;YACtB,WAAW,EAAE,MAAM,EAAE,CAAC;YACtB,aAAa,EAAE,MAAM,CAAC;YACtB,mBAAmB,EAAE,MAAM,CAAC;YAC5B,WAAW,EAAE,MAAM,CAAC;YACpB,QAAQ,EAAE,MAAM,CAAC;YACjB,kBAAkB,EAAE,MAAM,CAAC;YAC3B,mBAAmB,EAAE,MAAM,CAAC;YAC5B,eAAe,EAAE,MAAM,CAAC;YACxB,eAAe,EAAE,MAAM,EAAE,CAAC;YAC1B,YAAY,EAAE,MAAM,CAAC;YACrB,iBAAiB,EAAE,MAAM,CAAC;YAC1B,kBAAkB,EAAE,MAAM,CAAC;YAC3B,WAAW,EAAE,MAAM,CAAC;YACpB,UAAU,EAAE,MAAM,CAAC;YACnB,KAAK,EAAE,MAAM,CAAC;YACd,eAAe,EAAE,MAAM,CAAC;YACxB,YAAY,EAAE,MAAM,CAAC;SACtB,CAAC;KACH,CAAC;CACH"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts b/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts
index bb7da34..a75cfc0 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts
@@ -4,4 +4,5 @@
  * * `420f`: 420 YpCbCr 8 Bi-Planar Full Range
  * * `x420`: 420 YpCbCr 10 Bi-Planar Video Range
  */
-export declare type PixelFormat = '420f' | '420v' | 'x420';
+export type PixelFormat = '420f' | '420v' | 'x420';
+//# sourceMappingURL=PixelFormat.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts.map
new file mode 100644
index 0000000..b54164b
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/PixelFormat.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"PixelFormat.d.ts","sourceRoot":"","sources":["../../src/PixelFormat.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,MAAM,MAAM,WAAW,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts b/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts
index c724212..3459139 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts
@@ -11,3 +11,4 @@ export interface Point {
      */
     y: number;
 }
+//# sourceMappingURL=Point.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts.map
new file mode 100644
index 0000000..e2485b8
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/Point.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Point.d.ts","sourceRoot":"","sources":["../../src/Point.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,WAAW,KAAK;IACpB;;OAEG;IACH,CAAC,EAAE,MAAM,CAAC;IACV;;OAEG;IACH,CAAC,EAAE,MAAM,CAAC;CACX"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts b/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts
index 5c39924..2d3da19 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts
@@ -24,3 +24,4 @@ export interface TakeSnapshotOptions {
      */
     skipMetadata?: boolean;
 }
+//# sourceMappingURL=Snapshot.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts.map
new file mode 100644
index 0000000..da509b3
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/Snapshot.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"Snapshot.d.ts","sourceRoot":"","sources":["../../src/Snapshot.ts"],"names":[],"mappings":"AAAA,MAAM,WAAW,mBAAmB;IAClC;;;;;;OAMG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;IAEjB;;;;OAIG;IACH,KAAK,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC;IAErB;;;;;;;;OAQG;IACH,YAAY,CAAC,EAAE,OAAO,CAAC;CACxB"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts b/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts
index a74a918..9e5d9c4 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts
@@ -11,3 +11,4 @@ export interface TemporaryFile {
      */
     path: string;
 }
+//# sourceMappingURL=TemporaryFile.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts.map
new file mode 100644
index 0000000..7d2ec37
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/TemporaryFile.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"TemporaryFile.d.ts","sourceRoot":"","sources":["../../src/TemporaryFile.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,WAAW,aAAa;IAC5B;;;;;;OAMG;IACH,IAAI,EAAE,MAAM,CAAC;CACd"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts b/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts
index da8aba0..44968fc 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts
@@ -1,7 +1,7 @@
 import type { CameraCaptureError } from './CameraError';
 import type { TemporaryFile } from './TemporaryFile';
-export declare type VideoFileType = 'mov' | 'avci' | 'm4v' | 'mp4';
-export declare type CameraVideoCodec = 'h264' | 'hevc' | 'hevc-alpha' | 'jpeg' | 'pro-res-4444' | 'pro-res-422' | 'pro-res-422-hq' | 'pro-res-422-lt' | 'pro-res-422-proxy';
+export type VideoFileType = 'mov' | 'avci' | 'm4v' | 'mp4';
+export type CameraVideoCodec = 'h264' | 'hevc' | 'hevc-alpha' | 'jpeg' | 'pro-res-4444' | 'pro-res-422' | 'pro-res-422-hq' | 'pro-res-422-lt' | 'pro-res-422-proxy';
 export interface RecordVideoOptions {
     /**
      * Set the video flash mode. Natively, this just enables the torch while recording.
@@ -40,3 +40,4 @@ export interface VideoFile extends TemporaryFile {
      */
     duration: number;
 }
+//# sourceMappingURL=VideoFile.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts.map
new file mode 100644
index 0000000..65acb0f
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/VideoFile.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"VideoFile.d.ts","sourceRoot":"","sources":["../../src/VideoFile.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AACxD,OAAO,KAAK,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAErD,MAAM,MAAM,aAAa,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,KAAK,CAAC;AAE3D,MAAM,MAAM,gBAAgB,GACxB,MAAM,GACN,MAAM,GACN,YAAY,GACZ,MAAM,GACN,cAAc,GACd,aAAa,GACb,gBAAgB,GAChB,gBAAgB,GAChB,mBAAmB,CAAC;AAExB,MAAM,WAAW,kBAAkB;IACjC;;OAEG;IACH,KAAK,CAAC,EAAE,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC;IAC9B;;;OAGG;IACH,QAAQ,CAAC,EAAE,aAAa,CAAC;IACzB;;OAEG;IACH,gBAAgB,EAAE,CAAC,KAAK,EAAE,kBAAkB,KAAK,IAAI,CAAC;IACtD;;OAEG;IACH,mBAAmB,EAAE,CAAC,KAAK,EAAE,SAAS,KAAK,IAAI,CAAC;IAChD;;;;;;OAMG;IACH,UAAU,CAAC,EAAE,gBAAgB,CAAC;CAC/B;AAED;;;;GAIG;AACH,MAAM,WAAW,SAAU,SAAQ,aAAa;IAC9C;;OAEG;IACH,QAAQ,EAAE,MAAM,CAAC;CAClB"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts
index b4809b8..609ef57 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts
@@ -4,3 +4,4 @@ import { ConfigPlugin } from '@expo/config-plugins';
  * This is used to disable frame processors if you don't need it for android.
  */
 export declare const withDisableFrameProcessorsAndroid: ConfigPlugin;
+//# sourceMappingURL=withDisableFrameProcessorsAndroid.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts.map
new file mode 100644
index 0000000..d55f283
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsAndroid.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"withDisableFrameProcessorsAndroid.d.ts","sourceRoot":"","sources":["../../../src/expo-plugin/withDisableFrameProcessorsAndroid.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAwB,MAAM,sBAAsB,CAAC;AAE1E;;;GAGG;AACH,eAAO,MAAM,iCAAiC,EAAE,YAgB/C,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts
index d1799bf..944505e 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts
@@ -4,3 +4,4 @@ import { ConfigPlugin } from '@expo/config-plugins';
  * This is used to disable frame processors if you don't need it on iOS. (will save CPU and Memory)
  */
 export declare const withDisableFrameProcessorsIOS: ConfigPlugin;
+//# sourceMappingURL=withDisableFrameProcessorsIOS.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts.map
new file mode 100644
index 0000000..142dc4d
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withDisableFrameProcessorsIOS.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"withDisableFrameProcessorsIOS.d.ts","sourceRoot":"","sources":["../../../src/expo-plugin/withDisableFrameProcessorsIOS.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAkC,MAAM,sBAAsB,CAAC;AAEpF;;;GAGG;AACH,eAAO,MAAM,6BAA6B,EAAE,YAoB3C,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts
index e638b16..8f8c53f 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts
@@ -1,5 +1,5 @@
 import { ConfigPlugin } from '@expo/config-plugins';
-declare type Props = {
+type Props = {
     cameraPermissionText?: string;
     enableMicrophonePermission?: boolean;
     microphonePermissionText?: string;
@@ -7,3 +7,4 @@ declare type Props = {
 };
 declare const _default: ConfigPlugin<Props>;
 export default _default;
+//# sourceMappingURL=withVisionCamera.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts.map
new file mode 100644
index 0000000..3487303
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/expo-plugin/withVisionCamera.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"withVisionCamera.d.ts","sourceRoot":"","sources":["../../../src/expo-plugin/withVisionCamera.ts"],"names":[],"mappings":"AAAA,OAAO,EAA8B,YAAY,EAAuB,MAAM,sBAAsB,CAAC;AASrG,KAAK,KAAK,GAAG;IACX,oBAAoB,CAAC,EAAE,MAAM,CAAC;IAC9B,0BAA0B,CAAC,EAAE,OAAO,CAAC;IACrC,wBAAwB,CAAC,EAAE,MAAM,CAAC;IAClC,sBAAsB,CAAC,EAAE,OAAO,CAAC;CAClC,CAAC;;AAsBF,wBAAsE"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts
index d0febeb..ad12c46 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts
@@ -1,6 +1,6 @@
 import type { CameraPosition } from '../CameraPosition';
 import { CameraDevice, LogicalCameraDeviceType, PhysicalCameraDeviceType } from '../CameraDevice';
-export declare type CameraDevices = {
+export type CameraDevices = {
     [key in CameraPosition]: CameraDevice | undefined;
 };
 /**
@@ -30,3 +30,4 @@ export declare function useCameraDevices(): CameraDevices;
  * ```
  */
 export declare function useCameraDevices(deviceType: PhysicalCameraDeviceType | LogicalCameraDeviceType): CameraDevices;
+//# sourceMappingURL=useCameraDevices.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts.map
new file mode 100644
index 0000000..bfb1749
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraDevices.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"useCameraDevices.d.ts","sourceRoot":"","sources":["../../../src/hooks/useCameraDevices.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAGxD,OAAO,EAAE,YAAY,EAAE,uBAAuB,EAA4B,wBAAwB,EAAE,MAAM,iBAAiB,CAAC;AAE5H,MAAM,MAAM,aAAa,GAAG;KACzB,GAAG,IAAI,cAAc,GAAG,YAAY,GAAG,SAAS;CAClD,CAAC;AAQF;;;;;;;;;;;GAWG;AACH,wBAAgB,gBAAgB,IAAI,aAAa,CAAC;AAElD;;;;;;;;;;;;GAYG;AACH,wBAAgB,gBAAgB,CAAC,UAAU,EAAE,wBAAwB,GAAG,uBAAuB,GAAG,aAAa,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts
index dad9124..1020363 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts
@@ -9,3 +9,4 @@ import type { CameraDevice, CameraDeviceFormat } from '../CameraDevice';
  * @returns The best matching format for the given camera device, or `undefined` if the camera device is `undefined`.
  */
 export declare function useCameraFormat(device?: CameraDevice): CameraDeviceFormat | undefined;
+//# sourceMappingURL=useCameraFormat.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts.map
new file mode 100644
index 0000000..5c381ff
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/hooks/useCameraFormat.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"useCameraFormat.d.ts","sourceRoot":"","sources":["../../../src/hooks/useCameraFormat.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,YAAY,EAAE,kBAAkB,EAAE,MAAM,iBAAiB,CAAC;AAGxE;;;;;;;;GAQG;AACH,wBAAgB,eAAe,CAAC,MAAM,CAAC,EAAE,YAAY,GAAG,kBAAkB,GAAG,SAAS,CAErF"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts b/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts
index 3983383..4825dd3 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts
@@ -1,8 +1,8 @@
 import { DependencyList } from 'react';
 import type { Frame } from '../Frame';
-declare type FrameProcessor = (frame: Frame) => void;
+type FrameProcessor = (frame: Frame) => void;
 /**
- * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors))
+ * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://react-native-vision-camera.com/docs/guides/frame-processors))
  *
  * Make sure to add the `'worklet'` directive to the top of the Frame Processor function, otherwise it will not get compiled into a worklet.
  *
@@ -20,3 +20,4 @@ declare type FrameProcessor = (frame: Frame) => void;
  */
 export declare function useFrameProcessor(frameProcessor: FrameProcessor, dependencies: DependencyList): FrameProcessor;
 export {};
+//# sourceMappingURL=useFrameProcessor.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts.map
new file mode 100644
index 0000000..1fdce07
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/hooks/useFrameProcessor.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"useFrameProcessor.d.ts","sourceRoot":"","sources":["../../../src/hooks/useFrameProcessor.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAe,MAAM,OAAO,CAAC;AACpD,OAAO,KAAK,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AAEtC,KAAK,cAAc,GAAG,CAAC,KAAK,EAAE,KAAK,KAAK,IAAI,CAAC;AAE7C;;;;;;;;;;;;;;;;GAgBG;AACH,wBAAgB,iBAAiB,CAAC,cAAc,EAAE,cAAc,EAAE,YAAY,EAAE,cAAc,GAAG,cAAc,CAM9G"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/index.d.ts b/node_modules/react-native-vision-camera/lib/typescript/index.d.ts
index 86fcbd9..40e1d02 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/index.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/index.d.ts
@@ -15,3 +15,4 @@ export * from './hooks/useCameraDevices';
 export * from './hooks/useCameraFormat';
 export * from './hooks/useFrameProcessor';
 export * from './utils/FormatFilter';
+//# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/index.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/index.d.ts.map
new file mode 100644
index 0000000..47c121c
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/index.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA,cAAc,UAAU,CAAC;AACzB,cAAc,gBAAgB,CAAC;AAC/B,cAAc,eAAe,CAAC;AAC9B,cAAc,kBAAkB,CAAC;AACjC,cAAc,gBAAgB,CAAC;AAC/B,cAAc,eAAe,CAAC;AAC9B,cAAc,SAAS,CAAC;AACxB,cAAc,eAAe,CAAC;AAC9B,cAAc,aAAa,CAAC;AAC5B,cAAc,SAAS,CAAC;AACxB,cAAc,YAAY,CAAC;AAC3B,cAAc,iBAAiB,CAAC;AAChC,cAAc,aAAa,CAAC;AAE5B,cAAc,0BAA0B,CAAC;AACzC,cAAc,yBAAyB,CAAC;AACxC,cAAc,2BAA2B,CAAC;AAE1C,cAAc,sBAAsB,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts b/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts
index 4bc1dd1..55597e0 100644
--- a/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts
+++ b/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts
@@ -33,3 +33,4 @@ export declare const sortFormats: (left: CameraDeviceFormat, right: CameraDevice
  * @method
  */
 export declare const frameRateIncluded: (range: FrameRateRange, fps: number) => boolean;
+//# sourceMappingURL=FormatFilter.d.ts.map
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts.map b/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts.map
new file mode 100644
index 0000000..2d420c4
--- /dev/null
+++ b/node_modules/react-native-vision-camera/lib/typescript/utils/FormatFilter.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"FormatFilter.d.ts","sourceRoot":"","sources":["../../../src/utils/FormatFilter.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,EAAE,YAAY,EAAE,kBAAkB,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAExF;;;;;;;;;;;;;GAaG;AACH,eAAO,MAAM,WAAW,SAAU,YAAY,SAAS,YAAY,KAAG,MAmBrE,CAAC;AAQF;;;;GAIG;AACH,eAAO,MAAM,WAAW,SAAU,kBAAkB,SAAS,kBAAkB,KAAG,MAqBjF,CAAC;AAEF;;;;;;;;;;;GAWG;AACH,eAAO,MAAM,iBAAiB,UAAW,cAAc,OAAO,MAAM,KAAG,OAAiE,CAAC"}
\ No newline at end of file
diff --git a/node_modules/react-native-vision-camera/src/Camera.tsx b/node_modules/react-native-vision-camera/src/Camera.tsx
index 68417ac..df2480c 100644
--- a/node_modules/react-native-vision-camera/src/Camera.tsx
+++ b/node_modules/react-native-vision-camera/src/Camera.tsx
@@ -10,6 +10,7 @@ import type { PhotoFile, TakePhotoOptions } from './PhotoFile';
 import type { Point } from './Point';
 import type { TakeSnapshotOptions } from './Snapshot';
 import type { CameraVideoCodec, RecordVideoOptions, VideoFile } from './VideoFile';
+import { FrameProcessorContext } from './FrameProcessorContext';
 
 //#region Types
 export type CameraPermissionStatus = 'authorized' | 'not-determined' | 'denied' | 'restricted';
@@ -44,7 +45,7 @@ if (CameraModule == null) console.error("Camera: Native Module 'CameraView' was
 /**
  * ### A powerful `<Camera>` component.
  *
- * Read the [VisionCamera documentation](https://mrousavy.github.io/react-native-vision-camera/) for more information.
+ * Read the [VisionCamera documentation](https://react-native-vision-camera.com/) for more information.
  *
  * The `<Camera>` component's most important (and therefore _required_) properties are:
  *
@@ -428,7 +429,7 @@ export class Camera extends React.PureComponent<CameraProps> {
     if (global.setFrameProcessor == null || global.unsetFrameProcessor == null) {
       throw new CameraRuntimeError(
         'frame-processor/unavailable',
-        'Frame Processors are not enabled. See https://mrousavy.github.io/react-native-vision-camera/docs/guides/troubleshooting',
+        'Frame Processors are not enabled. See https://react-native-vision-camera.com/docs/guides/troubleshooting',
       );
     }
   }
@@ -436,7 +437,7 @@ export class Camera extends React.PureComponent<CameraProps> {
   private setFrameProcessor(frameProcessor: (frame: Frame) => void): void {
     this.assertFrameProcessorsEnabled();
     // @ts-expect-error JSI functions aren't typed
-    global.setFrameProcessor(this.handle, frameProcessor);
+    global.setFrameProcessor(this.handle, FrameProcessorContext.createWorklet(frameProcessor), FrameProcessorContext.workletRuntime);
   }
 
   private unsetFrameProcessor(): void {
diff --git a/node_modules/react-native-vision-camera/src/CameraDevice.ts b/node_modules/react-native-vision-camera/src/CameraDevice.ts
index 2e2c766..b52ae7b 100644
--- a/node_modules/react-native-vision-camera/src/CameraDevice.ts
+++ b/node_modules/react-native-vision-camera/src/CameraDevice.ts
@@ -248,11 +248,11 @@ export interface CameraDevice {
   /**
    * All available formats for this camera device. Use this to find the best format for your use case and set it to the Camera's {@linkcode CameraProps.format | Camera's .format} property.
    *
-   * See [the Camera Formats documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/formats) for more information about Camera Formats.
+   * See [the Camera Formats documentation](https://react-native-vision-camera.com/docs/guides/formats) for more information about Camera Formats.
    */
   formats: CameraDeviceFormat[];
   /**
-   * Whether this camera device supports using Video Recordings (`video={true}`) and Frame Processors (`frameProcessor={...}`) at the same time. See ["The `supportsParallelVideoProcessing` prop"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) for more information.
+   * Whether this camera device supports using Video Recordings (`video={true}`) and Frame Processors (`frameProcessor={...}`) at the same time. See ["The `supportsParallelVideoProcessing` prop"](https://react-native-vision-camera.com/docs/guides/devices#the-supportsparallelvideoprocessing-prop) for more information.
    *
    * If this property is `false`, you can only enable `video` or add a `frameProcessor`, but not both.
    *
diff --git a/node_modules/react-native-vision-camera/src/CameraError.ts b/node_modules/react-native-vision-camera/src/CameraError.ts
index e434a45..05d84ba 100644
--- a/node_modules/react-native-vision-camera/src/CameraError.ts
+++ b/node_modules/react-native-vision-camera/src/CameraError.ts
@@ -152,14 +152,14 @@ class CameraError<TCode extends CameraErrorCode> extends Error {
 /**
  * Represents any kind of error that occured while trying to capture a video or photo.
  *
- * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
  */
 export class CameraCaptureError extends CameraError<CaptureError> {}
 
 /**
  * Represents any kind of error that occured in the Camera View Module.
  *
- * See the ["Camera Errors" documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/errors) for more information about Camera Errors.
+ * See the ["Camera Errors" documentation](https://react-native-vision-camera.com/docs/guides/errors) for more information about Camera Errors.
  */
 export class CameraRuntimeError extends CameraError<
   PermissionError | ParameterError | DeviceError | FormatError | FrameProcessorError | SessionError | SystemError | UnknownError
diff --git a/node_modules/react-native-vision-camera/src/CameraProps.ts b/node_modules/react-native-vision-camera/src/CameraProps.ts
index dc00166..5b0137c 100644
--- a/node_modules/react-native-vision-camera/src/CameraProps.ts
+++ b/node_modules/react-native-vision-camera/src/CameraProps.ts
@@ -13,7 +13,7 @@ export interface CameraProps extends ViewProps {
   /**
    * The Camera Device to use.
    *
-   * See the [Camera Devices](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices) section in the documentation for more information about Camera Devices.
+   * See the [Camera Devices](https://react-native-vision-camera.com/docs/guides/devices) section in the documentation for more information about Camera Devices.
    *
    * @example
    * ```tsx
@@ -31,7 +31,7 @@ export interface CameraProps extends ViewProps {
    */
   device: CameraDevice;
   /**
-   * Whether the Camera should actively stream video frames, or not. See the [documentation about the `isActive` prop](https://mrousavy.github.io/react-native-vision-camera/docs/guides/lifecycle#the-isactive-prop) for more information.
+   * Whether the Camera should actively stream video frames, or not. See the [documentation about the `isActive` prop](https://react-native-vision-camera.com/docs/guides/lifecycle#the-isactive-prop) for more information.
    *
    * This can be compared to a Video component, where `isActive` specifies whether the video is paused or not.
    *
@@ -41,17 +41,17 @@ export interface CameraProps extends ViewProps {
 
   //#region Use-cases
   /**
-   * Enables **photo capture** with the `takePhoto` function (see ["Taking Photos"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/capturing#taking-photos))
+   * Enables **photo capture** with the `takePhoto` function (see ["Taking Photos"](https://react-native-vision-camera.com/docs/guides/capturing#taking-photos))
    */
   photo?: boolean;
   /**
-   * Enables **video capture** with the `startRecording` function (see ["Recording Videos"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/capturing/#recording-videos))
+   * Enables **video capture** with the `startRecording` function (see ["Recording Videos"](https://react-native-vision-camera.com/docs/guides/capturing/#recording-videos))
    *
-   * Note: If you want to use `video` and `frameProcessor` simultaneously, make sure [`supportsParallelVideoProcessing`](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) is `true`.
+   * Note: If you want to use `video` and `frameProcessor` simultaneously, make sure [`supportsParallelVideoProcessing`](https://react-native-vision-camera.com/docs/guides/devices#the-supportsparallelvideoprocessing-prop) is `true`.
    */
   video?: boolean;
   /**
-   * Enables **audio capture** for video recordings (see ["Recording Videos"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/capturing/#recording-videos))
+   * Enables **audio capture** for video recordings (see ["Recording Videos"](https://react-native-vision-camera.com/docs/guides/capturing/#recording-videos))
    */
   audio?: boolean;
   //#endregion
@@ -80,7 +80,7 @@ export interface CameraProps extends ViewProps {
   /**
    * Enables or disables the native pinch to zoom gesture.
    *
-   * If you want to implement a custom zoom gesture, see [the Zooming with Reanimated documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/animated).
+   * If you want to implement a custom zoom gesture, see [the Zooming with Reanimated documentation](https://react-native-vision-camera.com/docs/guides/animated).
    *
    * @default false
    */
@@ -177,9 +177,9 @@ export interface CameraProps extends ViewProps {
   /**
    * A worklet which will be called for every frame the Camera "sees". Throttle the Frame Processor's frame rate with {@linkcode frameProcessorFps}.
    *
-   * > See [the Frame Processors documentation](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors) for more information
+   * > See [the Frame Processors documentation](https://react-native-vision-camera.com/docs/guides/frame-processors) for more information
    *
-   * Note: If you want to use `video` and `frameProcessor` simultaneously, make sure [`supportsParallelVideoProcessing`](https://mrousavy.github.io/react-native-vision-camera/docs/guides/devices#the-supportsparallelvideoprocessing-prop) is `true`.
+   * Note: If you want to use `video` and `frameProcessor` simultaneously, make sure [`supportsParallelVideoProcessing`](https://react-native-vision-camera.com/docs/guides/devices#the-supportsparallelvideoprocessing-prop) is `true`.
    *
    * @example
    * ```tsx
diff --git a/node_modules/react-native-vision-camera/src/FrameProcessorContext.ts b/node_modules/react-native-vision-camera/src/FrameProcessorContext.ts
new file mode 100644
index 0000000..bc83659
--- /dev/null
+++ b/node_modules/react-native-vision-camera/src/FrameProcessorContext.ts
@@ -0,0 +1,20 @@
+let workletRuntime = null
+let createWorklet = () => {
+  throw new Error("Reanimated V3 is not installed, Frame Processors are not available!")
+}
+
+try {
+  const reanimated = require('react-native-reanimated')
+  if (reanimated.createWorkletRuntime == null) {
+    console.warn("Frame Processors are disabled because you're using an incompatible version of Reanimated.")
+  }
+  workletRuntime = reanimated.createWorkletRuntime('VisionCamera')
+  createWorklet = reanimated.makeShareableCloneRecursive
+} catch {
+  // Frame Processors are not enabled
+}
+
+export const FrameProcessorContext = {
+  workletRuntime: workletRuntime,
+  createWorklet: createWorklet
+}
diff --git a/node_modules/react-native-vision-camera/src/hooks/useFrameProcessor.ts b/node_modules/react-native-vision-camera/src/hooks/useFrameProcessor.ts
index 697872f..7bb2a5f 100644
--- a/node_modules/react-native-vision-camera/src/hooks/useFrameProcessor.ts
+++ b/node_modules/react-native-vision-camera/src/hooks/useFrameProcessor.ts
@@ -1,14 +1,10 @@
-/* global _setGlobalConsole */
-
 import { DependencyList, useCallback } from 'react';
 import type { Frame } from '../Frame';
 
 type FrameProcessor = (frame: Frame) => void;
 
-const capturableConsole = console;
-
 /**
- * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://mrousavy.github.io/react-native-vision-camera/docs/guides/frame-processors))
+ * Returns a memoized Frame Processor function wich you can pass to the `<Camera>`. (See ["Frame Processors"](https://react-native-vision-camera.com/docs/guides/frame-processors))
  *
  * Make sure to add the `'worklet'` directive to the top of the Frame Processor function, otherwise it will not get compiled into a worklet.
  *
@@ -27,32 +23,6 @@ const capturableConsole = console;
 export function useFrameProcessor(frameProcessor: FrameProcessor, dependencies: DependencyList): FrameProcessor {
   return useCallback((frame: Frame) => {
     'worklet';
-
-    // @ts-expect-error
-    if (global.didSetConsole == null || global.didSetConsole === false) {
-      const console = {
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        debug: capturableConsole.debug.__callAsync,
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        log: capturableConsole.log.__callAsync,
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        warn: capturableConsole.warn.__callAsync,
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        error: capturableConsole.error.__callAsync,
-        // @ts-expect-error __callAsync is injected by native REA
-        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
-        info: capturableConsole.info.__callAsync,
-      };
-      // @ts-expect-error _setGlobalConsole is set by RuntimeDecorator::decorateRuntime
-      _setGlobalConsole(console);
-      // @ts-expect-error
-      global.didSetConsole = true;
-    }
-
     frameProcessor(frame);
     // eslint-disable-next-line react-hooks/exhaustive-deps
   }, dependencies);
