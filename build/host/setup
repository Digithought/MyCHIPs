#!/bin/bash
#Configure a cloud Chip Service Provider
#Copyright MyCHIPs.org; See license in root of this package
# -----------------------------------------------------------------------------
# Prior to use, build a cloud server and get the hostname and IP number
# Establish an ssh key for root on the server: ssh-copy-id root@Host_Name
# Then run this script, which will connect and configure the machine
# Usage: ./setup -i IP_Number Host_Name		#IP optional
csp_host=
csp_ip=
mychips_admin=admin
locale=en_US.UTF-8
node_version=18
mode=prod
key_file=siteKey.pem
cert_file=siteCert.pem
dkim_file=dkim_private.pem

oargs="$@"
pargs=()
while [[ $# -gt 0 ]]; do		#Parse command line
  case $1 in
    -a|--admin) mychips_admin="$2"; shift;;
    -d|--devel) mode="devel";;
    -i|--ip) csp_ip="$2"; shift;;
    -l|--locale) csp_locale="$2"; shift;;
    -z|--zone) csp_zone="$2"; shift;;
    *) pargs+=("$1");;
  esac
  shift
done
set -- "${pargs[@]}"			#Restore positional arguments

if [ -z "$1" ]; then			#Hostname is first parameter
  echo 'You must supply a host domain name'
  exit 1
else
  csp_host="$1"
fi

if [ -z "$csp_ip" ]; then		#Need to fetch the IP number?
  csp_ip="$(dig +short $csp_host)"
fi					#;echo "host:$csp_host ip:$csp_ip"

(echo "csp_host=$csp_host"
  cat setup-hostname) | ssh root@${csp_ip} 'bash -s'

(echo "csp_zone=$csp_zone"
  cat setup-timezone) | ssh root@${csp_ip} 'bash -s'

(echo "mode=$mode"
  cat setup-packages) | ssh root@${csp_ip} 'bash -s'

read language encoding junk <<<$(echo $locale |tr . ' ')	#;echo "language:$language encoding:$encoding"
(echo "language=$language encoding=$encoding"
  cat setup-locale) | ssh root@${csp_ip} 'bash -s'

if ! (echo "mychips_admin=$mychips_admin"
    cat setup-admin) | ssh root@${csp_ip} 'bash -s'; then
  echo -n "Input a password for ${mychips_admin}: "; read -s pwd	#;echo pwd:$pwd
  ssh root@${csp_ip} "passwd $mychips_admin" <<<"$(echo $pwd; echo $pwd)"
  echo " Setting up automatic ssh connection key for ${mychips_admin}"
  expect \
    -c "spawn ssh-copy-id ${mychips_admin}@${csp_ip}" \
    -c "expect { password:}" \
    -c "send \"$pwd\n\"" \
    -c "expect eof"
fi

(echo "node_version=$node_version"
  cat setup-node) | ssh root@${csp_ip} 'bash -s'

(echo "mode=$mode csp_host=$csp_host"
  cat setup-mychips) | ssh ${mychips_admin}@${csp_ip} 'bash -s'

(echo "mode=$mode"
  cat setup-postgres) | ssh root@${csp_ip} 'bash -s'

(echo "mode=$mode csp_host=$csp_host mychips_admin=$mychips_admin key_file=$key_file cert_file=$cert_file"
  cat setup-certbot) | ssh root@${csp_ip} 'bash -s'

(echo "mode=$mode mychips_admin=$mychips_admin key_file=$key_file cert_file=$cert_file dkim_file=$dkim_file"
  cat setup-systemd) | ssh root@${csp_ip} 'bash -s'
