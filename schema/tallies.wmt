#Copyright MyCHIPs.org; See license in root of this package
#----------------------------------------------------------------

tabtext mychips.tallies	{Tallies}		{Contains an entry for each tally, which is a record of credit transactions between two trading partners.} [concat {
    {tally_ent		{Tally Entity}		{The ID number of the entity or person this tally belongs to}}
    {tally_seq		{Tally Sequence}	{A unique number among all tallies owned by this entity}}
    {tally_uuid		{Tally GUID}		{A globally unique identifier for this tally}}
    {tally_type		{Tally Type}		{Determines if this entity is typically the creditor (stock) or the debtor (foil) for this tally} {
        {stock		{Stock}			{The entity this tally belongs to is typically the creditor on transactions}}
        {foil		{Foil}			{The entity this tally belongs to is typically the debtor on transactions}}
    }}
    {tally_date		{Tally Date}		{The date and time this tally was initiated between the parties}}
    {version		{Version}		{A number indicating the format standard this tally adheres to}}
    {partner		{Partner Entity}	{The entity id number of the other party to this tally}}
    {status		{Status}		{Current status of the tally record} {
        {void		{Void}			{The tally has been abandoned before being affirmed by both parties}}
        {draft		{Draft}			{The tally have bee suggested by one party but not yet accepted by the other party}}
        {open		{Open}			{The tally is affirmed by both parties and can be used for trading chits}}
        {close		{Close}			{No further trading can occur on this tally}}
    }}
    {request		{Request}		{Requested next status for the tally} {
        {void		{Void}			{One party has requested to negotiation before the tally has been opened}}
        {draft		{Draft}			{One party is suggesting terms for a tally}}
        {open		{Open}			{One party is requesting to open the tally according to the specified terms}}
        {close		{Close}			{One party is requesting to discontinue further trading on this tally}}
    }}
    {comment		{Comment}		{Any notes the user might want to enter regarding this tally}}
    {hold_sig		{Holder Signed}		{The digital signature of the entity that owns/holds this tally}}
    {part_sig		{Partner Signed}	{The digital signature of the other party to this tally}}
    {contract		{Contract}		{The hash ID of the standard contract this tally is based upon.}}
    {stock_terms	{Stockee Terms}		{The credit terms by which the holder of the tally stock is governed}}
    {foil_terms		{Foilee Terms}		{The credit terms by which the holder of the tally foil is governed}}
    {dr_limit		{Debit Limit}		{The maximum amount the Vendor (Stock) is granted to borrow from the Client (Foil) in exchange for goods and services}}
    {cr_limit		{Credit Limit}		{The maximum amount the Client (Foil) is granted to borrow from the Vendor (Stock) in exchange for goods and services}}
    {target		{Target Balance}	{The ideal total of units the lift administrator should attempt to accumulate when conducting lifts.  Lifts/drops beyond this value may be subject to margin costs.}}
    {reward		{Buy Margin}		{A cost associated with a lift/drop through this tally, which would result in an accumulation of value for the holder in excess of the target value.  Zero means no cost.  A positive percentage indicates a cost, or disincentive to trade.  For example, 0.01 means a 1% cost for doing a lift.  A negative number means the tally owner will give up some value in order to get lifts/drops done.}}
    {clutch		{Sell Margin}		{A cost associated with a lift/drop through this tally, which would result in a loss of value for the holder.  Zero means no cost.  A value of 1 will effectively prevent further trading in that direction.}}
    {bound		{Trade Limit}		{The maximum amount of value the stock/foil owner is willing to accumulate on this tally}}
    {units_c		{Cached Units}		{A cached copy of the total of all the chits on this tally, from the perspective of the tally's owner}}
    {chain_conf		{Chain Confirmed}	{The index of the last chit in the chain that has been confirmed with the partner peer}}
    {digest		{Digest Hash}		{A digitally encrypted hash indicating a unique but condensed representation of the critical information belonging to the tally.  The originator will sign this hash to make the lift binding.}}
    {units_gc		{Units Good}		{Net milliCHIPs committed on this tally}}
    {units_pc		{Units Pending}		{Net milliCHIPs committed on this tally if/when current pending transactions have all settled}}
    {_agent		{Peer Agent}		{Cached value of peer's agent used to ensure referential integrity}}
    {_last_chit		{Last Chit}		{Used internally to create new chit record index numbers}}
    {_last_tset		{Last Setting}		{Used internally to create new tally setting records}}
} $glob::stampt] -messages {
    {LMG		{Invalid Lift Margin}	{The lift margin should be specified as a number between -1 and 1, non-inclusive.  More normally, it should be a fractional number such as 0.05, which would assert a 5% cost on lifts, or -0.02 which would give a 2% bonus for doing a lift.}}
    {DMG		{Invalid Drop Margin}	{The drop margin should be specified as a number between 0 and 1, inclusive.  More normally, it should be a fractional number such as 0.2, which would assert a 20% cost on reverse lifts.}}
    {VER		{Bad Tally Version}	{Tally version must be 1 or greater}}
    {NSP		{Same Partner ID}	{Tally partner must be a separate entity}}
    {IVS		{Invalid Status}	{Tally status value is not valid}}
    {IVR		{Invalid Request}	{Tally request value is not valid}}
    {UCI		{User CHIP ID}		{An open tally must include a valid user CHIP ID}}
    {PCI		{Partner CHIP ID}	{An open tally must include a valid partner CHIP ID}}
    {UCM		{User Certificate}	{An open tally must contain a user certificate}}
    {PCM		{Partner Certificate}	{An open tally must contain a partner certificate}}
    {USM		{User Signature}	{An open tally must contain a user signature}}
    {PSM		{Partner Signature}	{An open tally must contain a partner signature}}
    {CNP		{Tally Contract}	{An open tally must reference a contract}}
    {STR		{Illegal State Request}	{The requested state transition is not allowed}}
    {STT		{Illegal State Change}	{The executed state transition is not allowed}}
}

tabtext mychips.tallies_v {Tallies}		{Standard view containing an entry for each tally, which is a record of credit transactions between two trading partners.} {
    {state		{State}			{A computed value indicating the state of progress as the tally goes through its lifecycle}}
    {action		{Action}		{Indicates this tally requires some kind of action on the part of the user, such as accepting, rejecting, confirming, etc.}}
    {user_name		{User Name}		{The name of this tally's owner}}
    {part_name		{Partner Name}		{The name of the tally partner}}
    {user_addr		{User Address}		{The CHIP address of the owner of the tally}}
    {part_addr		{Partner Address}	{The CHIP address of the tally partner}}
    {inside		{Inside}		{The partner entity is also hosted by the same system as the tally owner}}
    {chits		{Chits}			{The total number of chit transactions recorded on the tally}}
    {latest		{Last Chit}		{The date of the latest chit on the tally}}
    {user_serv		{User Server}		{The server ID, if any, for the owner of this tally}}
    {json_core		{JSON Core}		{A JSON representation of the parts of the tally that will be digitally hashed and signed}}
    {json		{JSON}			{A JSON representation of the tally, including the digital hash}}
    {digest_v		{Computed Digest}	{A version of the hash digest computed from scratch each time it is fetched (to be compared to the stored version)}}
    {clean		{Clean}			{Indicates that the stored hash matches the computed hash.  This is an indication that the tally has not been tampered with.}}
    {policy		{Policy}		{A JSON record of the standard lift and drop parameters}}
    {user_cid		{User CHIP ID}		{CHIP name of the entity that owns this part of the tally}}
    {user_sock		{User Socket}		{Socket address of the entity that owns this part of the tally}}
    {part_cid		{Partner CHIP ID}	{CHIP name of the partner entity on the other end of the tally}}
    {part_sock		{Partner Socket}	{Socket address of the partner entity on the other end of the tally}}
}

tabtext mychips.tallies_v_me {My Tallies}	{View containing all the tallies owned by the current user.} {
} -messages {
    {lock	{Lock Account}		{Put the specified account(s) into lockdown mode, so no further trading can occur}}
    {unlock	{Unlock Account}	{Put the specified account(s) into functional mode, so normal trading can occur}}
    {launch.title	{Tallies}		{Peer Trading Relationship Management}}
    {launch.instruct	{Basic Instructions}	{
      <p>Tallies are used to document and track trading agreements between partners.
      <p>You can request a new tally from the action menu in the Peer tab.
    }}
}

tabtext mychips.tally_sets {Tally Settings}	{An archive of past trading settings applied by the tally owner} {
    {tset_ent		{Setting Entity}	{The entity who owns the tally these settings apply to}}
    {tset_seq		{Setting Sequence}	{Indicates which tally these settings apply to}}
    {tset_idx		{Setting Index}		{A unique index number for each new group of settings}}
    {settings		{Settings}		{A JSON expression of the trading parameters that have been asserted by the tally owner}}
    {tset_date		{Set Timestamp}		{The date/time when the settings were checked into the database}}
}

tabtext mychips.tally_tries {Tally Retries}	{Table contains information about retries with peers to establish tallies} {
    {ttry_ent		{Tally Entity}		{The entity that owns the tally}}
    {ttry_seq		{Tally Sequence}	{The unique sequence number of the tally}}
    {tries		{Retries}		{How many times the peer server has attempted to act on the state request for this tally}}
    {last		{Last Tried}		{When the last attempt was made to process state changes on this tally}}
}
