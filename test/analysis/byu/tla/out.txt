TLC2 Version 2.15 of Day Month 20?? (rev: eb3ff99)
Running breadth-first search Model-Checking with fp 91 and seed 2622721017223160594 with 1 worker on 2 cores with 1753MB heap and 64MB offheap memory (Linux 4.15.0-48-generic amd64, Oracle Corporation 1.8.0_181 x86_64, MSBDiskFPSet, DiskStateQueue).
Parsing file /home/kylona/workspace/MyCHIPs/test/analysis/byu/tla/lifts.tla
Parsing file /tmp/Integers.tla
Parsing file /tmp/Sequences.tla
Parsing file /tmp/TLC.tla
Parsing file /tmp/Naturals.tla
Parsing file /tmp/FiniteSets.tla
Semantic processing of module Naturals
Semantic processing of module Integers
Semantic processing of module Sequences
Semantic processing of module FiniteSets
Semantic processing of module TLC
Semantic processing of module lifts
Starting... (2020-10-29 10:41:18)
Computing initial states...
Finished computing initial states: 1 distinct state generated at 2020-10-29 10:41:19.
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
Error: Invariant PartnersBalancesAreSymmetricalInTheEnd is violated.
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C">>
Error: The behavior up to this point is:
State 1: <Initial predicate>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProcStart", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 2: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "l1", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 3: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProposeLift_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 4: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "lsm_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 5: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "PLR", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<>>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 6: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<>>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 7: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<>>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 8: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "lpb", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<>>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 9: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<>>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 10: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "l1", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 11: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "l2", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 12: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "l2w", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 13: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "lpb", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 14: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 15: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "l1", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 16: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "l2", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 17: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 18: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "lpb", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 19: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 20: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l1"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<"Start">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 21: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 22: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2w"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 23: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "lpb"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "D">>
State 24: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "Done"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Message Failed">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "C">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "D">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
Error: Invariant PartnersBalancesAreSymmetricalInTheEnd is violated.
<<"Start", "A", "Proposing Lift">>
<<"Start", "B">>
<<"Start", "C", "Handling Lift", "Message Failed">>
Error: The behavior up to this point is:
State 1: <Initial predicate>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProcStart", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 2: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "l1", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 3: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProposeLift_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 4: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "lsm_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 5: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "PLR", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 6: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 7: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 8: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l1", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 9: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 10: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 11: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l1", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 12: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l2", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 13: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 14: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l3", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 15: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "HandleLift_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 16: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "L1_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 17: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "lsm_H", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 18: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "HLR", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 19: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 20: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l6", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 21: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l4", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 22: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 23: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lpb", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 24: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 25: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "lpb", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 26: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 27: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "lpb", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 28: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 29: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l1"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<"Start">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 30: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 31: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2w"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 32: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "lpb"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "D">>
State 33: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "Done"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift", "Message Failed">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "C", "Handling Lift", "Message Failed">>
<<"Start", "B">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
Progress(37) at 2020-10-29 10:41:22: 26,546 states generated (26,546 s/min), 8,156 distinct states found (8,156 ds/min), 592 states left on queue.
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<<"Start", "D">>
Error: Invariant PartnersBalancesAreSymmetricalInTheEnd is violated.
<<"Start", "A", "Proposing Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
Error: The behavior up to this point is:
State 1: <Initial predicate>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProcStart", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 2: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "l1", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 3: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProposeLift_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 4: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "lsm_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 5: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "PLR", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 6: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 7: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 8: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l1", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 9: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 10: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 11: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 12: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "l1", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 13: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "l2", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 14: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 15: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "l3", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 16: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "HandleLift_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 17: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "L1_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 18: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "lsm_H", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 19: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "HLR", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 20: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 21: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "HandleLift_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 22: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "L1_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 23: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "lsm_H", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 24: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "HLR", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 25: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 26: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l6", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 27: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l4", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 28: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 29: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l6", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 30: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l4", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 31: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 32: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lpb", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 33: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 34: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "lpb", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 35: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 36: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "lpb", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 37: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 38: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l1"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 39: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 40: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2w"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 41: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "lpb"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "D">>
State 42: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "Done"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Message Failed">>
<<"Start", "A", "Proposing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "D">>
Error: Invariant PartnersBalancesAreSymmetricalInTheEnd is violated.
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<<"Start", "B", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
Error: The behavior up to this point is:
State 1: <Initial predicate>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProcStart", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 2: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "l1", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 3: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProposeLift_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 4: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "lsm_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 5: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "PLR", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 6: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 7: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 8: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 9: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l1", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 10: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l2", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 11: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l2w", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 12: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 13: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l1", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 14: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l2", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 15: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 16: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l3", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 17: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "HandleLift_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 18: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "L1_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 19: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "lsm_H", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 20: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "HLR", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 21: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 22: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "HandleLift_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 23: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "L1_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 24: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "lsm_H", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 25: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "HLR", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 26: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 27: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "HandleLift_", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 28: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "ValidateLift_", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Handling Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 29: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lpv", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Handling Lift", "Validating Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> FALSE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 30: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lsm", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> FALSE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 31: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "L2", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {[type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1]}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> FALSE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 32: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "VLR", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {[type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1]}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> FALSE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 33: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "HLR", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {[type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1]}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 34: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l5", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {[type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1]}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 35: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l6", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {[type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1]}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 36: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l4", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {[type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1]}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 37: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 38: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l6", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 39: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l4", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 40: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 41: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l6", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 42: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l4", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 43: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 44: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lpb", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 45: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 46: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "lpb", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 47: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 48: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "lpb", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 49: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 50: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l1"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 51: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 52: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2w"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 53: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "lpb"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "D">>
State 54: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "Done"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid",
         "Message Failed" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Message Failed" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
Error: Invariant PartnersBalancesAreSymmetricalInTheEnd is violated.
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
Error: The behavior up to this point is:
State 1: <Initial predicate>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProcStart", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 2: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "l1", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 3: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProposeLift_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 4: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "lsm_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 5: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "PLR", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 6: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 7: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 8: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 9: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l1", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 10: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l2", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 11: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l2w", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 12: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 13: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l1", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 14: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l2", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 15: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 16: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l3", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 17: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "HandleLift_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 18: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "L1_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 19: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "lsm_H", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 20: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "HLR", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 21: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 22: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "HandleLift_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 23: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "L1_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 24: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "lsm_H", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 25: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "HLR", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 26: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 27: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "HandleLift_", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 28: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "ValidateLift_", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Handling Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 29: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lpt", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Handling Lift", "Validating Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> TRUE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 30: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "L1", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> TRUE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 31: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "VLR", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> TRUE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 32: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "HLR", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 33: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l5", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 34: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l6", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 35: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l4", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 36: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 37: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l6", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 38: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l4", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 39: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 40: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 41: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 42: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l6", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 43: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "TimeoutLift_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 44: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CL2", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 45: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CL4", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 46: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CL3", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 47: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CLR", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 48: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l4", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 49: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 50: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l6", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 51: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l4", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 52: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 53: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lpb", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 54: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 55: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "lpb", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 56: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 57: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "lpb", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 58: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 59: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l1"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 60: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 61: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2w"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 62: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "lpb"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "D">>
State 63: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "Done"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
Error: Invariant PartnersBalancesAreSymmetricalInTheEnd is violated.
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift">>
Error: The behavior up to this point is:
State 1: <Initial predicate>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProcStart", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 2: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "l1", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 3: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProposeLift_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 4: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "lsm_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 5: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "PLR", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 6: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 7: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 8: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 9: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l1", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 10: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l2", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 11: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l2w", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 12: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 13: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l1", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 14: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l2", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 15: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 16: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l3", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 17: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "HandleLift_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 18: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "L1_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 19: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "lsm_H", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 20: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "HLR", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 21: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 22: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "HandleLift_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 23: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "L1_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 24: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "lsm_H", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 25: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "HLR", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 26: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 27: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "HandleLift_", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 28: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "ValidateLift_", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Handling Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 29: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lpv", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Handling Lift", "Validating Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> FALSE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 30: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lsm", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> FALSE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 31: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "L2", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> FALSE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 32: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "VLR", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> FALSE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 33: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "HLR", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 34: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l5", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 35: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l6", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 36: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l4", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 37: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 38: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l6", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 39: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l4", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 40: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 41: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 42: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 43: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CommitLift_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 44: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CL2_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 45: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CL4_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 46: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CL3_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 47: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CLR_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 48: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l6", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 49: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l4", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 50: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 51: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l6", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 52: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l4", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 53: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 54: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lpb", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 55: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 56: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "lpb", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 57: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 58: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "lpb", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 59: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 60: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l1"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 61: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 62: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2w"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 63: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "lpb"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "D">>
State 64: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "Done"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "C", "Handling Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
Error: Invariant PartnersBalancesAreSymmetricalInTheEnd is violated.
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
Error: The behavior up to this point is:
State 1: <Initial predicate>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProcStart", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 2: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "l1", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 3: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProposeLift_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 4: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "lsm_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 5: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "PLR", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 6: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 7: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 8: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 9: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l1", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 10: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l2", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 11: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l2w", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 12: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 13: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l1", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 14: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l2", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 15: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 16: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l3", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 17: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "HandleLift_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 18: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "L1_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 19: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "lsm_H", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 20: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "HLR", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 21: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 22: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "HandleLift_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 23: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "L1_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 24: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "lsm_H", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 25: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "HLR", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 26: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 27: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "HandleLift_", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 28: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "ValidateLift_", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Handling Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 29: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lpt", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Handling Lift", "Validating Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> TRUE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 30: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "L1", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> TRUE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 31: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "VLR", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> TRUE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 32: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "HLR", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 33: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l5", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 34: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l6", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 35: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l4", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 36: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 37: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l6", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 38: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l4", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 39: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 40: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 41: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 42: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l6", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 43: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "TimeoutLift_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 44: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CL2", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 45: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CL4", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 46: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CL3", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 47: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CLR", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 48: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l4", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 49: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 50: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l6", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 51: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l4", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 52: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 53: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l3", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 54: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 55: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l6", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 56: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "TimeoutLift_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 57: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "CL2", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 58: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "CL4", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 59: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "CL3", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 60: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "CLR", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[from |-> defaultInitValue, to |-> defaultInitValue, pc |-> "l4", liftId |-> defaultInitValue, nextPeer |-> defaultInitValue, liftValue_T |-> defaultInitValue, procedure |-> "TimeoutLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 61: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l4", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 62: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 63: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lpb", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 64: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 65: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "lpb", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 66: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 67: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "lpb", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 68: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 69: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l1"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<"Start">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 70: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 71: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2w"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 72: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "lpb"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "D">>
State 73: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Timeout" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Fail" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "Done"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftTimeoutJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftTimeoutJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Timeout" >>,
  B |-> <<"Start", "B", "Handling Lift", "Timeout Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "C", "Handling Lift", "Timeout Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
Error: Invariant PartnersBalancesAreSymmetricalInTheEnd is violated.
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
Error: The behavior up to this point is:
State 1: <Initial predicate>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProcStart", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 2: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "l1", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 3: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [A |-> << >>, B |-> << >>, C |-> << >>, D |-> << >>]
/\ pc = [A |-> "ProposeLift_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 1
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 4: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = {}
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "lsm_", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 5: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "PLR", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "l2", proposer |-> defaultInitValue, cycle |-> defaultInitValue, liftValue_P |-> defaultInitValue, nextPeer_ |-> defaultInitValue, liftGuid |-> defaultInitValue, procedure |-> "ProposeLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 6: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 7: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 8: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "ProcStart", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [A |-> <<"Start", "A", "Proposing Lift">>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 9: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l1", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 10: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l2", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 11: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l2w", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 12: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "ProcStart", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<>>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 13: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l1", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 14: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l2", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 15: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 16: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l3", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 17: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |-> << >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "HandleLift_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 18: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "L1_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 19: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "lsm_H", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 20: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> <<"A", "B", "C">>,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "HLR", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 21: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l3", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 22: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |-> << >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "HandleLift_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 23: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "L1_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 24: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "lsm_H", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 25: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> <<"A", "B", "C">>,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "HLR", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 26: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |-> defaultInitValue,
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l3", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 27: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> defaultInitValue,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "HandleLift_", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 28: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "ValidateLift_", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Handling Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 29: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lpv", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |-> <<"Start", "A", "Proposing Lift", "Handling Lift", "Validating Lift">>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> FALSE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 30: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lsm", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> FALSE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 31: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "L2", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> FALSE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 32: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "VLR", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> FALSE,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[pc |-> "HLR", originator |-> defaultInitValue, liftId_V |-> defaultInitValue, prevPeer |-> "C", timeout |-> defaultInitValue, procedure |-> "ValidateLift"], [route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 33: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> "A",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "HLR", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> 1,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> "B",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<[route |-> defaultInitValue, pc |-> "l5", from_ |-> defaultInitValue, to_ |-> defaultInitValue, liftValue |-> defaultInitValue, originator_ |-> defaultInitValue, liftId_ |-> defaultInitValue, prevPeer_ |-> defaultInitValue, procedure |-> "HandleLift"]>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 34: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l5", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 35: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l6", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 36: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l4", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = {}
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 37: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 38: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l6", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 39: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l4", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 40: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 41: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "C",
        to |-> "B",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l3", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 42: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l5", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 43: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CommitLift_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 44: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CL2_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 45: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CL4_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 46: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CL3_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 47: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> "A",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> "B",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> 1,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "CLR_", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> 100,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> "C",
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 48: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l6", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 49: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l4", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 50: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 51: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l6", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 52: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l4", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 53: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 54: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "A",
        to |-> "C",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l3", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 55: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l5", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 56: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Seek" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "CommitLift_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 57: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "CL2_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 58: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "CL4_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 59: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "CL3_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> -100, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 60: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "B",
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "C",
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 1,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "CLR_", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> 100,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> "A",
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<[pc |-> "l6", from_C |-> defaultInitValue, to_C |-> defaultInitValue, liftId_C |-> defaultInitValue, nextPeer_C |-> defaultInitValue, liftValue_C |-> defaultInitValue, procedure |-> "CommitLift"]>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 61: <Next line 954, col 10 to line 956, col 73 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l6", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 62: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l4", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 63: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "l2w", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 64: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "lpb", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 65: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "l2w", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 66: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "lpb", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 67: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "l2w", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 68: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "lpb", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 69: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "ProcStart"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<>> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 70: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l1"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<"Start">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 71: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 72: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "l2w"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

State 73: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "lpb"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "D">>
State 74: <Next line 957, col 16 to line 957, col 46 of module lifts>
/\ toAct = [ A |->
      [ route |-> <<"A", "B", "C">>,
        type |-> "LiftJSON",
        from |-> "B",
        to |-> "A",
        originator |-> "A",
        liftId |-> 1,
        value |-> 100 ],
  B |-> [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  C |-> [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  D |-> defaultInitValue ]
/\ toCheck = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ messages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftGuid = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ to_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ route = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_V = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ lifts = [ A |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  B |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  C |->
      << [ route |-> <<"A", "B", "C">>,
           originator |-> "A",
           value |-> 100,
           state |-> "Good" ] >>,
  D |-> << >> ]
/\ pc = [A |-> "Done", B |-> "Done", C |-> "Done", D |-> "Done"]
/\ LiftProposers = {"A"}
/\ liftValue_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_P = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_T = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextPeer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ cycle_ = [ A |-> <<"A", "B", "C">>,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ readMessages = { [type |-> "LiftCommitJSON", from |-> "A", to |-> "B", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "B", to |-> "C", liftId |-> 1],
  [type |-> "LiftCommitJSON", from |-> "C", to |-> "A", liftId |-> 1],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "A",
    to |-> "C",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "B",
    to |-> "A",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ],
  [ route |-> <<"A", "B", "C">>,
    type |-> "LiftJSON",
    from |-> "C",
    to |-> "B",
    originator |-> "A",
    liftId |-> 1,
    value |-> 100 ] }
/\ nextPeer_C = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ printBuffer = [ A |->
      << "Start",
         "A",
         "Proposing Lift",
         "Handling Lift",
         "Validating Lift",
         "Lift Valid" >>,
  B |-> <<"Start", "B", "Handling Lift", "Committing Lift">>,
  C |-> <<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>,
  D |-> <<"Start", "D">> ]
/\ tallies = ( <<"A", "B", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"A", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 0] @@
  <<"A", "D", "Stock">> :> [balance |-> 20, projectedBalance |-> 20] @@
  <<"B", "A", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"B", "C", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "A", "Foil">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "B", "Stock">> :> [balance |-> 0, projectedBalance |-> 0] @@
  <<"C", "D", "Foil">> :> [balance |-> -100, projectedBalance |-> -100] @@
  <<"D", "A", "Foil">> :> [balance |-> -20, projectedBalance |-> -20] @@
  <<"D", "C", "Stock">> :> [balance |-> 100, projectedBalance |-> 100] )
/\ liftValue = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ from_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Links = {<<"A", "B">>, <<"B", "C">>, <<"C", "A">>, <<"C", "D">>, <<"D", "A">>}
/\ prevPeer_ = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ nextLiftGuid = 2
/\ to = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ prevPeer = [ A |-> "C",
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ timeout = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftValue_ = [ A |-> 100,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ Cycles = {<<"A", "B", "C">>}
/\ proposer = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ originator = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ liftId = [ A |-> defaultInitValue,
  B |-> defaultInitValue,
  C |-> defaultInitValue,
  D |-> defaultInitValue ]
/\ stack = [A |-> <<>>, B |-> <<>>, C |-> <<>>, D |-> <<>>]
/\ Users = {"A", "B", "C", "D"}

<<"Start", "C", "Handling Lift", "Committing Lift", "Message Failed">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Timeout Lift">>
<<"Start", "B", "Handling Lift", "Timeout Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Timeout",
   "Timeout Lift" >>
<<"Start", "D">>
<<"Start", "C", "Handling Lift", "Committing Lift">>
<<"Start", "B", "Handling Lift", "Committing Lift">>
<< "Start",
   "A",
   "Proposing Lift",
   "Handling Lift",
   "Validating Lift",
   "Lift Valid",
   "Committing Lift" >>
Model checking completed. No error has been found.
  Estimates of the probability that TLC did not check all reachable states
  because two distinct states had the same fingerprint:
  calculated (optimistic):  val = 1.3E-10
  based on the actual fingerprints:  val = 1.3E-10
106064 states generated, 30967 distinct states found, 0 states left on queue.
The depth of the complete state graph search is 82.
The average outdegree of the complete state graph is 1 (minimum is 0, the maximum 5 and the 95th percentile is 2).
Finished in 08s at (2020-10-29 10:41:26)
