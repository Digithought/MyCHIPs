#!/bin/bash
#Run multiple servers on multiple machines to simulate a larger MyCHIPs network
#TODO:
#- How to get progress updates to print in order, after correct Machine address?
#- Update database schema if/where appropriate
#- How to launch separate servers for different hostID's?
#- 

#Common code
#-------------------------------------------------------------------------------
tmpdir="/var/tmp/mychips"

this="$(basename ${BASH_SOURCE})"
mypath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";	#echo "mypath:$mypath"
source $mypath/config

mychips="$mypath"
mysim=""
while [[ $path != / ]]; do				#Find first bin dir above me
  if find "$mychips" -maxdepth 1 -mindepth 1 -type d -name bin | grep -q .; then
    break
  fi
  mysim="$(basename $mychips)/${mysim}"
  mychips="$(cd $mychips/.. && pwd)"
done

if [ "$(basename "$mychips")" != "mychips" ]; then
  echo "Can't find mychips main directory"
  exit 1
fi

#This part gets run on the local machine only
#-------------------------------------------------------------------------------
if [ "$1" != "remote" ]; then
  if [ "$(basename "$srcdir")" != "devel" ]; then
    echo "Can't find mychips remote development directory path"
    exit 1
  fi
  
# echo "mychips:$mychips mysim:$mysim base:$(basename $mychips) source:$this"
  for mach in "${machines[@]}"; do			#Update each machine with mirror of latest source code
    echo "Machine:$mach"
    if [ "$1" != "stop" ]; then
      rsync -ar --delete "$mychips" "$mychips"/../node_modules "$mychips"/../wylib "$mychips"/../wyselib "$mychips"/../wyseman "$mychips"/../wyclif "${user}@${mach}:${srcdir}"
    fi
    ssh -f ${user}@${mach} "${srcdir}/mychips/${mysim}${this} remote $@"	#And then execute this script remotely
  done
  
  sleep 1						#Give time for remote comments to post before returning to prompt
  exit 0
fi

#This part gets run over ssh on each remote machine
#-------------------------------------------------------------------------------
shift							#Discard "remote" argument
rpms=""							#Install any rpms we may need
for pkg in postgresql-server postgresql-devel postgresql-pltcl postgresql-contrib ruby rubygem-pg rubygem-tk; do
  if ! rpm -qi $pkg >/dev/null; then
    rpms="${rpms} $pkg"
  fi
done
#echo "rpms:$rpms"
if [ ! -z "$rpms" ]; then
  dnf install -y $rpms
fi

if [ ! -d /var/lib/pgsql/data/base ]; then		#Initialize PostgreSQL
  su -l postgres -c "initdb --locale=C"			#Might also use: eng_US.UTF-8
  systemctl enable postgresql
  systemctl start postgresql
fi

if [ "$(psql -A -t template1 postgres -c "select * from pg_roles where rolname = 'admin'" |wc -l)" -lt 1 ]; then
  su -l postgres -c 'createuser -d -s -r admin'		#Create our administrative user
fi

if ! cd "$srcdir"/mychips; then
  echo "Can't find MyCHIPs source directory"
  exit 1
fi

mkdir -p $tmpdir
if [ -f $tmpdir/pids ]; then				#Kill any running servers
  for p in $(cat $tmpdir/pids); do
    echo "  Killing old server pid: $p"
    kill $p 2>/dev/null
  done
  rm $tmpdir/pids; touch $tmpdir/pids
fi

#echo "args:$@"
if [ "$1" != "stop" ]; then
  bin/mychips.js &					#And launch a fresh one
  pid=$!
  echo "  SPA Server PID: $pid"
  echo $pid >>$tmpdir/pids				#Remember its Process ID for next time
fi
